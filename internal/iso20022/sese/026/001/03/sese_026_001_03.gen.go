// Code generated by main. DO NOT EDIT.

package sese_026_001_03

import (
	"bytes"
	"encoding/xml"
	"time"
)

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalParameters14 struct {
	PreConf           PreConfirmation1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PreConf,omitempty"`
	PrtlSttlm         PartialSettlement2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrtlSttlm,omitempty"`
	TrptyAgtCollTxId  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TrptyAgtCollTxId,omitempty"`
	ClntTrptyCollTxId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ClntTrptyCollTxId,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternatePartyIdentification2 struct {
	IdTp    IdentificationType4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 IdTp"`
	Ctry    CountryCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ctry"`
	AltrnId Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId"`
}

type AmountAndDirection2 struct {
	AcrdIntrstInd       bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AcrdIntrstInd,omitempty"`
	StmpDtyInd          bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StmpDtyInd,omitempty"`
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms11            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FXDtls,omitempty"`
	ValDt               DateAndDateTimeChoice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ValDt,omitempty"`
}

type AmountAndDirection7 struct {
	Amt       ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Amt"`
	CdtDbtInd CreditDebitCode         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CdtDbtInd"`
}

type AmountAndDirection9 struct {
	Amt                 ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CdtDbtInd,omitempty"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms11            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FXDtls,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of LAMI, NBOR, YBOR
type AutoBorrowing1Code string

type AutomaticBorrowing1Choice struct {
	Cd    AutoBorrowing1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICFIIdentifier string

type BeneficialOwnership1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type BlockTrade1Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

// Must match the pattern [A-Z]{1,6}
type CFIIdentifier string

type CashAccountIdentification5Choice struct {
	IBAN  IBAN2007Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 IBAN"`
	Prtry Max34Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type CashParties9 struct {
	Dbtr    PartyIdentificationAndAccount48 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Dbtr,omitempty"`
	DbtrAgt PartyIdentificationAndAccount50 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DbtrAgt,omitempty"`
	Cdtr    PartyIdentificationAndAccount48 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cdtr,omitempty"`
	CdtrAgt PartyIdentificationAndAccount50 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CdtrAgt,omitempty"`
}

type CashSettlementSystem1Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CentralCounterPartyEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type ClassificationType2Choice struct {
	ClssfctnFinInstrm CFIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnClssfctn"`
}

type Counterparty5Choice struct {
	Sellr PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Sellr"`
	Buyr  PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Buyr"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesSttlmTxRvslAdvc SecuritiesSettlementTransactionReversalAdviceV03 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SctiesSttlmTxRvslAdvc"`
}

// May be one of ELIG, RETL, PROF
type Eligibility1Code string

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

// May be one of CCIR, COMM, CRDS, CRPR, CRSP, CRTL, EQPT, EQUS, EXPT, EXTD, FIXI, FORW, FORX, FUTR, LIQU, OPTN, OTCD, PAYM, REPO, SBSC, SCIE, SCIR, SCRP, SLEB, SLOA, SWPT, TRCP, BFWD, RVPO, TBAS, SHSL
type ExposureType2Code string

type ExposureType4Choice struct {
	Cd    ExposureType2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentAttributes35 struct {
	PlcOfListg             MarketIdentification3Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity2Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RegnForm,omitempty"`
	PmtFrqcy               Frequency3Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PmtSts,omitempty"`
	VarblRateChngFrqcy     Frequency3Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 VarblRateChngFrqcy,omitempty"`
	ClssfctnTp             ClassificationType2Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle4Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OptnStyle,omitempty"`
	OptnTp                 OptionType2Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 IntrstRate,omitempty"`
	YldToMtrtyRate         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 YldToMtrtyRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number2Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CpnAttchdNb,omitempty"`
	PoolNb                 GenericIdentification37                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MktOrIndctvPric,omitempty"`
	ExrcPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ExrcPric,omitempty"`
	SbcptPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SbcptPric,omitempty"`
	ConvsPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ConvsPric,omitempty"`
	StrkPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification14             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls Max350Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AmtsdVal"`
}

type ForeignExchangeTerms11 struct {
	UnitCcy  ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 UnitCcy"`
	QtdCcy   ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 QtdCcy"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 XchgRate"`
	RsltgAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RsltgAmt"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity2Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type Frequency3Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Issr,omitempty"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SchmeNm,omitempty"`
}

type GenericIdentification21 struct {
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id,omitempty"`
}

type GenericIdentification37 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Issr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Identification1 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type IdentificationType4Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat1Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type InvestorCapacity1Choice struct {
	Cd    Eligibility1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type LetterOfGuarantee1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide1Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Desc"`
}

type MarketIdentification3Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Desc"`
}

type MarketIdentification4 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id,omitempty"`
	Tp MarketType3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType3Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Adr,omitempty"`
}

type NettingEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type Number2Choice struct {
	Shrt Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Shrt"`
	Lng  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Lng"`
}

type OpeningClosing1Choice struct {
	Cd    OpeningClosing1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of CLOP, OPEP
type OpeningClosing1Code string

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle4Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType2Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AmtsdVal"`
}

// May be one of SINT, MLTF, RMKT, MKTM, INVE, TAGT
type OriginatorRole2Code string

type OtherAmounts18 struct {
	AcrdIntrstAmt   AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AcrdIntrstAmt,omitempty"`
	ChrgsFees       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ChrgsFees,omitempty"`
	CtryNtlFdrlTax  AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CtryNtlFdrlTax,omitempty"`
	TradAmt         AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradAmt,omitempty"`
	ExctgBrkrAmt    AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ExctgBrkrAmt,omitempty"`
	IsseDscntAllwnc AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 IsseDscntAllwnc,omitempty"`
	PmtLevyTax      AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PmtLevyTax,omitempty"`
	LclTax          AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LclTax,omitempty"`
	LclTaxCtrySpcfc AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LclTaxCtrySpcfc,omitempty"`
	LclBrkrComssn   AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LclBrkrComssn,omitempty"`
	Mrgn            AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Mrgn,omitempty"`
	Othr            AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Othr,omitempty"`
	RgltryAmt       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RgltryAmt,omitempty"`
	ShppgAmt        AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ShppgAmt,omitempty"`
	SpclCncssn      AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SpclCncssn,omitempty"`
	StmpDty         AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StmpDty,omitempty"`
	StockXchgTax    AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StockXchgTax,omitempty"`
	TrfTax          AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TrfTax,omitempty"`
	TxTax           AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TxTax,omitempty"`
	ValAddedTax     AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ValAddedTax,omitempty"`
	WhldgTax        AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 WhldgTax,omitempty"`
	NetGnLoss       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NetGnLoss,omitempty"`
	CsmptnTax       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CsmptnTax,omitempty"`
	AcrdCptlstnAmt  AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AcrdCptlstnAmt,omitempty"`
	BookVal         AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 BookVal,omitempty"`
	CollMntrAmt     AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CollMntrAmt,omitempty"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Tp"`
}

type OtherParties19 struct {
	Invstr         []PartyIdentificationAndAccount81 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Invstr,omitempty"`
	QlfdFrgnIntrmy PartyIdentificationAndAccount41   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 QlfdFrgnIntrmy,omitempty"`
	StockXchg      PartyIdentificationAndAccount86   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StockXchg,omitempty"`
	TradRgltr      PartyIdentificationAndAccount86   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradRgltr,omitempty"`
	TrptyAgt       PartyIdentificationAndAccount41   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TrptyAgt,omitempty"`
	Brkr           PartyIdentificationAndAccount41   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Brkr,omitempty"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

// May be one of PAIN, PARC
type PartialSettlement2Code string

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrtryId"`
}

type PartyIdentification38Choice struct {
	BICFI    BICFIIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 BICFI"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NmAndAdr"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrtryId"`
}

type PartyIdentification43Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NmAndAdr"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ctry"`
}

type PartyIdentification45Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NmAndAdr"`
}

type PartyIdentification48 struct {
	Id       PartyIdentification44Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	AltrnId  AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	PrcgDt   DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount41 struct {
	Id        PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount45 struct {
	Id        PartyIdentification45Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount13           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount48 struct {
	Id         PartyIdentification45Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	AltrnId    AlternatePartyIdentification2    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount50 struct {
	Id         PartyIdentification38Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	AltrnId    AlternatePartyIdentification2    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount81 struct {
	Id        PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id,omitempty"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	Ntlty     CountryCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ntlty,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount86 struct {
	Id       PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	AltrnId  AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AltrnId,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RegnDtls,omitempty"`
}

type PartyTextInformation2 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PtyCtctDtls,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ctry"`
}

// May be one of PRCA, PRSE
type PreConfirmation1Code string

type Price2 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Tp"`
	Val PriceRateOrAmountChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Val"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Amt"`
}

type PriceType1Choice struct {
	Mkt    Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Mkt"`
	Indctv Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PriorityNumeric1Choice struct {
	Nmrc  Exact4NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Nmrc"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OrgnlAndCurFace"`
}

type QuantityAndAccount28 struct {
	SttldQty         Quantity6Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttldQty"`
	PrevslySttldQty  FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrevslySttldQty,omitempty"`
	RmngToBeSttldQty FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RmngToBeSttldQty,omitempty"`
	PrevslySttldAmt  AmountAndDirection7                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrevslySttldAmt,omitempty"`
	RmngToBeSttldAmt AmountAndDirection7                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RmngToBeSttldAmt,omitempty"`
	DnmtnChc         Max210Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DnmtnChc,omitempty"`
	AcctOwnr         PartyIdentification36Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AcctOwnr,omitempty"`
	SfkpgAcct        SecuritiesAccount13                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgAcct"`
	CshAcct          CashAccountIdentification5Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CshAcct,omitempty"`
	QtyBrkdwn        []QuantityBreakdown16              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 QtyBrkdwn,omitempty"`
	SfkpgPlc         SafekeepingPlaceFormat3Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgPlc,omitempty"`
}

type QuantityBreakdown16 struct {
	LotNb          GenericIdentification37            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LotNb,omitempty"`
	LotQty         FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LotQty,omitempty"`
	SctiesSubBalTp GenericIdentification20            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SctiesSubBalTp,omitempty"`
	LotDtTm        DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LotDtTm,omitempty"`
	LotPric        Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LotPric,omitempty"`
	TpOfPric       TypeOfPrice3Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TpOfPric,omitempty"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type Registration1Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

type RegistrationParameters1 struct {
	CertfctnId   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CertfctnId,omitempty"`
	CertfctnDtTm DateAndDateTimeChoice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CertfctnDtTm,omitempty"`
	RegarAcct    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RegarAcct,omitempty"`
	CertNb       []SecuritiesCertificate1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CertNb,omitempty"`
}

type Reporting2Choice struct {
	Cd    Reporting2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of STEX, REGU, DEFR
type Reporting2Code string

type RepurchaseType3Choice struct {
	Cd    RepurchaseType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of CADJ, CALL, PAIR, RATE, ROLP, TOPU, WTHD, PADJ
type RepurchaseType3Code string

type Restriction1Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat3Choice struct {
	Id      SafekeepingPlaceTypeAndText3             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TpAndId"`
	Prtry   GenericIdentification21                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
}

type SafekeepingPlaceTypeAndText3 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id,omitempty"`
}

type SecuritiesAccount13 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Id"`
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Nm,omitempty"`
}

type SecuritiesCertificate1 struct {
	Nb      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Nb"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Issr,omitempty"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SchmeNm,omitempty"`
}

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus2Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type SecuritiesRTGS1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type SecuritiesSettlementTransactionReversalAdviceV03 struct {
	TxIdDtls            SettlementTypeAndIdentification15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TxIdDtls"`
	ConfRef             Identification1                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ConfRef"`
	AddtlParams         AdditionalParameters14            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlParams,omitempty"`
	TradDtls            SecuritiesTradeDetails2           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradDtls"`
	FinInstrmId         SecurityIdentification14          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FinInstrmId"`
	FinInstrmAttrbts    FinancialInstrumentAttributes35   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FinInstrmAttrbts,omitempty"`
	QtyAndAcctDtls      QuantityAndAccount28              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 QtyAndAcctDtls"`
	SttlmParams         SettlementDetails45               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlmParams"`
	StgSttlmInstrDtls   StandingSettlementInstruction5    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StgSttlmInstrDtls,omitempty"`
	DlvrgSttlmPties     SettlementParties14               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties      SettlementParties14               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RcvgSttlmPties,omitempty"`
	CshPties            CashParties9                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CshPties,omitempty"`
	SttldAmt            AmountAndDirection2               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttldAmt,omitempty"`
	OthrAmts            OtherAmounts18                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OthrAmts,omitempty"`
	OthrBizPties        OtherParties19                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OthrBizPties,omitempty"`
	AddtlPhysOrRegnDtls RegistrationParameters1           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AddtlPhysOrRegnDtls,omitempty"`
	SplmtryData         []SupplementaryData1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SplmtryData,omitempty"`
}

type SecuritiesTradeDetails2 struct {
	TradId                  []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradId,omitempty"`
	CollTxId                []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CollTxId,omitempty"`
	PlcOfTrad               MarketIdentification4              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PlcOfTrad,omitempty"`
	PlcOfClr                AnyBICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PlcOfClr,omitempty"`
	TradDt                  TradeDate1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradDt,omitempty"`
	SttlmDt                 SettlementDate1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlmDt,omitempty"`
	FctvSttlmDt             SettlementDate3Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FctvSttlmDt"`
	DealPric                Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DealPric,omitempty"`
	NbOfDaysAcrd            float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NbOfDaysAcrd,omitempty"`
	OpngClsg                OpeningClosing1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OpngClsg,omitempty"`
	Rptg                    []Reporting2Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Rptg,omitempty"`
	TradTxCond              []TradeTransactionCondition1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradTxCond,omitempty"`
	InvstrCpcty             InvestorCapacity1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 InvstrCpcty,omitempty"`
	TradOrgtrRole           TradeOriginator1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TradOrgtrRole,omitempty"`
	TpOfPric                TypeOfPrice3Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TpOfPric,omitempty"`
	FxAddtlDtls             Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 FxAddtlDtls,omitempty"`
	SttlmInstrPrcgAddtlDtls Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlmInstrPrcgAddtlDtls,omitempty"`
}

type SecuritiesTransactionType10Choice struct {
	Cd    SecuritiesTransactionType8Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of BSBK, BIYI, CNCB, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CLAI, CORP, AUTO, ETFT
type SecuritiesTransactionType8Code string

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Desc,omitempty"`
}

type SettlementDate1Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Dt"`
	DtCd SettlementDateCode1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DtCd"`
}

type SettlementDate3Choice struct {
	Dt   DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Dt"`
	DtCd GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DtCd"`
}

// May be one of WISS
type SettlementDate4Code string

type SettlementDateCode1Choice struct {
	Cd    SettlementDate4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type SettlementDetails45 struct {
	Prty           PriorityNumeric1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prty,omitempty"`
	SctiesTxTp     SecuritiesTransactionType10Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SctiesTxTp"`
	SttlmTxCond    []SettlementTransactionCondition12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlmTxCond,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrtlSttlmInd,omitempty"`
	BnfclOwnrsh    BeneficialOwnership1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 BnfclOwnrsh,omitempty"`
	BlckTrad       BlockTrade1Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 BlckTrad,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CCPElgblty,omitempty"`
	CshClrSys      CashSettlementSystem1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CshClrSys,omitempty"`
	XpsrTp         ExposureType4Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 XpsrTp,omitempty"`
	MktClntSd      MarketClientSide1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MktClntSd,omitempty"`
	NetgElgblty    NettingEligibility1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 NetgElgblty,omitempty"`
	Regn           Registration1Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Regn,omitempty"`
	RpTp           RepurchaseType3Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 RpTp,omitempty"`
	LglRstrctns    Restriction1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LglRstrctns,omitempty"`
	SctiesRTGS     SecuritiesRTGS1Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SctiesRTGS,omitempty"`
	SttlgCpcty     SettlingCapacity1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlgCpcty,omitempty"`
	SttlmSysMtd    SettlementSystemMethod1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlmSysMtd,omitempty"`
	TaxCpcty       TaxCapacityParty1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 TaxCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification20                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 StmpDtyTaxBsis,omitempty"`
	AutomtcBrrwg   AutomaticBorrowing1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AutomtcBrrwg,omitempty"`
	LttrOfGrnt     LetterOfGuarantee1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 LttrOfGrnt,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ElgblForColl,omitempty"`
	SctiesSubBalTp GenericIdentification20                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SctiesSubBalTp,omitempty"`
	CshSubBalTp    GenericIdentification20                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CshSubBalTp,omitempty"`
}

type SettlementParties14 struct {
	Dpstry PartyIdentification48           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount45 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Pty5,omitempty"`
}

type SettlementStandingInstructionDatabase1Choice struct {
	Cd    SettlementStandingInstructionDatabase1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of INTE, BRKR, VEND
type SettlementStandingInstructionDatabase1Code string

type SettlementSystemMethod1Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementTransactionCondition12Choice struct {
	Cd    SettlementTransactionCondition8Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA, RPTO
type SettlementTransactionCondition8Code string

type SettlementTypeAndIdentification15 struct {
	AcctOwnrTxId      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AcctOwnrTxId"`
	AcctSvcrTxId      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PrcrTxId,omitempty"`
	SctiesMvmntTp     ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SctiesMvmntTp"`
	Pmt               DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Pmt"`
	CmonId            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CmonId,omitempty"`
	PoolId            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PoolId,omitempty"`
	CorpActnEvtId     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CorpActnEvtId,omitempty"`
}

type SettlingCapacity1Choice struct {
	Cd    SettlingCapacity1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of CUST, SAGE, SPRI
type SettlingCapacity1Code string

type StandingSettlementInstruction5 struct {
	SttlmStgInstrDB     SettlementStandingInstructionDatabase1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 SttlmStgInstrDB"`
	CtrPty              Counterparty5Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 CtrPty"`
	Vndr                PartyIdentification45Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Vndr,omitempty"`
	OthrDlvrgSttlmPties SettlementParties14                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OthrDlvrgSttlmPties,omitempty"`
	OthrRcvgSttlmPties  SettlementParties14                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 OthrRcvgSttlmPties,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty1Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TradeDate1Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Dt"`
	DtCd TradeDateCode1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 DtCd"`
}

type TradeDateCode1Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type TradeOriginator1Choice struct {
	Cd    OriginatorRole2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type TradeTransactionCondition1Choice struct {
	Cd    TradeTransactionCondition4Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

// May be one of CBNS, XBNS, CCPN, XCPN, CDIV, XDIV, CRTS, XRTS, CWAR, XWAR, SPCU, SPEX, GTDL, BCRO, BCRP, BCFD, BCBL, BCBN, MAPR, NEGO, NMPR, BCPD
type TradeTransactionCondition4Code string

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice3Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Prtry"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.026.001.03 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
