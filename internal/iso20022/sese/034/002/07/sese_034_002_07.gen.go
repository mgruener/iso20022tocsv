// Code generated by main. DO NOT EDIT.

package sese_034_002_07

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus25Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type AcknowledgedAcceptedStatus27Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type AcknowledgementReason13 struct {
	Cd          AcknowledgementReason16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason15 struct {
	Cd          AcknowledgementReason18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason16Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type AcknowledgementReason18Choice struct {
	Cd    RepoCallAcknowledgementReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AlternatePartyIdentification9 struct {
	IdTp    IdentificationType44Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ctry"`
	AltrnId RestrictedFINXMax30Text    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AltrnId"`
}

type AmountAndDirection59 struct {
	Amt       RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Amt"`
	CdtDbtInd CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CdtDbtInd,omitempty"`
}

type AmountAndDirection67 struct {
	Amt                 RestrictedFINActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Amt"`
	CdtDbtInd           CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BeneficialOwnership5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade5Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type CancellationReason15 struct {
	Cd          CancellationReason25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type CancellationReason25Choice struct {
	Cd    CancelledStatusReason9Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type CancellationStatus18Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []CancellationReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

// May be one of CANI, CANS, CSUB, CXLR, CANT, CANZ, CORP, SCEX, OTHR
type CancelledStatusReason9Code string

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem5Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type CentralCounterPartyEligibility5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 DtTm"`
}

type DateCode32Choice struct {
	Cd    DateType5Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of OPEN
type DateType5Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeniedReason13 struct {
	Cd          DeniedReason18Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type DeniedReason18Choice struct {
	Cd    DeniedReason3Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of ADEA, DCAL, DFOR, LATE, OTHR
type DeniedReason3Code string

type DeniedStatus18Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []DeniedReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type Document struct {
	SctiesFincgStsAdvc SecuritiesFinancingStatusAdvice002V07 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SctiesFincgStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FailingReason10 struct {
	Cd          FailingReason11Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type FailingReason11Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingStatus12Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []FailingReason10 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AmtsdVal"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SchmeNm,omitempty"`
}

type GenericIdentification85 struct {
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Tp"`
	Id RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type IdentificationType44Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide5Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification2Choice struct {
	MktIdrCd MICIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 MktIdrCd"`
	Desc     RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Desc"`
}

type MarketIdentification90 struct {
	Id MarketIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id,omitempty"`
	Tp MarketType16Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Tp"`
}

type MarketType16Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MatchingStatus29Choice struct {
	Mtchd  ProprietaryReason5          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Mtchd"`
	Umtchd UnmatchedStatus19Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Umtchd"`
	Prtry  ProprietaryStatusAndReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress12 struct {
	Nm RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Nm"`
}

type NettingEligibility5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PartyIdentification103 struct {
	Id       PartyIdentification58Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	LEI      LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LEI,omitempty"`
	AltrnId  AlternatePartyIdentification9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AltrnId,omitempty"`
	PrcgDt   DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrcgDt,omitempty"`
	PrcgId   RestrictedFINXMax16Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrcgId,omitempty"`
	AddtlInf PartyTextInformation3         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlInf,omitempty"`
}

type PartyIdentification103Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrtryId"`
}

type PartyIdentification104Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NmAndAdr"`
}

type PartyIdentification110 struct {
	Id  PartyIdentification115Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LEI,omitempty"`
}

type PartyIdentification115Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ctry"`
}

type PartyIdentification119 struct {
	Id  PartyIdentification103Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LEI,omitempty"`
}

type PartyIdentification58Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AnyBIC"`
	NmAndAdr NameAndAddress12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ctry"`
}

type PartyIdentificationAndAccount131 struct {
	Id        PartyIdentification104Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount27           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrcgDt,omitempty"`
	PrcgId    RestrictedFINXMax16Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation3         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlInf,omitempty"`
}

type PartyTextInformation3 struct {
	DclrtnDtls  RestrictedFINXMax350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 DclrtnDtls,omitempty"`
	PtyCtctDtls RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PtyCtctDtls,omitempty"`
	RegnDtls    RestrictedFINXMax350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RegnDtls,omitempty"`
}

type PendingProcessingReason11 struct {
	Cd          PendingProcessingReason13Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type PendingProcessingReason13Choice struct {
	Cd    PendingProcessingReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT
type PendingProcessingReason1Code string

type PendingProcessingStatus14Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason11 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY
type PendingReason1Code string

type PendingReason20 struct {
	Cd          PendingReason37Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type PendingReason21 struct {
	Cd          PendingReason38Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type PendingReason37Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type PendingReason38Choice struct {
	Cd    PendingReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus46Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []PendingReason20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type PendingStatus47Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []PendingReason21 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type PlaceOfTradeIdentification2 struct {
	MktTpAndId MarketIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LEI,omitempty"`
}

type ProcessingStatus57Choice struct {
	PdgCxl     PendingStatus46Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PdgCxl"`
	AckdAccptd AcknowledgedAcceptedStatus25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus14Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PdgPrcg"`
	Rjctd      RejectionStatus22Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rjctd"`
	Rpr        RepairStatus15Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rpr"`
	Canc       CancellationStatus18Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Canc"`
	Prtry      ProprietaryStatusAndReason7        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
	CxlReqd    ProprietaryReason5                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CxlReqd"`
	ModReqd    ProprietaryReason5                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 ModReqd"`
}

type ProprietaryReason5 struct {
	Rsn         GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason7 struct {
	PrtrySts GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrtrySts"`
	PrtryRsn []ProprietaryReason5    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrtryRsn,omitempty"`
}

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 OrgnlAndCurFace"`
}

type Rate2 struct {
	Sgn  bool    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Sgn,omitempty"`
	Rate float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rate"`
}

type RateName2 struct {
	Issr   RestrictedFINXMax8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Issr,omitempty"`
	RateNm RestrictedFINXMax24Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RateNm"`
}

type RateOrName2Choice struct {
	Rate   Rate2     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rate"`
	RateNm RateName2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RateNm"`
}

// May be one of FIXE, FORF, VARI
type RateType1Code string

type RateType67Choice struct {
	Cd    RateType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type RejectionReason28Choice struct {
	Cd    RejectionReason38Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type RejectionReason34 struct {
	Cd          RejectionReason28Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, CADE, FORF, TERM, VASU, REPA, REPO, REPP, RERT, RSPR, ICAG, INPS, ICUS, DEPT, OTHR, IEXE, INVE, PLIS
type RejectionReason38Code string

type RejectionStatus22Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []RejectionReason34 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type RepairReason11 struct {
	Cd          RepairReason13Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type RepairReason13Choice struct {
	Cd    RepairReason5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS, REPA, CADE, RERT, RSPR, VASU, REPO, REPP, TERM, FORF
type RepairReason5Code string

type RepairStatus15Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []RepairReason11 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

// May be one of CALD, CALP, ADEA
type RepoCallAcknowledgementReason2Code string

type RepoCallRequestStatus9Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AckdAccptd"`
	Dnd        DeniedStatus18Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Dnd"`
	Prtry      ProprietaryStatusAndReason7        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type RestrictedFINActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type RestrictedFINActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax24Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,350}
type RestrictedFINXMax350Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,8}
type RestrictedFINXMax8Text string

type Restriction6Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type SafeKeepingPlace2 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat17Choice struct {
	Id      SafekeepingPlaceTypeAndText15            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TpAndId"`
	Prtry   GenericIdentification85                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
}

type SafekeepingPlaceTypeAndText15 struct {
	SfkpgPlcTp SafekeepingPlace3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SfkpgPlcTp"`
	Id         RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id,omitempty"`
}

type SecuritiesAccount27 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Nm,omitempty"`
}

type SecuritiesAccount30 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Nm,omitempty"`
}

type SecuritiesFinancingStatusAdvice002V07 struct {
	TxId           TransactionIdentifications35            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TxId"`
	PrcgSts        ProcessingStatus57Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrcgSts,omitempty"`
	MtchgSts       MatchingStatus29Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 MtchgSts,omitempty"`
	IfrrdMtchgSts  MatchingStatus29Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 IfrrdMtchgSts,omitempty"`
	SttlmSts       SettlementStatus21Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlmSts,omitempty"`
	RepoCallReqSts RepoCallRequestStatus9Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RepoCallReqSts,omitempty"`
	TxDtls         SecuritiesFinancingTransactionDetails36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TxDtls,omitempty"`
	SplmtryData    []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SplmtryData,omitempty"`
}

type SecuritiesFinancingTransactionDetails36 struct {
	SctiesFincgTradId        RestrictedFINXMax16Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SctiesFincgTradId,omitempty"`
	ClsgLegId                RestrictedFINXMax16Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 ClsgLegId,omitempty"`
	PoolId                   RestrictedFINXMax16Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PoolId,omitempty"`
	CorpActnEvtId            RestrictedFINXMax16Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CorpActnEvtId,omitempty"`
	TrptyAgtSvcPrvdrCollTxId RestrictedFINXMax16Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TrptyAgtSvcPrvdrCollTxId,omitempty"`
	ClntTrptyCollTxId        RestrictedFINXMax16Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 ClntTrptyCollTxId,omitempty"`
	AcctOwnr                 PartyIdentification119                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AcctOwnr,omitempty"`
	SfkpgAcct                SecuritiesAccount30                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SfkpgAcct"`
	SfkpgPlc                 SafeKeepingPlace2                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SfkpgPlc,omitempty"`
	PlcOfTrad                PlaceOfTradeIdentification2             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PlcOfTrad,omitempty"`
	FinInstrmId              SecurityIdentification20                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 FinInstrmId"`
	SttlmQty                 Quantity10Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlmQty"`
	OpngSttlmAmt             AmountAndDirection67                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 OpngSttlmAmt,omitempty"`
	TermntnTxAmt             AmountAndDirection59                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TermntnTxAmt,omitempty"`
	OpngSttlmDt              SettlementDate15Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 OpngSttlmDt"`
	TermntnDt                TerminationDate5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TermntnDt,omitempty"`
	TradDt                   TradeDate6Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TradDt,omitempty"`
	XpctdSttlmDt             DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 XpctdSttlmDt,omitempty"`
	XpctdValDt               DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 XpctdValDt,omitempty"`
	LateDlvryDt              DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LateDlvryDt,omitempty"`
	RateChngDt               DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RateChngDt,omitempty"`
	SctiesFincgTxTp          SecuritiesFinancingTransactionType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SctiesFincgTxTp"`
	SctiesMvmntTp            ReceiveDelivery1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SctiesMvmntTp"`
	Pmt                      DeliveryReceiptType2Code                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pmt"`
	SttlmParams              SettlementDetails107                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlmParams,omitempty"`
	RateTp                   RateType67Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RateTp,omitempty"`
	VarblRateSpprt           RateName2                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 VarblRateSpprt,omitempty"`
	RpRate                   Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RpRate,omitempty"`
	StockLnMrgn              Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 StockLnMrgn,omitempty"`
	SctiesHrcut              Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SctiesHrcut,omitempty"`
	PricgRate                RateOrName2Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PricgRate,omitempty"`
	Sprd                     Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Sprd,omitempty"`
	DlvrgSttlmPties          SettlementParties44                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties           SettlementParties44                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 RcvgSttlmPties,omitempty"`
	Invstr                   PartyIdentification110                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Invstr,omitempty"`
	SttlmInstrPrcgAddtlDtls  RestrictedFINXMax350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlmInstrPrcgAddtlDtls,omitempty"`
}

// May be one of REPU, RVPO, SECB, SECL, BSBK, SBBK
type SecuritiesFinancingTransactionType2Code string

type SecuritiesRTGS5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Desc,omitempty"`
}

type SettlementDate15Choice struct {
	Dt   DateAndDateTimeChoice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Dt"`
	DtCd SettlementDateCode11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 DtCd"`
}

type SettlementDateCode11Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type SettlementDetails107 struct {
	HldInd         bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition22Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlmTxCond,omitempty"`
	SttlgCpcty     SettlingCapacity8Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification47                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS5Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SctiesRTGS,omitempty"`
	BnfclOwnrsh    BeneficialOwnership5Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 BnfclOwnrsh,omitempty"`
	CshClrSys      CashSettlementSystem5Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 TaxCpcty,omitempty"`
	MktClntSd      MarketClientSide5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 MktClntSd,omitempty"`
	BlckTrad       BlockTrade5Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 BlckTrad,omitempty"`
	LglRstrctns    Restriction6Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod5Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility5Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility5Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CCPElgblty,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PrtlSttlmInd,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 ElgblForColl,omitempty"`
}

type SettlementParties44 struct {
	Dpstry PartyIdentification103           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount131 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount131 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount131 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount131 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount131 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pty5,omitempty"`
}

type SettlementStatus21Choice struct {
	Pdg   PendingStatus47Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Pdg"`
	Flng  FailingStatus12Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Flng"`
	Prtry ProprietaryStatusAndReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod5Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type SettlementTransactionCondition22Choice struct {
	Cd    SettlementTransactionCondition6Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA
type SettlementTransactionCondition6Code string

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity8Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty5Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TerminationDate5Choice struct {
	Dt DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Dt"`
	Cd DateCode32Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
}

type TradeDate6Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Dt"`
	DtCd TradeDateCode4Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 DtCd"`
}

type TradeDateCode4Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type TransactionIdentifications35 struct {
	AcctOwnrTxId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AcctOwnrTxId"`
	AcctSvcrTxId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AcctSvcrTxId,omitempty"`
	CmonId       RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 CmonId,omitempty"`
}

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of ADEA, ACRU, TERM, IIND, CPCA, CLAT, NCRR, DDEA, DSEC, DQUA, FORF, INVE, LEOG, LATE, CMIS, NMAS, DTRA, OTHR, FRAP, PHYS, PLIS, INPS, PLCE, PODU, DEPT, ICAG, ICUS, IEXE, REGD, REPA, CADE, REPP, REPO, RERT, RTGS, SAFE, DMON, DDAT, SETS, SETR, TXST, DTRD, DELN, VASU, DMCT, DCMX
type UnmatchedReason13Code string

type UnmatchedReason18 struct {
	Cd          UnmatchedReason25Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 AddtlRsnInf,omitempty"`
}

type UnmatchedReason25Choice struct {
	Cd    UnmatchedReason13Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Prtry"`
}

type UnmatchedStatus19Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 NoSpcfdRsn"`
	Rsn        []UnmatchedReason18 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.002.07 Rsn"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
