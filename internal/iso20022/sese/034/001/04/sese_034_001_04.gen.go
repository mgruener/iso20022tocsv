// Code generated by main. DO NOT EDIT.

package sese_034_001_04

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus10Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type AcknowledgedAcceptedStatus7Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type AcknowledgementReason2 struct {
	Cd          AcknowledgementReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason3 struct {
	Cd          AcknowledgementReason4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason3Choice struct {
	Cd    RepoCallAcknowledgementReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type AcknowledgementReason4Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternatePartyIdentification2 struct {
	IdTp    IdentificationType4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 IdTp"`
	Ctry    CountryCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ctry"`
	AltrnId Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AltrnId"`
}

type AmountAndDirection4 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CdtDbtInd,omitempty"`
}

type AmountAndDirection8 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BeneficialOwnership1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type BlockTrade1Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type CancellationReason1 struct {
	Cd          CancellationReason5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type CancellationReason5Choice struct {
	Cd    CancelledStatusReason9Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type CancellationStatus8Choice struct {
	NoSpcfdRsn NoReasonCode          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []CancellationReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

// May be one of CANI, CANS, CSUB, CXLR, CANT, CANZ, CORP, SCEX, OTHR
type CancelledStatusReason9Code string

type CashSettlementSystem1Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CentralCounterPartyEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 DtTm"`
}

type DateCode1Choice struct {
	Cd    DateType5Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of OPEN
type DateType5Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeniedReason1 struct {
	Cd          DeniedReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type DeniedReason3Choice struct {
	Cd    DeniedReason3Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of ADEA, DCAL, DFOR, LATE, OTHR
type DeniedReason3Code string

type DeniedStatus5Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []DeniedReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type Document struct {
	SctiesFincgStsAdvc SecuritiesFinancingStatusAdviceV04 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SctiesFincgStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingReason3 struct {
	Cd          FailingReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type FailingReason3Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type FailingStatus3Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []FailingReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AmtsdVal"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SchmeNm,omitempty"`
}

type GenericIdentification21 struct {
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id,omitempty"`
}

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type IdentificationType4Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide1Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Desc"`
}

type MarketIdentification78 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id,omitempty"`
	Tp MarketType3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType3Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type MatchingStatus20Choice struct {
	Mtchd  ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Mtchd"`
	Umtchd UnmatchedStatus13Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Umtchd"`
	Prtry  ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max8Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Adr,omitempty"`
}

type NettingEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrtryId"`
}

type PartyIdentification37Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ctry"`
}

type PartyIdentification43Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NmAndAdr"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ctry"`
}

type PartyIdentification48 struct {
	Id       PartyIdentification44Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	AltrnId  AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AltrnId,omitempty"`
	PrcgDt   DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount42 struct {
	Id        PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount13           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RegnDtls,omitempty"`
}

type PendingProcessingReason1 struct {
	Cd          PendingProcessingReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type PendingProcessingReason1Choice struct {
	Cd    PendingProcessingReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT
type PendingProcessingReason1Code string

type PendingProcessingStatus4Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type PendingReason1 struct {
	Cd          PendingReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type PendingReason1Choice struct {
	Cd    PendingReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY
type PendingReason1Code string

type PendingReason2 struct {
	Cd          PendingReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type PendingReason2Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus13Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []PendingReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type PendingStatus15Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []PendingReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ctry"`
}

type ProcessingStatus38Choice struct {
	PdgCxl     PendingStatus13Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PdgCxl"`
	AckdAccptd AcknowledgedAcceptedStatus7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus4Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PdgPrcg"`
	Rjctd      RejectionStatus14Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rjctd"`
	Rpr        RepairStatus6Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rpr"`
	Canc       CancellationStatus8Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Canc"`
	Prtry      ProprietaryStatusAndReason1       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
	CxlReqd    ProprietaryReason1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CxlReqd"`
	ModReqd    ProprietaryReason1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 ModReqd"`
}

type ProprietaryReason1 struct {
	Rsn         GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason1 struct {
	PrtrySts GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrtrySts"`
	PrtryRsn []ProprietaryReason1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 OrgnlAndCurFace"`
}

type Rate2 struct {
	Sgn  bool    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Sgn,omitempty"`
	Rate float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rate"`
}

type RateName1 struct {
	Issr   Max8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Issr,omitempty"`
	RateNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RateNm"`
}

type RateOrName1Choice struct {
	Rate   Rate2     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rate"`
	RateNm RateName1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RateNm"`
}

// May be one of FIXE, FORF, VARI
type RateType1Code string

type RateType5Choice struct {
	Cd    RateType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type RejectionReason15Choice struct {
	Cd    RejectionReason38Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type RejectionReason18 struct {
	Cd          RejectionReason15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, CADE, FORF, TERM, VASU, REPA, REPO, REPP, RERT, RSPR, ICAG, INPS, ICUS, DEPT, OTHR, IEXE, INVE, PLIS
type RejectionReason38Code string

type RejectionStatus14Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []RejectionReason18 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type RepairReason2Choice struct {
	Cd    RepairReason5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type RepairReason3 struct {
	Cd          RepairReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS, REPA, CADE, RERT, RSPR, VASU, REPO, REPP, TERM, FORF
type RepairReason5Code string

type RepairStatus6Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []RepairReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

// May be one of CALD, CALP, ADEA
type RepoCallAcknowledgementReason2Code string

type RepoCallRequestStatus5Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AckdAccptd"`
	Dnd        DeniedStatus5Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Dnd"`
	Prtry      ProprietaryStatusAndReason1        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type Restriction1Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat3Choice struct {
	Id      SafekeepingPlaceTypeAndText3             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TpAndId"`
	Prtry   GenericIdentification21                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
}

type SafekeepingPlaceTypeAndText3 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id,omitempty"`
}

type SecuritiesAccount13 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Id"`
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Nm,omitempty"`
}

type SecuritiesFinancingStatusAdviceV04 struct {
	TxId           TransactionIdentifications1             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TxId"`
	PrcgSts        ProcessingStatus38Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrcgSts,omitempty"`
	MtchgSts       MatchingStatus20Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 MtchgSts,omitempty"`
	IfrrdMtchgSts  MatchingStatus20Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 IfrrdMtchgSts,omitempty"`
	SttlmSts       SettlementStatus10Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlmSts,omitempty"`
	RepoCallReqSts RepoCallRequestStatus5Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RepoCallReqSts,omitempty"`
	TxDtls         SecuritiesFinancingTransactionDetails21 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TxDtls,omitempty"`
	SplmtryData    []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SplmtryData,omitempty"`
}

type SecuritiesFinancingTransactionDetails21 struct {
	SctiesFincgTradId       Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SctiesFincgTradId,omitempty"`
	ClsgLegId               Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 ClsgLegId,omitempty"`
	PoolId                  Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PoolId,omitempty"`
	CorpActnEvtId           Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CorpActnEvtId,omitempty"`
	TrptyAgtCollTxId        Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TrptyAgtCollTxId,omitempty"`
	ClntTrptyCollTxId       Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 ClntTrptyCollTxId,omitempty"`
	AcctOwnr                PartyIdentification36Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AcctOwnr,omitempty"`
	SfkpgAcct               SecuritiesAccount13                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SfkpgAcct"`
	SfkpgPlc                SafekeepingPlaceFormat3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SfkpgPlc,omitempty"`
	PlcOfTrad               MarketIdentification78                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PlcOfTrad,omitempty"`
	FinInstrmId             SecurityIdentification14                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 FinInstrmId"`
	SttlmQty                Quantity6Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlmQty"`
	OpngSttlmAmt            AmountAndDirection8                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 OpngSttlmAmt,omitempty"`
	TermntnTxAmt            AmountAndDirection4                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TermntnTxAmt,omitempty"`
	OpngSttlmDt             SettlementDate2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 OpngSttlmDt"`
	TermntnDt               TerminationDate2Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TermntnDt,omitempty"`
	TradDt                  TradeDate1Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TradDt,omitempty"`
	XpctdSttlmDt            DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 XpctdSttlmDt,omitempty"`
	XpctdValDt              DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 XpctdValDt,omitempty"`
	LateDlvryDt             DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 LateDlvryDt,omitempty"`
	RateChngDt              DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RateChngDt,omitempty"`
	SctiesFincgTxTp         SecuritiesFinancingTransactionType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SctiesFincgTxTp"`
	SctiesMvmntTp           ReceiveDelivery1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SctiesMvmntTp"`
	Pmt                     DeliveryReceiptType2Code                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pmt"`
	SttlmParams             SettlementDetails73                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlmParams,omitempty"`
	RateTp                  RateType5Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RateTp,omitempty"`
	VarblRateSpprt          RateName1                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 VarblRateSpprt,omitempty"`
	RpRate                  Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RpRate,omitempty"`
	StockLnMrgn             Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 StockLnMrgn,omitempty"`
	SctiesHrcut             Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SctiesHrcut,omitempty"`
	PricgRate               RateOrName1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PricgRate,omitempty"`
	Sprd                    Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Sprd,omitempty"`
	DlvrgSttlmPties         SettlementParties11                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties          SettlementParties11                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 RcvgSttlmPties,omitempty"`
	Invstr                  PartyIdentification37Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Invstr,omitempty"`
	SttlmInstrPrcgAddtlDtls Max350Text                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlmInstrPrcgAddtlDtls,omitempty"`
}

// May be one of REPU, RVPO, SECB, SECL
type SecuritiesFinancingTransactionType1Code string

type SecuritiesRTGS1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Desc,omitempty"`
}

type SettlementDate2Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Dt"`
	DtCd SettlementDateCode2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 DtCd"`
}

type SettlementDateCode2Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type SettlementDetails73 struct {
	HldInd         bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlmTxCond,omitempty"`
	SttlgCpcty     SettlingCapacity4Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification20                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SctiesRTGS,omitempty"`
	BnfclOwnrsh    BeneficialOwnership1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 BnfclOwnrsh,omitempty"`
	CshClrSys      CashSettlementSystem1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 TaxCpcty,omitempty"`
	MktClntSd      MarketClientSide1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 MktClntSd,omitempty"`
	BlckTrad       BlockTrade1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 BlckTrad,omitempty"`
	LglRstrctns    Restriction1Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CCPElgblty,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PrtlSttlmInd,omitempty"`
	ElgblForColl   bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 ElgblForColl,omitempty"`
}

type SettlementParties11 struct {
	Dpstry PartyIdentification48           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pty5,omitempty"`
}

type SettlementStatus10Choice struct {
	Pdg   PendingStatus15Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Pdg"`
	Flng  FailingStatus3Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Flng"`
	Prtry ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type SettlementSystemMethod1Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA
type SettlementTransactionCondition6Code string

type SettlementTransactionCondition7Choice struct {
	Cd    SettlementTransactionCondition6Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity4Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty1Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TerminationDate2Choice struct {
	Dt DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Dt"`
	Cd DateCode1Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
}

type TradeDate1Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Dt"`
	DtCd TradeDateCode1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 DtCd"`
}

type TradeDateCode1Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type TransactionIdentifications1 struct {
	AcctOwnrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AcctOwnrTxId"`
	AcctSvcrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AcctSvcrTxId,omitempty"`
	CmonId       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 CmonId,omitempty"`
}

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of ADEA, CADE, CLAT, CMIS, CPCA, DDAT, DDEA, DELN, DEPT, DMON, DQUA, DSEC, DTRA, DTRD, FORF, FRAP, ICAG, ICUS, IEXE, IIND, LATE, LEOG, NCRR, NMAS, PHYS, PLCE, PODU, REGD, REPA, REPO, REPP, RERT, RTGS, SAFE, SETR, SETS, TERM, TXST, VASU, INPS, OTHR, ACRU, PLIS, INVE
type UnmatchedReason10Code string

type UnmatchedReason12 struct {
	Cd          UnmatchedReason15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 AddtlRsnInf,omitempty"`
}

type UnmatchedReason15Choice struct {
	Cd    UnmatchedReason10Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Prtry"`
}

type UnmatchedStatus13Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 NoSpcfdRsn"`
	Rsn        []UnmatchedReason12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.04 Rsn"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
