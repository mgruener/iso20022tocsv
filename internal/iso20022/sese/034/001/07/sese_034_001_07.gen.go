// Code generated by main. DO NOT EDIT.

package sese_034_001_07

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus21Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type AcknowledgedAcceptedStatus22Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason10 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type AcknowledgementReason10 struct {
	Cd          AcknowledgementReason13Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason12Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type AcknowledgementReason13Choice struct {
	Cd    RepoCallAcknowledgementReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type AcknowledgementReason9 struct {
	Cd          AcknowledgementReason12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternatePartyIdentification7 struct {
	IdTp    IdentificationType42Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ctry"`
	AltrnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AltrnId"`
}

type AmountAndDirection21 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CdtDbtInd,omitempty"`
}

type AmountAndDirection51 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BeneficialOwnership4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade4Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type CancellationReason12 struct {
	Cd          CancellationReason23Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type CancellationReason23Choice struct {
	Cd    CancelledStatusReason9Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type CancellationStatus16Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []CancellationReason12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

// May be one of CANI, CANS, CSUB, CXLR, CANT, CANZ, CORP, SCEX, OTHR
type CancelledStatusReason9Code string

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem4Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type CentralCounterPartyEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 DtTm"`
}

type DateCode18Choice struct {
	Cd    DateType5Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of OPEN
type DateType5Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeniedReason12 struct {
	Cd          DeniedReason17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type DeniedReason17Choice struct {
	Cd    DeniedReason3Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of ADEA, DCAL, DFOR, LATE, OTHR
type DeniedReason3Code string

type DeniedStatus17Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []DeniedReason12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type Document struct {
	SctiesFincgStsAdvc SecuritiesFinancingStatusAdviceV07 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SctiesFincgStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingReason8 struct {
	Cd          FailingReason8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type FailingReason8Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type FailingStatus10Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []FailingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AmtsdVal"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SchmeNm,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type IdentificationType42Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide4Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Desc"`
}

type MarketIdentification84 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id,omitempty"`
	Tp MarketType8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType8Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type MatchingStatus26Choice struct {
	Mtchd  ProprietaryReason4          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Mtchd"`
	Umtchd UnmatchedStatus18Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Umtchd"`
	Prtry  ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max8Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Adr,omitempty"`
}

type NettingEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ctry"`
}

type PartyIdentification71Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NmAndAdr"`
}

type PartyIdentification75 struct {
	Id       PartyIdentification44Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	LEI      LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LEI,omitempty"`
	AltrnId  AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AltrnId,omitempty"`
	PrcgDt   DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlInf,omitempty"`
}

type PartyIdentification92Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AnyBIC"`
	PrtryId GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrtryId"`
}

type PartyIdentification93Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ctry"`
}

type PartyIdentification98 struct {
	Id  PartyIdentification92Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LEI,omitempty"`
}

type PartyIdentification99 struct {
	Id  PartyIdentification93Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LEI,omitempty"`
}

type PartyIdentificationAndAccount106 struct {
	Id        PartyIdentification71Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount24           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RegnDtls,omitempty"`
}

type PendingProcessingReason11Choice struct {
	Cd    PendingProcessingReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT
type PendingProcessingReason1Code string

type PendingProcessingReason9 struct {
	Cd          PendingProcessingReason11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type PendingProcessingStatus12Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type PendingReason16 struct {
	Cd          PendingReason28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type PendingReason18 struct {
	Cd          PendingReason31Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY
type PendingReason1Code string

type PendingReason28Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type PendingReason31Choice struct {
	Cd    PendingReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus38Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []PendingReason16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type PendingStatus40Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []PendingReason18 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type PlaceOfTradeIdentification1 struct {
	MktTpAndId MarketIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LEI,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ctry"`
}

type ProcessingStatus51Choice struct {
	PdgCxl     PendingStatus38Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PdgCxl"`
	AckdAccptd AcknowledgedAcceptedStatus21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus12Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PdgPrcg"`
	Rjctd      RejectionStatus19Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rjctd"`
	Rpr        RepairStatus14Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rpr"`
	Canc       CancellationStatus16Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Canc"`
	Prtry      ProprietaryStatusAndReason6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
	CxlReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CxlReqd"`
	ModReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 ModReqd"`
}

type ProprietaryReason4 struct {
	Rsn         GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason6 struct {
	PrtrySts GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrtrySts"`
	PrtryRsn []ProprietaryReason4    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 OrgnlAndCurFace"`
}

type Rate2 struct {
	Sgn  bool    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Sgn,omitempty"`
	Rate float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rate"`
}

type RateName1 struct {
	Issr   Max8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Issr,omitempty"`
	RateNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RateNm"`
}

type RateOrName1Choice struct {
	Rate   Rate2     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rate"`
	RateNm RateName1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RateNm"`
}

// May be one of FIXE, FORF, VARI
type RateType1Code string

type RateType35Choice struct {
	Cd    RateType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type RejectionReason26Choice struct {
	Cd    RejectionReason38Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type RejectionReason28 struct {
	Cd          RejectionReason26Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, CADE, FORF, TERM, VASU, REPA, REPO, REPP, RERT, RSPR, ICAG, INPS, ICUS, DEPT, OTHR, IEXE, INVE, PLIS
type RejectionReason38Code string

type RejectionStatus19Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []RejectionReason28 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type RepairReason10 struct {
	Cd          RepairReason12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type RepairReason12Choice struct {
	Cd    RepairReason5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS, REPA, CADE, RERT, RSPR, VASU, REPO, REPP, TERM, FORF
type RepairReason5Code string

type RepairStatus14Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []RepairReason10 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

// May be one of CALD, CALP, ADEA
type RepoCallAcknowledgementReason2Code string

type RepoCallRequestStatus7Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus22Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AckdAccptd"`
	Dnd        DeniedStatus17Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Dnd"`
	Prtry      ProprietaryStatusAndReason6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type Restriction5Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type SafeKeepingPlace1 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat10Choice struct {
	Id      SafekeepingPlaceTypeAndText8             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TpAndId"`
	Prtry   GenericIdentification78                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
}

type SafekeepingPlaceTypeAndText8 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id,omitempty"`
}

type SecuritiesAccount19 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Nm,omitempty"`
}

type SecuritiesAccount24 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Nm,omitempty"`
}

type SecuritiesFinancingStatusAdviceV07 struct {
	TxId           TransactionIdentifications32            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TxId"`
	PrcgSts        ProcessingStatus51Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrcgSts,omitempty"`
	MtchgSts       MatchingStatus26Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 MtchgSts,omitempty"`
	IfrrdMtchgSts  MatchingStatus26Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 IfrrdMtchgSts,omitempty"`
	SttlmSts       SettlementStatus18Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlmSts,omitempty"`
	RepoCallReqSts RepoCallRequestStatus7Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RepoCallReqSts,omitempty"`
	TxDtls         SecuritiesFinancingTransactionDetails35 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TxDtls,omitempty"`
	SplmtryData    []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SplmtryData,omitempty"`
}

type SecuritiesFinancingTransactionDetails35 struct {
	SctiesFincgTradId        Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SctiesFincgTradId,omitempty"`
	ClsgLegId                Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 ClsgLegId,omitempty"`
	PoolId                   Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PoolId,omitempty"`
	CorpActnEvtId            Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CorpActnEvtId,omitempty"`
	TrptyAgtSvcPrvdrCollTxId Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TrptyAgtSvcPrvdrCollTxId,omitempty"`
	ClntTrptyCollTxId        Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 ClntTrptyCollTxId,omitempty"`
	AcctOwnr                 PartyIdentification98                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AcctOwnr,omitempty"`
	SfkpgAcct                SecuritiesAccount19                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SfkpgAcct"`
	SfkpgPlc                 SafeKeepingPlace1                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SfkpgPlc,omitempty"`
	PlcOfTrad                PlaceOfTradeIdentification1             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PlcOfTrad,omitempty"`
	FinInstrmId              SecurityIdentification19                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 FinInstrmId"`
	SttlmQty                 Quantity6Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlmQty"`
	OpngSttlmAmt             AmountAndDirection51                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 OpngSttlmAmt,omitempty"`
	TermntnTxAmt             AmountAndDirection21                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TermntnTxAmt,omitempty"`
	OpngSttlmDt              SettlementDate10Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 OpngSttlmDt"`
	TermntnDt                TerminationDate4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TermntnDt,omitempty"`
	TradDt                   TradeDate5Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TradDt,omitempty"`
	XpctdSttlmDt             DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 XpctdSttlmDt,omitempty"`
	XpctdValDt               DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 XpctdValDt,omitempty"`
	LateDlvryDt              DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LateDlvryDt,omitempty"`
	RateChngDt               DateAndDateTimeChoice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RateChngDt,omitempty"`
	SctiesFincgTxTp          SecuritiesFinancingTransactionType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SctiesFincgTxTp"`
	SctiesMvmntTp            ReceiveDelivery1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SctiesMvmntTp"`
	Pmt                      DeliveryReceiptType2Code                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pmt"`
	SttlmParams              SettlementDetails98                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlmParams,omitempty"`
	RateTp                   RateType35Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RateTp,omitempty"`
	VarblRateSpprt           RateName1                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 VarblRateSpprt,omitempty"`
	RpRate                   Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RpRate,omitempty"`
	StockLnMrgn              Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 StockLnMrgn,omitempty"`
	SctiesHrcut              Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SctiesHrcut,omitempty"`
	PricgRate                RateOrName1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PricgRate,omitempty"`
	Sprd                     Rate2                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Sprd,omitempty"`
	DlvrgSttlmPties          SettlementParties36                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties           SettlementParties36                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 RcvgSttlmPties,omitempty"`
	Invstr                   PartyIdentification99                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Invstr,omitempty"`
	SttlmInstrPrcgAddtlDtls  Max350Text                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlmInstrPrcgAddtlDtls,omitempty"`
}

// May be one of REPU, RVPO, SECB, SECL, BSBK, SBBK
type SecuritiesFinancingTransactionType2Code string

type SecuritiesRTGS4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Desc,omitempty"`
}

type SettlementDate10Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Dt"`
	DtCd SettlementDateCode8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 DtCd"`
}

type SettlementDateCode8Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type SettlementDetails98 struct {
	HldInd         bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlmTxCond,omitempty"`
	SttlgCpcty     SettlingCapacity7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS4Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SctiesRTGS,omitempty"`
	BnfclOwnrsh    BeneficialOwnership4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 BnfclOwnrsh,omitempty"`
	CshClrSys      CashSettlementSystem4Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 TaxCpcty,omitempty"`
	MktClntSd      MarketClientSide4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 MktClntSd,omitempty"`
	BlckTrad       BlockTrade4Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 BlckTrad,omitempty"`
	LglRstrctns    Restriction5Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility4Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility4Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CCPElgblty,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PrtlSttlmInd,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 ElgblForColl,omitempty"`
}

type SettlementParties36 struct {
	Dpstry PartyIdentification75            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pty5,omitempty"`
}

type SettlementStatus18Choice struct {
	Pdg   PendingStatus40Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Pdg"`
	Flng  FailingStatus10Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Flng"`
	Prtry ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod4Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type SettlementTransactionCondition18Choice struct {
	Cd    SettlementTransactionCondition6Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA
type SettlementTransactionCondition6Code string

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity7Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty4Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TerminationDate4Choice struct {
	Dt DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Dt"`
	Cd DateCode18Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
}

type TradeDate5Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Dt"`
	DtCd TradeDateCode3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 DtCd"`
}

type TradeDateCode3Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type TransactionIdentifications32 struct {
	AcctOwnrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AcctOwnrTxId"`
	AcctSvcrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AcctSvcrTxId,omitempty"`
	CmonId       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 CmonId,omitempty"`
}

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of ADEA, ACRU, TERM, IIND, CPCA, CLAT, NCRR, DDEA, DSEC, DQUA, FORF, INVE, LEOG, LATE, CMIS, NMAS, DTRA, OTHR, FRAP, PHYS, PLIS, INPS, PLCE, PODU, DEPT, ICAG, ICUS, IEXE, REGD, REPA, CADE, REPP, REPO, RERT, RTGS, SAFE, DMON, DDAT, SETS, SETR, TXST, DTRD, DELN, VASU, DMCT, DCMX
type UnmatchedReason13Code string

type UnmatchedReason17 struct {
	Cd          UnmatchedReason24Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 AddtlRsnInf,omitempty"`
}

type UnmatchedReason24Choice struct {
	Cd    UnmatchedReason13Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Prtry"`
}

type UnmatchedStatus18Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 NoSpcfdRsn"`
	Rsn        []UnmatchedReason17 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.034.001.07 Rsn"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
