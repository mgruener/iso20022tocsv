// Code generated by main. DO NOT EDIT.

package sese_032_001_08

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus21Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

type AcknowledgementReason12Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type AcknowledgementReason9 struct {
	Cd          AcknowledgementReason12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// May be one of AFFI, NAFI
type AffirmationStatus1Code string

type AffirmationStatus8Choice struct {
	Cd    AffirmationStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type AlternatePartyIdentification7 struct {
	IdTp    IdentificationType42Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ctry"`
	AltrnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId"`
}

type AmountAndDirection44 struct {
	Amt                 ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CdtDbtInd,omitempty"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms23            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FXDtls,omitempty"`
}

type AmountAndDirection87 struct {
	AcrdIntrstInd       bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcrdIntrstInd,omitempty"`
	StmpDtyInd          bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StmpDtyInd,omitempty"`
	BrkrgAmtInd         bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 BrkrgAmtInd,omitempty"`
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms23            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FXDtls,omitempty"`
	ValDt               DateAndDateTime2Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ValDt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of LAMI, NBOR, YBOR
type AutoBorrowing1Code string

type AutomaticBorrowing6Choice struct {
	Cd    AutoBorrowing1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICFIIdentifier string

type BeneficialOwnership4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade4Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type CashAccountIdentification5Choice struct {
	IBAN  IBAN2007Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IBAN"`
	Prtry Max34Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type CashParties26 struct {
	Dbtr    PartyIdentificationAndAccount111 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Dbtr,omitempty"`
	DbtrAgt PartyIdentificationAndAccount112 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DbtrAgt,omitempty"`
	Cdtr    PartyIdentificationAndAccount111 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cdtr,omitempty"`
	CdtrAgt PartyIdentificationAndAccount112 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CdtrAgt,omitempty"`
	Intrmy  PartyIdentificationAndAccount112 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Intrmy,omitempty"`
}

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem4Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type CentralCounterPartyEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type ClassificationType32Choice struct {
	ClssfctnFinInstrm CFIOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnClssfctn"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type CurrencyToBuyOrSell1Choice struct {
	CcyToBuy  ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CcyToBuy"`
	CcyToSell ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CcyToSell"`
}

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

// May be one of UNRE, DQUA, DMON, PART, SAFE, DUEB, PARD
type DeliveryReturn1Code string

type DeliveryReturn3Choice struct {
	Cd    DeliveryReturn1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type Document struct {
	SctiesSttlmTxGnrtnNtfctn SecuritiesSettlementTransactionGenerationNotificationV08 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SctiesSttlmTxGnrtnNtfctn"`
}

type DocumentNumber5Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LngNb"`
	PrtryNb GenericIdentification36           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtryNb"`
}

// May be one of ELIG, RETL, PROF
type Eligibility1Code string

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

type ExposureType16Choice struct {
	Cd    ExposureType4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of BFWD, PAYM, CCPC, COMM, CRDS, CRTL, CRSP, CCIR, CRPR, EQPT, EXTD, EQUS, EXPT, FIXI, FORX, FORW, FUTR, OPTN, LIQU, OTCD, REPO, RVPO, SLOA, SBSC, SCRP, SLEB, SHSL, SCIR, SCIE, SWPT, TBAS, TRCP
type ExposureType4Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FXStandingInstruction4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingReason8 struct {
	Cd          FailingReason8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type FailingReason8Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type FailingStatus10Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []FailingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

type FinancialInstrumentAttributes91 struct {
	PlcOfListg             MarketIdentification3Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RegnForm,omitempty"`
	PmtFrqcy               Frequency23Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus5Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PmtSts,omitempty"`
	VarblRateChngFrqcy     Frequency23Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 VarblRateChngFrqcy,omitempty"`
	ClssfctnTp             ClassificationType32Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle8Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OptnStyle,omitempty"`
	OptnTp                 OptionType6Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IntrstRate,omitempty"`
	YldToMtrtyRate         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 YldToMtrtyRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number22Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CpnAttchdNb,omitempty"`
	PoolNb                 GenericIdentification37                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType4Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktOrIndctvPric,omitempty"`
	ExrcPric               Price7                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ExrcPric,omitempty"`
	SbcptPric              Price7                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SbcptPric,omitempty"`
	ConvsPric              Price7                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ConvsPric,omitempty"`
	StrkPric               Price7                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification19             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls Max350Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AmtsdVal"`
}

type ForeignExchangeTerms23 struct {
	UnitCcy  ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 UnitCcy"`
	QtdCcy   ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 QtdCcy"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 XchgRate"`
	RsltgAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RsltgAmt"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity6Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type Frequency23Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of COLL, CLAI, OTHR, RODE, SPLI, THRD, TRAN
type GeneratedReason3Code string

type GeneratedReason5 struct {
	Cd          GeneratedReasons5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type GeneratedReasons5Choice struct {
	Cd    GeneratedReason3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SchmeNm,omitempty"`
}

type GenericIdentification37 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Issr,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id,omitempty"`
}

type HoldIndicator6 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Rsn []RegistrationReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type IdentificationType42Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat4Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type InvestorCapacity4Choice struct {
	Cd    Eligibility1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterOfGuarantee4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type Linkages37 struct {
	PrcgPos ProcessingPosition7Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgPos,omitempty"`
	MsgNb   DocumentNumber5Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MsgNb,omitempty"`
	Ref     References41Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ref"`
	LkdQty  PairedOrTurnedQuantity3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LkdQty,omitempty"`
	RefOwnr PartyIdentification92Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RefOwnr,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

// May be one of CLNT, MAKT
type MarketClientSide1Code string

type MarketClientSide6Choice struct {
	Cd    MarketClientSide1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Desc"`
}

type MarketIdentification3Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Desc"`
}

type MarketIdentification84 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id,omitempty"`
	Tp MarketType8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType8Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of MACH, NMAT
type MatchingStatus1Code string

type MatchingStatus24Choice struct {
	Mtchd  ProprietaryReason4          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Mtchd"`
	Umtchd UnmatchedStatus16Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Umtchd"`
	Prtry  ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type MatchingStatus27Choice struct {
	Cd    MatchingStatus1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type ModificationCancellationAllowed4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Adr,omitempty"`
}

type NettingEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type Number22Choice struct {
	Shrt Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Shrt"`
	Lng  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Lng"`
}

type NumberCount1Choice struct {
	CurInstrNb Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CurInstrNb"`
	TtlNb      TotalNumber1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TtlNb"`
}

// May be one of CLOP, OPEP
type OpeningClosing1Code string

type OpeningClosing3Choice struct {
	Cd    OpeningClosing1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle8Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType6Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AmtsdVal"`
}

// May be one of SINT, MLTF, RMKT, MKTM, INVE, TAGT
type OriginatorRole2Code string

type OtherAmounts39 struct {
	AcrdIntrstAmt   AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcrdIntrstAmt,omitempty"`
	ChrgsFees       AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ChrgsFees,omitempty"`
	CtryNtlFdrlTax  AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CtryNtlFdrlTax,omitempty"`
	TradAmt         AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradAmt,omitempty"`
	ExctgBrkrAmt    AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ExctgBrkrAmt,omitempty"`
	IsseDscntAllwnc AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IsseDscntAllwnc,omitempty"`
	PmtLevyTax      AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PmtLevyTax,omitempty"`
	LclTax          AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LclTax,omitempty"`
	LclTaxCtrySpcfc AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LclTaxCtrySpcfc,omitempty"`
	LclBrkrComssn   AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LclBrkrComssn,omitempty"`
	Mrgn            AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Mrgn,omitempty"`
	Othr            AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Othr,omitempty"`
	RgltryAmt       AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RgltryAmt,omitempty"`
	ShppgAmt        AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ShppgAmt,omitempty"`
	SpclCncssn      AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SpclCncssn,omitempty"`
	StmpDty         AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StmpDty,omitempty"`
	StockXchgTax    AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StockXchgTax,omitempty"`
	TrfTax          AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TrfTax,omitempty"`
	TxTax           AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TxTax,omitempty"`
	ValAddedTax     AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ValAddedTax,omitempty"`
	WhldgTax        AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 WhldgTax,omitempty"`
	NetGnLoss       AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NetGnLoss,omitempty"`
	CsmptnTax       AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CsmptnTax,omitempty"`
	AcrdCptlstnAmt  AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcrdCptlstnAmt,omitempty"`
	RsrchFee        AmountAndDirection44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RsrchFee,omitempty"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Tp"`
}

type OtherParties27 struct {
	Invstr         []PartyIdentificationAndAccount108 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Invstr,omitempty"`
	QlfdFrgnIntrmy PartyIdentificationAndAccount107   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 QlfdFrgnIntrmy,omitempty"`
	StockXchg      PartyIdentificationAndAccount109   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StockXchg,omitempty"`
	TradRgltr      PartyIdentificationAndAccount109   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradRgltr,omitempty"`
	TrptyAgt       PartyIdentificationAndAccount107   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TrptyAgt,omitempty"`
	Brkr           PartyIdentificationAndAccount107   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Brkr,omitempty"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PairedOrTurnedQuantity3Choice struct {
	PairdOffQty FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PairdOffQty,omitempty"`
	TrndQty     FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TrndQty,omitempty"`
}

type PartyIdentification127 struct {
	Id       PartyIdentification44Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI      LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId  AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	PrcgDt   DateAndDateTime2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ctry"`
}

type PartyIdentification71Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NmAndAdr"`
}

type PartyIdentification92Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AnyBIC"`
	PrtryId GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtryId"`
}

type PartyIdentification94Choice struct {
	BICFI    BICFIIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 BICFI"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NmAndAdr"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtryId"`
}

type PartyIdentification98 struct {
	Id  PartyIdentification92Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
}

type PartyIdentificationAndAccount107 struct {
	Id        PartyIdentification71Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount108 struct {
	Id        PartyIdentification71Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id,omitempty"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	Ntlty     CountryCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ntlty,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount109 struct {
	Id       PartyIdentification71Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI      LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId  AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount111 struct {
	Id         PartyIdentification71Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI        LEIIdentifier                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId    AlternatePartyIdentification7    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount112 struct {
	Id         PartyIdentification94Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI        LEIIdentifier                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId    AlternatePartyIdentification7    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount159 struct {
	Id        PartyIdentification71Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount19           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTime2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RegnDtls,omitempty"`
}

type PartyTextInformation2 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PtyCtctDtls,omitempty"`
}

type PendingProcessingReason10Choice struct {
	Cd    PendingProcessingReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT, CSDH, CVAL, CDEL, CDLR, CDAC, INBC
type PendingProcessingReason2Code string

type PendingProcessingReason8 struct {
	Cd          PendingProcessingReason10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type PendingProcessingStatus11Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

type PendingReason15 struct {
	Cd          PendingReason27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type PendingReason16 struct {
	Cd          PendingReason28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type PendingReason27Choice struct {
	Cd    PendingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type PendingReason28Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CSDH, CVAL, CDLR, INBC
type PendingReason2Code string

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus37Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []PendingReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

type PendingStatus38Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []PendingReason16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

type PlaceOfClearingIdentification1 struct {
	Id  AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id,omitempty"`
	LEI LEIIdentifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
}

type PlaceOfTradeIdentification1 struct {
	MktTpAndId MarketIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ctry"`
}

type Price7 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Tp"`
	Val PriceRateOrAmount3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Val"`
}

type PriceRateOrAmount3Choice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Amt"`
}

type PriceType4Choice struct {
	Mkt    Price7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Mkt"`
	Indctv Price7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PriorityNumeric4Choice struct {
	Nmrc  Exact4NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Nmrc"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of AFTE, WITH, BEFO, INFO
type ProcessingPosition3Code string

type ProcessingPosition7Choice struct {
	Cd    ProcessingPosition3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type ProcessingStatus52Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus11Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PdgPrcg"`
	Rpr        RepairStatus12Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rpr"`
	PdgCxl     PendingStatus38Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PdgCxl"`
	Prtry      ProprietaryStatusAndReason6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
	CxlReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CxlReqd"`
}

type ProprietaryReason4 struct {
	Rsn         GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason6 struct {
	PrtrySts GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtrySts"`
	PrtryRsn []ProprietaryReason4    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OrgnlAndCurFace"`
}

type QuantityAndAccount65 struct {
	SttlmQty  Quantity6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmQty"`
	DnmtnChc  Max210Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DnmtnChc,omitempty"`
	AcctOwnr  PartyIdentification98            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcctOwnr,omitempty"`
	SfkpgAcct SecuritiesAccount19              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgAcct"`
	CshAcct   CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CshAcct,omitempty"`
	SfkpgPlc  SafeKeepingPlace1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgPlc,omitempty"`
	QtyBrkdwn []QuantityBreakdown46            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 QtyBrkdwn,omitempty"`
}

type QuantityBreakdown46 struct {
	LotNb    GenericIdentification37            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LotNb,omitempty"`
	LotQty   FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LotQty,omitempty"`
	LotDtTm  DateAndDateTime2Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LotDtTm,omitempty"`
	LotPric  Price7                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LotPric,omitempty"`
	TpOfPric TypeOfPrice29Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TpOfPric,omitempty"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type References41Choice struct {
	SctiesSttlmTxId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SctiesSttlmTxId"`
	IntraPosMvmntId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IntraPosMvmntId"`
	IntraBalMvmntId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IntraBalMvmntId"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcctSvcrTxId"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktInfrstrctrTxId"`
	PoolId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PoolId"`
	OthrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OthrTxId"`
}

type Registration10Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type Registration9Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type RegistrationParameters6 struct {
	CertfctnId   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CertfctnId,omitempty"`
	CertfctnDtTm DateAndDateTime2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CertfctnDtTm,omitempty"`
	RegarAcct    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RegarAcct,omitempty"`
	CertNb       []SecuritiesCertificate4 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CertNb,omitempty"`
}

type RegistrationReason5 struct {
	Cd       Registration10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlInf,omitempty"`
}

type RepairReason10Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairReason8 struct {
	Cd          RepairReason10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type RepairStatus12Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []RepairReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

// May be one of STEX, REGU, DEFR
type Reporting2Code string

type Reporting6Choice struct {
	Cd    Reporting2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of PAIR, ROLP, RATE, CALL, CADJ, TOPU, WTHD
type RepurchaseType10Code string

type RepurchaseType23Choice struct {
	Cd    RepurchaseType10Code    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type Restriction5Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SafeKeepingPlace1 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat10Choice struct {
	Id      SafekeepingPlaceTypeAndText8             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TpAndId"`
	Prtry   GenericIdentification78                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
}

type SafekeepingPlaceTypeAndText8 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id,omitempty"`
}

type SecuritiesAccount19 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Nm,omitempty"`
}

type SecuritiesCertificate4 struct {
	Nb      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Nb"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Issr,omitempty"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SchmeNm,omitempty"`
}

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus5Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SecuritiesRTGS4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SecuritiesSettlementTransactionGenerationNotificationV08 struct {
	TxIdDtls            SettlementTypeAndIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TxIdDtls"`
	NbCounts            NumberCount1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NbCounts,omitempty"`
	Lnkgs               []Linkages37                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Lnkgs,omitempty"`
	TradDtls            SecuritiesTradeDetails75          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradDtls"`
	FinInstrmId         SecurityIdentification19          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FinInstrmId"`
	FinInstrmAttrbts    FinancialInstrumentAttributes91   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FinInstrmAttrbts,omitempty"`
	QtyAndAcctDtls      []QuantityAndAccount65            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 QtyAndAcctDtls"`
	SttlmParams         SettlementDetails145              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmParams"`
	DlvrgSttlmPties     SettlementParties62               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties      SettlementParties62               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RcvgSttlmPties,omitempty"`
	CshPties            CashParties26                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CshPties,omitempty"`
	SttlmAmt            AmountAndDirection87              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmAmt,omitempty"`
	OthrAmts            OtherAmounts39                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OthrAmts,omitempty"`
	OthrBizPties        OtherParties27                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OthrBizPties,omitempty"`
	AddtlPhysOrRegnDtls RegistrationParameters6           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlPhysOrRegnDtls,omitempty"`
	GnrtdRsn            []GeneratedReason5                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 GnrtdRsn,omitempty"`
	StsAndRsn           StatusAndReason28                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StsAndRsn,omitempty"`
	SplmtryData         []SupplementaryData1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SplmtryData,omitempty"`
}

type SecuritiesTradeDetails75 struct {
	TradId                  []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradId,omitempty"`
	CollTxId                []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CollTxId,omitempty"`
	PlcOfTrad               PlaceOfTradeIdentification1        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PlcOfTrad,omitempty"`
	PlcOfClr                PlaceOfClearingIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PlcOfClr,omitempty"`
	TradDt                  TradeDate8Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradDt,omitempty"`
	SttlmDt                 SettlementDate17Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmDt"`
	LateDlvryDt             DateAndDateTime2Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LateDlvryDt,omitempty"`
	AckdStsTmStmp           ISODateTime                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AckdStsTmStmp,omitempty"`
	MtchdStsTmStmp          ISODateTime                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MtchdStsTmStmp,omitempty"`
	DealPric                Price7                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DealPric,omitempty"`
	NbOfDaysAcrd            float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NbOfDaysAcrd,omitempty"`
	OpngClsg                OpeningClosing3Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OpngClsg,omitempty"`
	Rptg                    []Reporting6Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rptg,omitempty"`
	TradTxCond              []TradeTransactionCondition5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradTxCond,omitempty"`
	InvstrCpcty             InvestorCapacity4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 InvstrCpcty,omitempty"`
	TradOrgtrRole           TradeOriginator3Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TradOrgtrRole,omitempty"`
	TpOfPric                TypeOfPrice29Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TpOfPric,omitempty"`
	CcyToBuyOrSell          CurrencyToBuyOrSell1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CcyToBuyOrSell,omitempty"`
	MtchgSts                MatchingStatus27Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MtchgSts,omitempty"`
	AffirmSts               AffirmationStatus8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AffirmSts,omitempty"`
	FxAddtlDtls             Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FxAddtlDtls,omitempty"`
	SttlmInstrPrcgAddtlDtls Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmInstrPrcgAddtlDtls,omitempty"`
}

// May be one of CNCB, BSBK, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CORP, CLAI, AUTO, ETFT, BIYI, SWIF, SWIT
type SecuritiesTransactionType20Code string

type SecuritiesTransactionType37Choice struct {
	Cd    SecuritiesTransactionType20Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Desc,omitempty"`
}

type SettlementDate17Choice struct {
	Dt   DateAndDateTime2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Dt"`
	DtCd SettlementDateCode7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DtCd"`
}

// May be one of WISS
type SettlementDate4Code string

type SettlementDateCode7Choice struct {
	Cd    SettlementDate4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SettlementDetails145 struct {
	HldInd         HoldIndicator6                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 HldInd,omitempty"`
	Prty           PriorityNumeric4Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prty,omitempty"`
	SctiesTxTp     SecuritiesTransactionType37Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SctiesTxTp"`
	SttlmTxCond    []SettlementTransactionCondition20Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmTxCond,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrtlSttlmInd,omitempty"`
	BnfclOwnrsh    BeneficialOwnership4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 BnfclOwnrsh,omitempty"`
	BlckTrad       BlockTrade4Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 BlckTrad,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility4Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CCPElgblty,omitempty"`
	DlvryRtrRsn    DeliveryReturn3Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DlvryRtrRsn,omitempty"`
	CshClrSys      CashSettlementSystem4Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CshClrSys,omitempty"`
	XpsrTp         ExposureType16Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 XpsrTp,omitempty"`
	FxStgInstr     FXStandingInstruction4Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 FxStgInstr,omitempty"`
	MktClntSd      MarketClientSide6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktClntSd,omitempty"`
	NetgElgblty    NettingEligibility4Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NetgElgblty,omitempty"`
	Regn           Registration9Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Regn,omitempty"`
	RpTp           RepurchaseType23Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RpTp,omitempty"`
	LglRstrctns    Restriction5Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LglRstrctns,omitempty"`
	SctiesRTGS     SecuritiesRTGS4Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SctiesRTGS,omitempty"`
	SttlgCpcty     SettlingCapacity7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlgCpcty,omitempty"`
	SttlmSysMtd    SettlementSystemMethod4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmSysMtd,omitempty"`
	TaxCpcty       TaxCapacityParty4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TaxCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 StmpDtyTaxBsis,omitempty"`
	Trckg          Tracking4Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Trckg,omitempty"`
	AutomtcBrrwg   AutomaticBorrowing6Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AutomtcBrrwg,omitempty"`
	LttrOfGrnt     LetterOfGuarantee4Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 LttrOfGrnt,omitempty"`
	RtrLeg         bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 RtrLeg,omitempty"`
	ModCxlAllwd    ModificationCancellationAllowed4Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ModCxlAllwd,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ElgblForColl,omitempty"`
	SctiesSubBalTp GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SctiesSubBalTp,omitempty"`
	CshSubBalTp    GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CshSubBalTp,omitempty"`
}

type SettlementParties62 struct {
	Dpstry PartyIdentification127           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount159 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount159 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount159 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount159 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount159 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pty5,omitempty"`
}

type SettlementStatus17Choice struct {
	Pdg   PendingStatus37Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pdg"`
	Flng  FailingStatus10Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Flng"`
	Prtry ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod4Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type SettlementTransactionCondition20Choice struct {
	Cd    SettlementTransactionCondition8Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA, RPTO
type SettlementTransactionCondition8Code string

type SettlementTypeAndIdentification19 struct {
	AcctOwnrTxId      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcctOwnrTxId"`
	AcctSvcrTxId      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcrTxId,omitempty"`
	SctiesMvmntTp     ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SctiesMvmntTp"`
	Pmt               DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Pmt"`
	CmonId            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CmonId,omitempty"`
	PoolId            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PoolId,omitempty"`
	CorpActnEvtId     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CorpActnEvtId,omitempty"`
}

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity7Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type StatusAndReason28 struct {
	PrcgSts       ProcessingStatus52Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PrcgSts,omitempty"`
	IfrrdMtchgSts MatchingStatus24Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 IfrrdMtchgSts,omitempty"`
	MtchgSts      MatchingStatus24Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 MtchgSts,omitempty"`
	SttlmSts      SettlementStatus17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 SttlmSts,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty4Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TotalNumber1 struct {
	CurInstrNb     Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 CurInstrNb"`
	TtlOfLkdInstrs Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 TtlOfLkdInstrs"`
}

type Tracking4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type TradeDate8Choice struct {
	Dt   DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Dt"`
	DtCd TradeDateCode3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 DtCd"`
}

type TradeDateCode3Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type TradeOriginator3Choice struct {
	Cd    OriginatorRole2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of CBNS, XBNS, CCPN, XCPN, CDIV, XDIV, CRTS, XRTS, CWAR, XWAR, SPCU, SPEX, GTDL, BCRO, BCRP, BCFD, BCBL, BCBN, MAPR, NEGO, NMPR, BCPD
type TradeTransactionCondition4Code string

type TradeTransactionCondition5Choice struct {
	Cd    TradeTransactionCondition4Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice29Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

// May be one of ADEA, ACRU, IIND, CPCA, CLAT, NCRR, DDEA, DMCT, DCMX, DSEC, DQUA, INVE, LEOG, LATE, MIME, CMIS, NMAS, DTRA, OTHR, FRAP, PHYS, PLIS, INPS, PLCE, PODU, DEPT, ICAG, ICUS, IEXE, REGD, RTGS, SAFE, DMON, DDAT, SETS, SETR, TXST, DTRD, DELN, UNBR
type UnmatchedReason11Code string

type UnmatchedReason15 struct {
	Cd          UnmatchedReason21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 AddtlRsnInf,omitempty"`
}

type UnmatchedReason21Choice struct {
	Cd    UnmatchedReason11Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Prtry"`
}

type UnmatchedStatus16Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 NoSpcfdRsn"`
	Rsn        []UnmatchedReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Rsn"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.08 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
