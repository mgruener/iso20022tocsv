// Code generated by main. DO NOT EDIT.

package sese_032_001_05

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus7Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type AcknowledgementReason3 struct {
	Cd          AcknowledgementReason4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason4Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AffirmationStatus1Choice struct {
	Cd    AffirmationStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of AFFI, NAFI
type AffirmationStatus1Code string

type AlternatePartyIdentification2 struct {
	IdTp    IdentificationType4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IdTp"`
	Ctry    CountryCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ctry"`
	AltrnId Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId"`
}

type AmountAndDirection36 struct {
	AcrdIntrstInd       bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcrdIntrstInd,omitempty"`
	StmpDtyInd          bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StmpDtyInd,omitempty"`
	BrkrgAmtInd         bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 BrkrgAmtInd,omitempty"`
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms11            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FXDtls,omitempty"`
	ValDt               DateAndDateTimeChoice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ValDt,omitempty"`
}

type AmountAndDirection9 struct {
	Amt                 ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CdtDbtInd,omitempty"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms11            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FXDtls,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of LAMI, NBOR, YBOR
type AutoBorrowing1Code string

type AutomaticBorrowing1Choice struct {
	Cd    AutoBorrowing1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICFIIdentifier string

type BeneficialOwnership1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type BlockTrade1Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

// Must match the pattern [A-Z]{1,6}
type CFIIdentifier string

type CashAccountIdentification5Choice struct {
	IBAN  IBAN2007Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IBAN"`
	Prtry Max34Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type CashParties17 struct {
	Dbtr    PartyIdentificationAndAccount39 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Dbtr,omitempty"`
	DbtrAgt PartyIdentificationAndAccount50 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DbtrAgt,omitempty"`
	Cdtr    PartyIdentificationAndAccount39 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cdtr,omitempty"`
	CdtrAgt PartyIdentificationAndAccount50 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CdtrAgt,omitempty"`
	Intrmy  PartyIdentificationAndAccount50 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Intrmy,omitempty"`
}

type CashSettlementSystem1Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CentralCounterPartyEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type ClassificationType2Choice struct {
	ClssfctnFinInstrm CFIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnClssfctn"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type CurrencyToBuyOrSell1Choice struct {
	CcyToBuy  ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CcyToBuy"`
	CcyToSell ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CcyToSell"`
}

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeliveryReturn1Choice struct {
	Cd    DeliveryReturn1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of UNRE, DQUA, DMON, PART, SAFE, DUEB, PARD
type DeliveryReturn1Code string

type Document struct {
	SctiesSttlmTxGnrtnNtfctn SecuritiesSettlementTransactionGenerationNotificationV05 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SctiesSttlmTxGnrtnNtfctn"`
}

type DocumentNumber1Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LngNb"`
	PrtryNb GenericIdentification19           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtryNb"`
}

// May be one of ELIG, RETL, PROF
type Eligibility1Code string

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

type ExposureType10Choice struct {
	Cd    ExposureType4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of BFWD, PAYM, CCPC, COMM, CRDS, CRTL, CRSP, CCIR, CRPR, EQPT, EXTD, EQUS, EXPT, FIXI, FORX, FORW, FUTR, OPTN, LIQU, OTCD, REPO, RVPO, SLOA, SBSC, SCRP, SLEB, SHSL, SCIR, SCIE, SWPT, TBAS, TRCP
type ExposureType4Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FXStandingInstruction1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingReason3 struct {
	Cd          FailingReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type FailingReason3Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type FailingStatus3Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []FailingReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type FinancialInstrumentAttributes35 struct {
	PlcOfListg             MarketIdentification3Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity2Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RegnForm,omitempty"`
	PmtFrqcy               Frequency3Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PmtSts,omitempty"`
	VarblRateChngFrqcy     Frequency3Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 VarblRateChngFrqcy,omitempty"`
	ClssfctnTp             ClassificationType2Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle4Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OptnStyle,omitempty"`
	OptnTp                 OptionType2Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IntrstRate,omitempty"`
	YldToMtrtyRate         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 YldToMtrtyRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number2Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CpnAttchdNb,omitempty"`
	PoolNb                 GenericIdentification37                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MktOrIndctvPric,omitempty"`
	ExrcPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ExrcPric,omitempty"`
	SbcptPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SbcptPric,omitempty"`
	ConvsPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ConvsPric,omitempty"`
	StrkPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification14             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls Max350Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AmtsdVal"`
}

type ForeignExchangeTerms11 struct {
	UnitCcy  ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 UnitCcy"`
	QtdCcy   ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 QtdCcy"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 XchgRate"`
	RsltgAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RsltgAmt"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity2Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type Frequency3Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type GeneratedReason3 struct {
	Cd          GeneratedReasons3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

// May be one of COLL, CLAI, OTHR, RODE, SPLI, THRD, TRAN
type GeneratedReason3Code string

type GeneratedReasons3Choice struct {
	Cd    GeneratedReason3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Issr,omitempty"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SchmeNm,omitempty"`
}

type GenericIdentification21 struct {
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id,omitempty"`
}

type GenericIdentification37 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Issr,omitempty"`
}

type HoldIndicator4 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Rsn []RegistrationReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type IdentificationType4Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat1Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type InvestorCapacity1Choice struct {
	Cd    Eligibility1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type LetterOfGuarantee1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type Linkages17 struct {
	PrcgPos ProcessingPosition1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgPos,omitempty"`
	MsgNb   DocumentNumber1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MsgNb,omitempty"`
	Ref     References25Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ref"`
	LkdQty  PairedOrTurnedQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LkdQty,omitempty"`
	RefOwnr PartyIdentification36Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RefOwnr,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide1Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Desc"`
}

type MarketIdentification3Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Desc"`
}

type MarketIdentification78 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id,omitempty"`
	Tp MarketType3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType3Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type MatchingStatus19Choice struct {
	Mtchd  ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Mtchd"`
	Umtchd UnmatchedStatus12Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Umtchd"`
	Prtry  ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type MatchingStatus1Choice struct {
	Cd    MatchingStatus1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of MACH, NMAT
type MatchingStatus1Code string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type ModificationCancellationAllowed1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Adr,omitempty"`
}

type NettingEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type Number2Choice struct {
	Shrt Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Shrt"`
	Lng  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Lng"`
}

type NumberCount1Choice struct {
	CurInstrNb Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CurInstrNb"`
	TtlNb      TotalNumber1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TtlNb"`
}

type OpeningClosing1Choice struct {
	Cd    OpeningClosing1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of CLOP, OPEP
type OpeningClosing1Code string

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle4Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType2Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AmtsdVal"`
}

// May be one of SINT, MLTF, RMKT, MKTM, INVE, TAGT
type OriginatorRole2Code string

type OtherAmounts14 struct {
	AcrdIntrstAmt   AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcrdIntrstAmt,omitempty"`
	ChrgsFees       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ChrgsFees,omitempty"`
	CtryNtlFdrlTax  AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CtryNtlFdrlTax,omitempty"`
	TradAmt         AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradAmt,omitempty"`
	ExctgBrkrAmt    AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ExctgBrkrAmt,omitempty"`
	IsseDscntAllwnc AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IsseDscntAllwnc,omitempty"`
	PmtLevyTax      AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PmtLevyTax,omitempty"`
	LclTax          AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LclTax,omitempty"`
	LclTaxCtrySpcfc AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LclTaxCtrySpcfc,omitempty"`
	LclBrkrComssn   AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LclBrkrComssn,omitempty"`
	Mrgn            AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Mrgn,omitempty"`
	Othr            AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Othr,omitempty"`
	RgltryAmt       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RgltryAmt,omitempty"`
	ShppgAmt        AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ShppgAmt,omitempty"`
	SpclCncssn      AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SpclCncssn,omitempty"`
	StmpDty         AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StmpDty,omitempty"`
	StockXchgTax    AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StockXchgTax,omitempty"`
	TrfTax          AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TrfTax,omitempty"`
	TxTax           AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TxTax,omitempty"`
	ValAddedTax     AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ValAddedTax,omitempty"`
	WhldgTax        AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 WhldgTax,omitempty"`
	NetGnLoss       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NetGnLoss,omitempty"`
	CsmptnTax       AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CsmptnTax,omitempty"`
	AcrdCptlstnAmt  AmountAndDirection9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcrdCptlstnAmt,omitempty"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Tp"`
}

type OtherParties19 struct {
	Invstr         []PartyIdentificationAndAccount81 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Invstr,omitempty"`
	QlfdFrgnIntrmy PartyIdentificationAndAccount41   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 QlfdFrgnIntrmy,omitempty"`
	StockXchg      PartyIdentificationAndAccount86   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StockXchg,omitempty"`
	TradRgltr      PartyIdentificationAndAccount86   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradRgltr,omitempty"`
	TrptyAgt       PartyIdentificationAndAccount41   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TrptyAgt,omitempty"`
	Brkr           PartyIdentificationAndAccount41   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Brkr,omitempty"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PairedOrTurnedQuantity1Choice struct {
	PairdOffQty FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PairdOffQty,omitempty"`
	TrndQty     FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TrndQty,omitempty"`
}

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtryId"`
}

type PartyIdentification38Choice struct {
	BICFI    BICFIIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 BICFI"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NmAndAdr"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtryId"`
}

type PartyIdentification43Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NmAndAdr"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ctry"`
}

type PartyIdentification48 struct {
	Id       PartyIdentification44Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	AltrnId  AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	PrcgDt   DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount39 struct {
	Id         PartyIdentification43Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	AltrnId    AlternatePartyIdentification2    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount41 struct {
	Id        PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount42 struct {
	Id        PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount13           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount50 struct {
	Id         PartyIdentification38Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	AltrnId    AlternatePartyIdentification2    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount81 struct {
	Id        PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id,omitempty"`
	AltrnId   AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	Ntlty     CountryCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ntlty,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount86 struct {
	Id       PartyIdentification43Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	AltrnId  AlternatePartyIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AltrnId,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RegnDtls,omitempty"`
}

type PartyTextInformation2 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PtyCtctDtls,omitempty"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT, CSDH, CVAL, CDEL, CDLR, CDAC, INBC
type PendingProcessingReason2Code string

type PendingProcessingReason3 struct {
	Cd          PendingProcessingReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type PendingProcessingReason3Choice struct {
	Cd    PendingProcessingReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type PendingProcessingStatus3Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type PendingReason13Choice struct {
	Cd    PendingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type PendingReason2 struct {
	Cd          PendingReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type PendingReason2Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CSDH, CVAL, CDLR, INBC
type PendingReason2Code string

type PendingReason5 struct {
	Cd          PendingReason13Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus13Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []PendingReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type PendingStatus9Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []PendingReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ctry"`
}

type Price2 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Tp"`
	Val PriceRateOrAmountChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Val"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Amt"`
}

type PriceType1Choice struct {
	Mkt    Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Mkt"`
	Indctv Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PriorityNumeric1Choice struct {
	Nmrc  Exact4NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Nmrc"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type ProcessingPosition1Choice struct {
	Cd    ProcessingPosition3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of AFTE, WITH, BEFO, INFO
type ProcessingPosition3Code string

type ProcessingStatus23Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus3Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PdgPrcg"`
	Rpr        RepairStatus5Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rpr"`
	PdgCxl     PendingStatus13Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PdgCxl"`
	Prtry      ProprietaryStatusAndReason1       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
	CxlReqd    ProprietaryReason1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CxlReqd"`
}

type ProprietaryReason1 struct {
	Rsn         GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason1 struct {
	PrtrySts GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtrySts"`
	PrtryRsn []ProprietaryReason1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OrgnlAndCurFace"`
}

type QuantityAndAccount25 struct {
	SttlmQty  Quantity6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmQty"`
	DnmtnChc  Max210Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DnmtnChc,omitempty"`
	AcctOwnr  PartyIdentification36Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcctOwnr,omitempty"`
	SfkpgAcct SecuritiesAccount13              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgAcct"`
	CshAcct   CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CshAcct,omitempty"`
	SfkpgPlc  SafekeepingPlaceFormat3Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgPlc,omitempty"`
	QtyBrkdwn []QuantityBreakdown13            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 QtyBrkdwn,omitempty"`
}

type QuantityBreakdown13 struct {
	LotNb    GenericIdentification37            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LotNb,omitempty"`
	LotQty   FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LotQty,omitempty"`
	LotDtTm  DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LotDtTm,omitempty"`
	LotPric  Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LotPric,omitempty"`
	TpOfPric TypeOfPrice3Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TpOfPric,omitempty"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type References25Choice struct {
	SctiesSttlmTxId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SctiesSttlmTxId"`
	IntraPosMvmntId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IntraPosMvmntId"`
	IntraBalMvmntId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IntraBalMvmntId"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcctSvcrTxId"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MktInfrstrctrTxId"`
	PoolId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PoolId"`
	OthrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OthrTxId"`
}

type Registration1Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type Registration7Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type RegistrationParameters1 struct {
	CertfctnId   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CertfctnId,omitempty"`
	CertfctnDtTm DateAndDateTimeChoice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CertfctnDtTm,omitempty"`
	RegarAcct    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RegarAcct,omitempty"`
	CertNb       []SecuritiesCertificate1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CertNb,omitempty"`
}

type RegistrationReason3 struct {
	Cd       Registration7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlInf,omitempty"`
}

type RepairReason1 struct {
	Cd          RepairReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type RepairReason1Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairStatus5Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []RepairReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type Reporting2Choice struct {
	Cd    Reporting2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of STEX, REGU, DEFR
type Reporting2Code string

type RepurchaseType1Choice struct {
	Cd    RepurchaseType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of CADJ, CALL, PAIR, RATE, ROLP, TOPU, WTHD
type RepurchaseType2Code string

type Restriction1Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat3Choice struct {
	Id      SafekeepingPlaceTypeAndText3             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TpAndId"`
	Prtry   GenericIdentification21                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
}

type SafekeepingPlaceTypeAndText3 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id,omitempty"`
}

type SecuritiesAccount13 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Id"`
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Nm,omitempty"`
}

type SecuritiesCertificate1 struct {
	Nb      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Nb"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Issr,omitempty"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SchmeNm,omitempty"`
}

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus2Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type SecuritiesRTGS1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type SecuritiesSettlementTransactionGenerationNotificationV05 struct {
	TxIdDtls            SettlementTypeAndIdentification15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TxIdDtls"`
	NbCounts            NumberCount1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NbCounts,omitempty"`
	Lnkgs               []Linkages17                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Lnkgs,omitempty"`
	TradDtls            SecuritiesTradeDetails33          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradDtls"`
	FinInstrmId         SecurityIdentification14          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FinInstrmId"`
	FinInstrmAttrbts    FinancialInstrumentAttributes35   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FinInstrmAttrbts,omitempty"`
	QtyAndAcctDtls      []QuantityAndAccount25            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 QtyAndAcctDtls"`
	SttlmParams         SettlementDetails67               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmParams"`
	DlvrgSttlmPties     SettlementParties11               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties      SettlementParties11               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RcvgSttlmPties,omitempty"`
	CshPties            CashParties17                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CshPties,omitempty"`
	SttlmAmt            AmountAndDirection36              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmAmt,omitempty"`
	OthrAmts            OtherAmounts14                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OthrAmts,omitempty"`
	OthrBizPties        OtherParties19                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OthrBizPties,omitempty"`
	AddtlPhysOrRegnDtls RegistrationParameters1           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlPhysOrRegnDtls,omitempty"`
	GnrtdRsn            []GeneratedReason3                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 GnrtdRsn,omitempty"`
	StsAndRsn           StatusAndReason19                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StsAndRsn,omitempty"`
	SplmtryData         []SupplementaryData1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SplmtryData,omitempty"`
}

type SecuritiesTradeDetails33 struct {
	TradId                  []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradId,omitempty"`
	CollTxId                []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CollTxId,omitempty"`
	PlcOfTrad               MarketIdentification78             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PlcOfTrad,omitempty"`
	PlcOfClr                AnyBICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PlcOfClr,omitempty"`
	TradDt                  TradeDate1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradDt,omitempty"`
	SttlmDt                 SettlementDate1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmDt"`
	LateDlvryDt             DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LateDlvryDt,omitempty"`
	DealPric                Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DealPric,omitempty"`
	NbOfDaysAcrd            float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NbOfDaysAcrd,omitempty"`
	OpngClsg                OpeningClosing1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OpngClsg,omitempty"`
	Rptg                    []Reporting2Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rptg,omitempty"`
	TradTxCond              []TradeTransactionCondition1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradTxCond,omitempty"`
	InvstrCpcty             InvestorCapacity1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 InvstrCpcty,omitempty"`
	TradOrgtrRole           TradeOriginator1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TradOrgtrRole,omitempty"`
	TpOfPric                TypeOfPrice3Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TpOfPric,omitempty"`
	CcyToBuyOrSell          CurrencyToBuyOrSell1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CcyToBuyOrSell,omitempty"`
	MtchgSts                MatchingStatus1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MtchgSts,omitempty"`
	AffirmSts               AffirmationStatus1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AffirmSts,omitempty"`
	FxAddtlDtls             Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FxAddtlDtls,omitempty"`
	SttlmInstrPrcgAddtlDtls Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmInstrPrcgAddtlDtls,omitempty"`
}

// May be one of CNCB, BSBK, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CORP, CLAI, AUTO, ETFT
type SecuritiesTransactionType7Code string

type SecuritiesTransactionType9Choice struct {
	Cd    SecuritiesTransactionType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Desc,omitempty"`
}

type SettlementDate1Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Dt"`
	DtCd SettlementDateCode1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DtCd"`
}

// May be one of WISS
type SettlementDate4Code string

type SettlementDateCode1Choice struct {
	Cd    SettlementDate4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type SettlementDetails67 struct {
	HldInd         HoldIndicator4                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 HldInd,omitempty"`
	Prty           PriorityNumeric1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prty,omitempty"`
	SctiesTxTp     SecuritiesTransactionType9Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SctiesTxTp"`
	SttlmTxCond    []SettlementTransactionCondition12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmTxCond,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrtlSttlmInd,omitempty"`
	BnfclOwnrsh    BeneficialOwnership1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 BnfclOwnrsh,omitempty"`
	BlckTrad       BlockTrade1Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 BlckTrad,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CCPElgblty,omitempty"`
	DlvryRtrRsn    DeliveryReturn1Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DlvryRtrRsn,omitempty"`
	CshClrSys      CashSettlementSystem1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CshClrSys,omitempty"`
	XpsrTp         ExposureType10Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 XpsrTp,omitempty"`
	FxStgInstr     FXStandingInstruction1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 FxStgInstr,omitempty"`
	MktClntSd      MarketClientSide1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MktClntSd,omitempty"`
	NetgElgblty    NettingEligibility1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NetgElgblty,omitempty"`
	Regn           Registration1Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Regn,omitempty"`
	RpTp           RepurchaseType1Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RpTp,omitempty"`
	LglRstrctns    Restriction1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LglRstrctns,omitempty"`
	SctiesRTGS     SecuritiesRTGS1Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SctiesRTGS,omitempty"`
	SttlgCpcty     SettlingCapacity4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlgCpcty,omitempty"`
	SttlmSysMtd    SettlementSystemMethod1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmSysMtd,omitempty"`
	TaxCpcty       TaxCapacityParty1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TaxCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification20                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 StmpDtyTaxBsis,omitempty"`
	Trckg          Tracking1Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Trckg,omitempty"`
	AutomtcBrrwg   AutomaticBorrowing1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AutomtcBrrwg,omitempty"`
	LttrOfGrnt     LetterOfGuarantee1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 LttrOfGrnt,omitempty"`
	RtrLeg         bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 RtrLeg,omitempty"`
	ModCxlAllwd    ModificationCancellationAllowed1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ModCxlAllwd,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ElgblForColl,omitempty"`
	SctiesSubBalTp GenericIdentification20                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SctiesSubBalTp,omitempty"`
	CshSubBalTp    GenericIdentification20                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CshSubBalTp,omitempty"`
}

type SettlementParties11 struct {
	Dpstry PartyIdentification48           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount42 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pty5,omitempty"`
}

type SettlementStatus7Choice struct {
	Pdg   PendingStatus9Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pdg"`
	Flng  FailingStatus3Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Flng"`
	Prtry ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type SettlementSystemMethod1Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementTransactionCondition12Choice struct {
	Cd    SettlementTransactionCondition8Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA, RPTO
type SettlementTransactionCondition8Code string

type SettlementTypeAndIdentification15 struct {
	AcctOwnrTxId      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcctOwnrTxId"`
	AcctSvcrTxId      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcrTxId,omitempty"`
	SctiesMvmntTp     ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SctiesMvmntTp"`
	Pmt               DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Pmt"`
	CmonId            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CmonId,omitempty"`
	PoolId            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PoolId,omitempty"`
	CorpActnEvtId     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CorpActnEvtId,omitempty"`
}

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity4Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type StatusAndReason19 struct {
	PrcgSts       ProcessingStatus23Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PrcgSts,omitempty"`
	IfrrdMtchgSts MatchingStatus19Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 IfrrdMtchgSts,omitempty"`
	MtchgSts      MatchingStatus19Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 MtchgSts,omitempty"`
	SttlmSts      SettlementStatus7Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 SttlmSts,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty1Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TotalNumber1 struct {
	CurInstrNb     Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 CurInstrNb"`
	TtlOfLkdInstrs Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 TtlOfLkdInstrs"`
}

type Tracking1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type TradeDate1Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Dt"`
	DtCd TradeDateCode1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 DtCd"`
}

type TradeDateCode1Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type TradeOriginator1Choice struct {
	Cd    OriginatorRole2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type TradeTransactionCondition1Choice struct {
	Cd    TradeTransactionCondition4Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of CBNS, XBNS, CCPN, XCPN, CDIV, XDIV, CRTS, XRTS, CWAR, XWAR, SPCU, SPEX, GTDL, BCRO, BCRP, BCFD, BCBL, BCBN, MAPR, NEGO, NMPR, BCPD
type TradeTransactionCondition4Code string

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice3Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

type UnmatchedReason11 struct {
	Cd          UnmatchedReason14Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 AddtlRsnInf,omitempty"`
}

type UnmatchedReason14Choice struct {
	Cd    UnmatchedReason8Code    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Prtry"`
}

// May be one of CMIS, DDAT, DELN, DEPT, DMON, DDEA, DQUA, ADEA, SETR, SETS, DSEC, DTRA, CLAT, PHYS, IIND, FRAP, PLCE, PODU, REGD, RTGS, ICAG, CPCA, IEXE, NCRR, LEOG, NMAS, SAFE, DTRD, LATE, TXST, ICUS, OTHR, MIME, UNBR, INPS, ACRU, INVE, PLIS
type UnmatchedReason8Code string

type UnmatchedStatus12Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 NoSpcfdRsn"`
	Rsn        []UnmatchedReason11 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Rsn"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.032.001.05 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
