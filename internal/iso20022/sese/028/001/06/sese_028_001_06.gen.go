// Code generated by main. DO NOT EDIT.

package sese_028_001_06

import (
	"bytes"
	"encoding/xml"
	"time"
)

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternatePartyIdentification7 struct {
	IdTp    IdentificationType42Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ctry"`
	AltrnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AltrnId"`
}

type AmountAndDirection21 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CdtDbtInd,omitempty"`
}

type AmountAndDirection47 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CdtDbtInd,omitempty"`
	FXDtls    ForeignExchangeTerms23            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FXDtls,omitempty"`
}

type AmountAndDirection48 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms23            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FXDtls,omitempty"`
	ValDt               DateAndDateTimeChoice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ValDt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICFIIdentifier string

type BeneficialOwnership4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type CashAccountIdentification5Choice struct {
	IBAN  IBAN2007Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 IBAN"`
	Prtry Max34Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type CashParties25 struct {
	Dbtr    PartyIdentificationAndAccount111 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Dbtr,omitempty"`
	DbtrAgt PartyIdentificationAndAccount112 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DbtrAgt,omitempty"`
	Cdtr    PartyIdentificationAndAccount111 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cdtr,omitempty"`
	CdtrAgt PartyIdentificationAndAccount112 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CdtrAgt,omitempty"`
}

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem4Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type ClassificationType32Choice struct {
	ClssfctnFinInstrm CFIOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AltrnClssfctn"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DtTm"`
}

type DateCode18Choice struct {
	Cd    DateType5Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN
type DateType5Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesSttlmTxAllgmtNtfctn SecuritiesSettlementTransactionAllegementNotificationV06 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SctiesSttlmTxAllgmtNtfctn"`
}

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentAttributes64 struct {
	PlcOfListg             MarketIdentification3Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RegnForm,omitempty"`
	PmtFrqcy               Frequency23Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus5Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PmtSts,omitempty"`
	VarblRateChngFrqcy     Frequency23Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 VarblRateChngFrqcy,omitempty"`
	ClssfctnTp             ClassificationType32Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle8Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 OptnStyle,omitempty"`
	OptnTp                 OptionType6Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 IntrstRate,omitempty"`
	YldToMtrtyRate         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 YldToMtrtyRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number22Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CpnAttchdNb,omitempty"`
	PoolNb                 GenericIdentification37                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MktOrIndctvPric,omitempty"`
	ExrcPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ExrcPric,omitempty"`
	SbcptPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SbcptPric,omitempty"`
	ConvsPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ConvsPric,omitempty"`
	StrkPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification19             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls Max350Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AmtsdVal"`
}

type ForeignExchangeTerms23 struct {
	UnitCcy  ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 UnitCcy"`
	QtdCcy   ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 QtdCcy"`
	XchgRate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 XchgRate"`
	RsltgAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RsltgAmt"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity6Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type Frequency23Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SchmeNm,omitempty"`
}

type GenericIdentification37 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Issr,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Identification14 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type IdentificationType42Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat4Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// May be one of FRAN
type LegalFramework1Code string

type LegalFramework3Choice struct {
	Cd    LegalFramework1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide4Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Desc"`
}

type MarketIdentification3Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Desc"`
}

type MarketIdentification84 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id,omitempty"`
	Tp MarketType8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType8Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max8Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Adr,omitempty"`
}

type Number22Choice struct {
	Shrt Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Shrt"`
	Lng  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Lng"`
}

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle8Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType6Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type OtherAmounts32 struct {
	AcrdIntrstAmt AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AcrdIntrstAmt,omitempty"`
	ChrgsFees     AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ChrgsFees,omitempty"`
	TradAmt       AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TradAmt,omitempty"`
	ExctgBrkrAmt  AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ExctgBrkrAmt,omitempty"`
	LclTax        AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LclTax,omitempty"`
	LclBrkrComssn AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LclBrkrComssn,omitempty"`
	Othr          AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Othr,omitempty"`
	StmpDty       AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 StmpDty,omitempty"`
	TxTax         AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TxTax,omitempty"`
	WhldgTax      AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 WhldgTax,omitempty"`
	CsmptnTax     AmountAndDirection47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CsmptnTax,omitempty"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Tp"`
}

type OtherParties28 struct {
	Invstr         PartyIdentification99  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Invstr,omitempty"`
	QlfdFrgnIntrmy PartyIdentification100 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 QlfdFrgnIntrmy,omitempty"`
	StockXchg      PartyIdentification100 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 StockXchg,omitempty"`
	TradRgltr      PartyIdentification100 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TradRgltr,omitempty"`
	TrptyAgt       PartyIdentification100 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TrptyAgt,omitempty"`
}

type PartyIdentification100 struct {
	Id  PartyIdentification71Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ctry"`
}

type PartyIdentification71Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NmAndAdr"`
}

type PartyIdentification75 struct {
	Id       PartyIdentification44Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI      LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
	AltrnId  AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AltrnId,omitempty"`
	PrcgDt   DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AddtlInf,omitempty"`
}

type PartyIdentification92Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AnyBIC"`
	PrtryId GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrtryId"`
}

type PartyIdentification93Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ctry"`
}

type PartyIdentification94Choice struct {
	BICFI    BICFIIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 BICFI"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NmAndAdr"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrtryId"`
}

type PartyIdentification98 struct {
	Id  PartyIdentification92Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
}

type PartyIdentification99 struct {
	Id  PartyIdentification93Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
}

type PartyIdentificationAndAccount106 struct {
	Id        PartyIdentification71Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount24           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount111 struct {
	Id         PartyIdentification71Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI        LEIIdentifier                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
	AltrnId    AlternatePartyIdentification7    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount112 struct {
	Id         PartyIdentification94Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	LEI        LEIIdentifier                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
	AltrnId    AlternatePartyIdentification7    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AltrnId,omitempty"`
	CshAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CshAcct,omitempty"`
	ChrgsAcct  CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ChrgsAcct,omitempty"`
	ComssnAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ComssnAcct,omitempty"`
	TaxAcct    CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TaxAcct,omitempty"`
	AddtlInf   PartyTextInformation2            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RegnDtls,omitempty"`
}

type PartyTextInformation2 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PtyCtctDtls,omitempty"`
}

type PlaceOfClearingIdentification1 struct {
	Id  AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id,omitempty"`
	LEI LEIIdentifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
}

type PlaceOfTradeIdentification1 struct {
	MktTpAndId MarketIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ctry"`
}

type Price2 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Tp"`
	Val PriceRateOrAmountChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Val"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Amt"`
}

type PriceType1Choice struct {
	Mkt    Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Mkt"`
	Indctv Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type QuantityAndAccount42 struct {
	SttlmQty  FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SttlmQty"`
	DnmtnChc  Max210Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DnmtnChc,omitempty"`
	AcctOwnr  PartyIdentification98              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AcctOwnr,omitempty"`
	SfkpgAcct SecuritiesAccount24                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SfkpgAcct"`
	CshAcct   CashAccountIdentification5Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CshAcct,omitempty"`
	QtyBrkdwn []QuantityBreakdown30              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 QtyBrkdwn,omitempty"`
	SfkpgPlc  SafeKeepingPlace1                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SfkpgPlc,omitempty"`
}

type QuantityBreakdown30 struct {
	LotNb    GenericIdentification37            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LotNb,omitempty"`
	LotQty   FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LotQty,omitempty"`
	LotDtTm  DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LotDtTm,omitempty"`
	LotPric  Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LotPric,omitempty"`
	TpOfPric TypeOfPrice29Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TpOfPric,omitempty"`
}

type Rate2 struct {
	Sgn  bool    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Sgn,omitempty"`
	Rate float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Rate"`
}

type RateName1 struct {
	Issr   Max8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Issr,omitempty"`
	RateNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RateNm"`
}

// May be one of FIXE, FORF, VARI
type RateType1Code string

type RateType35Choice struct {
	Cd    RateType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

// May be one of NREG, YREG
type Registration1Code string

type Registration9Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type RepurchaseType13Choice struct {
	Cd    RepurchaseType6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of CADJ, TOPU, WTHD
type RepurchaseType6Code string

type SafeKeepingPlace1 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat10Choice struct {
	Id      SafekeepingPlaceTypeAndText8             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TpAndId"`
	Prtry   GenericIdentification78                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
}

type SafekeepingPlaceTypeAndText8 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id,omitempty"`
}

type SecuritiesAccount24 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Nm,omitempty"`
}

type SecuritiesFinancingTransactionDetails29 struct {
	SctiesFincgTradId Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SctiesFincgTradId,omitempty"`
	ClsgLegId         Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ClsgLegId,omitempty"`
	TermntnDt         TerminationDate4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TermntnDt,omitempty"`
	RateTp            RateType35Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RateTp,omitempty"`
	LglFrmwk          LegalFramework3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 LglFrmwk,omitempty"`
	MtrtyDtMod        bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MtrtyDtMod,omitempty"`
	IntrstPmt         bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 IntrstPmt,omitempty"`
	VarblRateSpprt    RateName1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 VarblRateSpprt,omitempty"`
	RpRate            Rate2                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RpRate,omitempty"`
	TxCallDely        Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TxCallDely,omitempty"`
	AcrdIntrstAmt     AmountAndDirection21   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AcrdIntrstAmt,omitempty"`
	TermntnTxAmt      AmountAndDirection21   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TermntnTxAmt,omitempty"`
	ScndLegNrrtv      Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ScndLegNrrtv,omitempty"`
}

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus5Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type SecuritiesRTGS4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type SecuritiesSettlementTransactionAllegementNotificationV06 struct {
	TxId                  Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TxId"`
	SttlmTpAndAddtlParams SettlementTypeAndAdditionalParameters12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SttlmTpAndAddtlParams"`
	MktInfrstrctrTxId     Identification14                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MktInfrstrctrTxId,omitempty"`
	TradDtls              SecuritiesTradeDetails54                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TradDtls"`
	FinInstrmId           SecurityIdentification19                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FinInstrmId"`
	FinInstrmAttrbts      FinancialInstrumentAttributes64         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 FinInstrmAttrbts,omitempty"`
	QtyAndAcctDtls        QuantityAndAccount42                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 QtyAndAcctDtls"`
	SctiesFincgDtls       SecuritiesFinancingTransactionDetails29 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SctiesFincgDtls,omitempty"`
	SttlmParams           SettlementDetails125                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SttlmParams"`
	DlvrgSttlmPties       SettlementParties36                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties        SettlementParties36                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RcvgSttlmPties,omitempty"`
	CshPties              CashParties25                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CshPties,omitempty"`
	SttlmAmt              AmountAndDirection48                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SttlmAmt,omitempty"`
	OthrAmts              OtherAmounts32                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 OthrAmts,omitempty"`
	OthrBizPties          OtherParties28                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 OthrBizPties,omitempty"`
	SplmtryData           []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SplmtryData,omitempty"`
}

type SecuritiesTradeDetails54 struct {
	TradId       []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TradId,omitempty"`
	CollTxId     []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CollTxId,omitempty"`
	AcctOwnrTxId []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 AcctOwnrTxId,omitempty"`
	PrcrTxId     Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrcrTxId,omitempty"`
	PlcOfTrad    PlaceOfTradeIdentification1        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PlcOfTrad,omitempty"`
	PlcOfClr     PlaceOfClearingIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PlcOfClr,omitempty"`
	TradDt       TradeDate5Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TradDt,omitempty"`
	SttlmDt      SettlementDate9Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SttlmDt"`
	DealPric     Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DealPric,omitempty"`
	NbOfDaysAcrd float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 NbOfDaysAcrd,omitempty"`
	TradTxCond   []TradeTransactionCondition5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TradTxCond,omitempty"`
	TpOfPric     TypeOfPrice29Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 TpOfPric,omitempty"`
}

// May be one of CNCB, BSBK, COLI, COLO, NETT, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDM, REPU, RVPO, SECB, SECL, SUBS, TRAD, TRPO, TRVO, TURN, AUTO, CLAI, CORP, ETFT, BIYI, CONV, ISSU, MKDW, MKUP, NSYN, REDI, RELE, SBBK, SYND
type SecuritiesTransactionType18Code string

type SecuritiesTransactionType33Choice struct {
	Cd    SecuritiesTransactionType18Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Desc,omitempty"`
}

// May be one of WISS
type SettlementDate4Code string

type SettlementDate9Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Dt"`
	DtCd SettlementDateCode7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DtCd"`
}

type SettlementDateCode7Choice struct {
	Cd    SettlementDate4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type SettlementDetails125 struct {
	HldInd         bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 HldInd,omitempty"`
	SctiesTxTp     SecuritiesTransactionType33Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SctiesTxTp"`
	SttlmTxCond    []SettlementTransactionCondition17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SttlmTxCond,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PrtlSttlmInd,omitempty"`
	BnfclOwnrsh    BeneficialOwnership4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 BnfclOwnrsh,omitempty"`
	CshClrSys      CashSettlementSystem4Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CshClrSys,omitempty"`
	MktClntSd      MarketClientSide4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 MktClntSd,omitempty"`
	Regn           Registration9Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Regn,omitempty"`
	RpTp           RepurchaseType13Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 RpTp,omitempty"`
	SctiesRTGS     SecuritiesRTGS4Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SctiesRTGS,omitempty"`
	StmpDtyTaxBsis GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 StmpDtyTaxBsis,omitempty"`
}

type SettlementParties36 struct {
	Dpstry PartyIdentification75            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount106 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Pty5,omitempty"`
}

type SettlementTransactionCondition17Choice struct {
	Cd    SettlementTransactionCondition4Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of CLEN, DIRT, DLWM, PHYS, SPDL, SPST, NOMC
type SettlementTransactionCondition4Code string

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

type SettlementTypeAndAdditionalParameters12 struct {
	SctiesMvmntTp ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 SctiesMvmntTp"`
	Pmt           DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Pmt"`
	CmonId        Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 CmonId,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TerminationDate4Choice struct {
	Dt DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Dt"`
	Cd DateCode18Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
}

type TradeDate5Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Dt"`
	DtCd TradeDateCode3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 DtCd"`
}

type TradeDateCode3Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of CBNS, XBNS, CCPN, XCPN, CDIV, XDIV, CRTS, XRTS, CWAR, XWAR, SPCU, SPEX, GTDL, BCRO, BCRP, BCFD, BCBL, BCBN, MAPR, NEGO, NMPR, BCPD
type TradeTransactionCondition4Code string

type TradeTransactionCondition5Choice struct {
	Cd    TradeTransactionCondition4Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice29Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Prtry"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.028.001.06 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
