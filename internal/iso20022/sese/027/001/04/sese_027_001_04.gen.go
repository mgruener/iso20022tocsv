// Code generated by main. DO NOT EDIT.

package sese_027_001_04

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus12Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn"`
}

type AcknowledgementReason1 struct {
	Cd          AcknowledgementReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	AddtlRsnInf Max210Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason1Choice struct {
	Cd    AcknowledgementReason3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

// May be one of ADEA, SMPG, OTHR
type AcknowledgementReason3Code string

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AmountAndDirection8 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type CancellationReason2 struct {
	Cd          CancellationReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	AddtlRsnInf Max210Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

type CancellationReason3Choice struct {
	Cd    CancelledStatusReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type CancellationStatus9Choice struct {
	NoSpcfdRsn NoReasonCode          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NoSpcfdRsn"`
	Rsn        []CancellationReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn"`
}

// May be one of CANI, OTHR
type CancelledStatusReason5Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeniedReason5 struct {
	Cd          DeniedReason7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	AddtlRsnInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

// May be one of ADEA, CDCY, CDRE, DCAN, DSET, DPRG, DREP, LATE, OTHR, CDRG
type DeniedReason6Code string

type DeniedReason7Choice struct {
	Cd    DeniedReason6Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification40 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type DeniedStatus10Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NoSpcfdRsn"`
	Rsn        []DeniedReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn"`
}

type Document struct {
	SctiesTxCxlReqStsAdvc SecuritiesTransactionCancellationRequestStatusAdviceV04 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SctiesTxCxlReqStsAdvc"`
}

type DocumentNumber1Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 LngNb"`
	PrtryNb GenericIdentification19           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrtryNb"`
}

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AmtsdVal"`
}

type GenericDocumentIdentification1 struct {
	MsgNb DocumentNumber1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 MsgNb,omitempty"`
	Id    Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SchmeNm,omitempty"`
}

type GenericIdentification40 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Identification1 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Adr,omitempty"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Tp"`
}

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrtryId"`
}

type PartyIdentification37Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Ctry"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Ctry"`
}

type PartyIdentification45Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NmAndAdr"`
}

type PartyIdentification46 struct {
	Id     PartyIdentification44Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	PrcgId Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrcgId,omitempty"`
}

type PartyIdentificationAndAccount44 struct {
	Id        PartyIdentification45Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	SfkpgAcct SecuritiesAccount13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrcgId,omitempty"`
}

type PendingReason15Choice struct {
	Cd    PendingReason9Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type PendingReason7 struct {
	Cd          PendingReason15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE, CDAC, INBC
type PendingReason9Code string

type PendingStatus11Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NoSpcfdRsn"`
	Rsn        []PendingReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Ctry"`
}

type ProcessingStatus45Choice struct {
	PdgCxl     PendingStatus11Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PdgCxl"`
	Rjctd      RejectionOrRepairStatus25Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rjctd"`
	Rpr        RejectionOrRepairStatus14Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rpr"`
	AckdAccptd AcknowledgedAcceptedStatus12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AckdAccptd"`
	Prtry      ProprietaryStatusAndReason1        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
	Dnd        DeniedStatus10Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Dnd"`
	Canc       CancellationStatus9Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Canc"`
}

type ProprietaryReason1 struct {
	Rsn         GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason1 struct {
	PrtrySts GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrtrySts"`
	PrtryRsn []ProprietaryReason1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type References22Choice struct {
	OthrTxId        GenericDocumentIdentification1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 OthrTxId"`
	SctiesFincgTxId SettlementTypeAndIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SctiesFincgTxId"`
	SctiesSttlmTxId SettlementTypeAndIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SctiesSttlmTxId"`
	IntraPosMvmntId Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 IntraPosMvmntId"`
}

type RejectionAndRepairReason13Choice struct {
	Cd    RejectionReason27Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type RejectionAndRepairReason18Choice struct {
	Cd    RejectionReason32Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type RejectionOrRepairReason13 struct {
	Cd          RejectionAndRepairReason13Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	AddtlRsnInf Max210Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

type RejectionOrRepairReason18 struct {
	Cd          RejectionAndRepairReason18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	AddtlRsnInf Max210Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AddtlRsnInf,omitempty"`
}

type RejectionOrRepairStatus14Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NoSpcfdRsn"`
	Rsn        []RejectionOrRepairReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn"`
}

type RejectionOrRepairStatus25Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 NoSpcfdRsn"`
	Rsn        []RejectionOrRepairReason18 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Rsn"`
}

// May be one of ADEA, LATE, SAFE, NRGM, NRGN, OTHR, REFE, INVM, INVL
type RejectionReason27Code string

// May be one of SAFE, ADEA, LATE, NRGN, REFE, NRGM, OTHR
type RejectionReason32Code string

type SecuritiesAccount13 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Id"`
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Nm,omitempty"`
}

type SecuritiesTransactionCancellationRequestStatusAdviceV04 struct {
	CxlReqRef   Identification1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 CxlReqRef"`
	TxId        TransactionIdentifications17 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 TxId,omitempty"`
	PrcgSts     ProcessingStatus45Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrcgSts"`
	TxDtls      TransactionDetails30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 TxDtls,omitempty"`
	SplmtryData []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SplmtryData,omitempty"`
}

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Desc,omitempty"`
}

type SettlementDate2Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Dt"`
	DtCd SettlementDateCode2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 DtCd"`
}

type SettlementDateCode2Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type SettlementParties13 struct {
	Dpstry PartyIdentification46           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Pty5,omitempty"`
}

type SettlementTypeAndIdentification13 struct {
	TxId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 TxId"`
	SctiesMvmntTp ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SctiesMvmntTp"`
	Pmt           DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Pmt"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TradeDate1Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Dt"`
	DtCd TradeDateCode1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 DtCd"`
}

type TradeDateCode1Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Prtry"`
}

type TransactionDetails30 struct {
	AcctOwnr        PartyIdentification36Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AcctOwnr,omitempty"`
	SfkpgAcct       SecuritiesAccount13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SfkpgAcct"`
	FinInstrmId     SecurityIdentification14    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 FinInstrmId"`
	SttlmQty        Quantity6Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SttlmQty"`
	SttlmAmt        AmountAndDirection8         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SttlmAmt,omitempty"`
	TradDt          TradeDate1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 TradDt,omitempty"`
	SttlmDt         SettlementDate2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 SttlmDt"`
	DlvrgSttlmPties SettlementParties13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties  SettlementParties13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 RcvgSttlmPties,omitempty"`
	Invstr          PartyIdentification37Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 Invstr,omitempty"`
}

type TransactionIdentifications17 struct {
	AcctSvcrTxId      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 PrcrTxId,omitempty"`
	AcctOwnrTxId      References22Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.001.04 AcctOwnrTxId"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
