// Code generated by main. DO NOT EDIT.

package sese_027_002_05

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus31Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn"`
}

type AcknowledgementReason19 struct {
	Cd          AcknowledgementReason22Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason22Choice struct {
	Cd    AcknowledgementReason3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

// May be one of ADEA, SMPG, OTHR
type AcknowledgementReason3Code string

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AmountAndDirection67 struct {
	Amt                 RestrictedFINActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Amt"`
	CdtDbtInd           CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type CancellationReason18 struct {
	Cd          CancellationReason28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type CancellationReason28Choice struct {
	Cd    CancelledStatusReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

type CancellationStatus20Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NoSpcfdRsn"`
	Rsn        []CancellationReason18 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn"`
}

// May be one of CANI, OTHR
type CancelledStatusReason5Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeniedReason17 struct {
	Cd          DeniedReason24Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type DeniedReason24Choice struct {
	Cd    DeniedReason6Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

// May be one of ADEA, CDCY, CDRE, DCAN, DSET, DPRG, DREP, LATE, OTHR, CDRG
type DeniedReason6Code string

type DeniedStatus19Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NoSpcfdRsn"`
	Rsn        []DeniedReason17 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn"`
}

type Document struct {
	SctiesTxCxlReqStsAdvc SecuritiesTransactionCancellationRequestStatusAdvice002V05 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SctiesTxCxlReqStsAdvc"`
}

type DocumentNumber6Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 LngNb"`
	PrtryNb GenericIdentification86           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrtryNb"`
}

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AmtsdVal"`
}

type GenericDocumentIdentification5 struct {
	MsgNb DocumentNumber6Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 MsgNb,omitempty"`
	Id    RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SchmeNm,omitempty"`
}

type GenericIdentification86 struct {
	Id      RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Identification16 struct {
	Id RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress12 struct {
	Nm RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Nm"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Tp"`
}

type PartyIdentification104Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NmAndAdr"`
}

type PartyIdentification108 struct {
	Id     PartyIdentification58Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	LEI    LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 LEI,omitempty"`
	PrcgId RestrictedFINXMax16Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrcgId,omitempty"`
}

type PartyIdentification109 struct {
	Id  PartyIdentification114Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 LEI,omitempty"`
}

type PartyIdentification110 struct {
	Id  PartyIdentification115Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 LEI,omitempty"`
}

type PartyIdentification114Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrtryId"`
}

type PartyIdentification115Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Ctry"`
}

type PartyIdentification58Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AnyBIC"`
	NmAndAdr NameAndAddress12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Ctry"`
}

type PartyIdentificationAndAccount146 struct {
	Id        PartyIdentification104Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	LEI       LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 LEI,omitempty"`
	SfkpgAcct SecuritiesAccount30          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SfkpgAcct,omitempty"`
	PrcgId    RestrictedFINXMax16Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrcgId,omitempty"`
}

type PendingReason25 struct {
	Cd          PendingReason42Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type PendingReason42Choice struct {
	Cd    PendingReason9Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE, CDAC, INBC
type PendingReason9Code string

type PendingStatus51Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NoSpcfdRsn"`
	Rsn        []PendingReason25 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn"`
}

type ProcessingStatus65Choice struct {
	PdgCxl     PendingStatus51Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PdgCxl"`
	Rjctd      RejectionOrRepairStatus35Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rjctd"`
	Rpr        RejectionOrRepairStatus34Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rpr"`
	AckdAccptd AcknowledgedAcceptedStatus31Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AckdAccptd"`
	Prtry      ProprietaryStatusAndReason7        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
	Dnd        DeniedStatus19Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Dnd"`
	Canc       CancellationStatus20Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Canc"`
}

type ProprietaryReason5 struct {
	Rsn         GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason7 struct {
	PrtrySts GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrtrySts"`
	PrtryRsn []ProprietaryReason5    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrtryRsn,omitempty"`
}

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type References59Choice struct {
	OthrTxId        GenericDocumentIdentification5    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 OthrTxId"`
	SctiesFincgTxId SettlementTypeAndIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SctiesFincgTxId"`
	SctiesSttlmTxId SettlementTypeAndIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SctiesSttlmTxId"`
	IntraPosMvmntId RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 IntraPosMvmntId"`
}

type RejectionAndRepairReason28Choice struct {
	Cd    RejectionReason27Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

type RejectionAndRepairReason29Choice struct {
	Cd    RejectionReason32Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

type RejectionOrRepairReason28 struct {
	Cd          RejectionAndRepairReason28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type RejectionOrRepairReason29 struct {
	Cd          RejectionAndRepairReason29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AddtlRsnInf,omitempty"`
}

type RejectionOrRepairStatus34Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NoSpcfdRsn"`
	Rsn        []RejectionOrRepairReason28 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn"`
}

type RejectionOrRepairStatus35Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 NoSpcfdRsn"`
	Rsn        []RejectionOrRepairReason29 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Rsn"`
}

// May be one of ADEA, LATE, SAFE, NRGM, NRGN, OTHR, REFE, INVM, INVL
type RejectionReason27Code string

// May be one of SAFE, ADEA, LATE, NRGN, REFE, NRGM, OTHR
type RejectionReason32Code string

type RestrictedFINActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type RestrictedFINActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

type SecuritiesAccount27 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Nm,omitempty"`
}

type SecuritiesAccount30 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Nm,omitempty"`
}

type SecuritiesTransactionCancellationRequestStatusAdvice002V05 struct {
	CxlReqRef   Identification16             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 CxlReqRef"`
	TxId        TransactionIdentifications39 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 TxId,omitempty"`
	PrcgSts     ProcessingStatus65Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrcgSts"`
	TxDtls      TransactionDetails88         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 TxDtls,omitempty"`
	SplmtryData []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SplmtryData,omitempty"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Desc,omitempty"`
}

type SettlementDate15Choice struct {
	Dt   DateAndDateTimeChoice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Dt"`
	DtCd SettlementDateCode11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 DtCd"`
}

type SettlementDateCode11Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

type SettlementParties49 struct {
	Dpstry PartyIdentification108           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Pty5,omitempty"`
}

type SettlementTypeAndIdentification22 struct {
	TxId          RestrictedFINXMax16Text  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 TxId"`
	SctiesMvmntTp ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SctiesMvmntTp"`
	Pmt           DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Pmt"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TradeDate6Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Dt"`
	DtCd TradeDateCode4Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 DtCd"`
}

type TradeDateCode4Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Prtry"`
}

type TransactionDetails88 struct {
	AcctOwnr        PartyIdentification109   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AcctOwnr,omitempty"`
	SfkpgAcct       SecuritiesAccount27      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SfkpgAcct"`
	FinInstrmId     SecurityIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 FinInstrmId"`
	SttlmQty        Quantity10Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SttlmQty"`
	SttlmAmt        AmountAndDirection67     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SttlmAmt,omitempty"`
	TradDt          TradeDate6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 TradDt,omitempty"`
	SttlmDt         SettlementDate15Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 SttlmDt"`
	DlvrgSttlmPties SettlementParties49      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties  SettlementParties49      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 RcvgSttlmPties,omitempty"`
	Invstr          PartyIdentification110   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 Invstr,omitempty"`
}

type TransactionIdentifications39 struct {
	AcctSvcrTxId      RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 PrcrTxId,omitempty"`
	AcctOwnrTxId      References59Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.027.002.05 AcctOwnrTxId"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
