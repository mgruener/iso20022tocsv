// Code generated by main. DO NOT EDIT.

package sese_030_001_05

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcceptedReason4Choice struct {
	Cd    AcknowledgementReason8Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type AcceptedStatus4Choice struct {
	NoSpcfdRsn NoReasonCode            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 NoSpcfdRsn"`
	Rsn        []AcceptedStatusReason4 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Rsn"`
}

type AcceptedStatusReason4 struct {
	RsnCd       AcceptedReason4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 RsnCd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AddtlRsnInf,omitempty"`
}

// May be one of NARR
type AcknowledgementReason8Code string

type AdditionalInformation9 struct {
	AcctOwnrTxId Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AcctOwnrTxId,omitempty"`
	ClssfctnTp   ClassificationType1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 ClssfctnTp,omitempty"`
	SfkpgAcct    SecuritiesAccount13                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SfkpgAcct,omitempty"`
	FinInstrmId  SecurityIdentification14           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 FinInstrmId,omitempty"`
	Qty          FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Qty,omitempty"`
	FctvDt       DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 FctvDt,omitempty"`
	XpryDt       DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 XpryDt,omitempty"`
	CutOffDt     DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 CutOffDt,omitempty"`
	Invstr       PartyIdentification43Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Invstr,omitempty"`
	DlvrgPty1    PartyIdentificationAndAccount43    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 DlvrgPty1,omitempty"`
	RcvgPty1     PartyIdentificationAndAccount43    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 RcvgPty1,omitempty"`
	PrcgSts      ProcessingStatus39Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrcgSts,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of LAMI, NBOR, YBOR, RTRN
type AutoBorrowing2Code string

type AutomaticBorrowing2Choice struct {
	Cd    AutoBorrowing2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

// Must match the pattern [A-Z]{1,6}
type CFIIdentifier string

type CancellationReason17Choice struct {
	Cd    CancelledStatusReason14Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type CancellationReason7 struct {
	Cd          CancellationReason17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	AddtlRsnInf Max210Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AddtlRsnInf,omitempty"`
}

type CancelledStatus5Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 NoSpcfdRsn"`
	Rsn        CancellationReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Rsn"`
}

// May be one of NARR
type CancelledStatusReason14Code string

type ClassificationType1Choice struct {
	ClssfctnFinInstrm CFIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AltrnClssfctn"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 DtTm"`
}

type Document struct {
	SctiesSttlmCondsModReq SecuritiesSettlementConditionsModificationRequestV05 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SctiesSttlmCondsModReq"`
}

type DocumentNumber1Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 LngNb"`
	PrtryNb GenericIdentification19           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrtryNb"`
}

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AmtsdVal"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Issr,omitempty"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SchmeNm,omitempty"`
}

type HoldIndicator4 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Ind"`
	Rsn []RegistrationReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Rsn,omitempty"`
}

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type LinkageType1Choice struct {
	Cd    LinkageType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

// May be one of LINK, UNLK, SOFT
type LinkageType1Code string

type Linkages27 struct {
	PrcgPos ProcessingPosition5Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrcgPos,omitempty"`
	MsgNb   DocumentNumber1Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 MsgNb,omitempty"`
	Ref     References24Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Ref"`
	RefOwnr PartyIdentification36Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 RefOwnr,omitempty"`
}

type MatchingDenied1Choice struct {
	Cd    MatchingProcess1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

// May be one of UNMT, MTRE
type MatchingProcess1Code string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Adr,omitempty"`
}

// May be one of NORE
type NoReasonCode string

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Tp"`
}

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrtryId"`
}

type PartyIdentification43Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 NmAndAdr"`
}

type PartyIdentificationAndAccount43 struct {
	Id        PartyIdentification43Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Id"`
	SfkpgAcct SecuritiesAccount13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrcgId,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Ctry"`
}

type PriorityNumeric1Choice struct {
	Nmrc  Exact4NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Nmrc"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

// May be one of AFTE, BEFO, WITH
type ProcessingPosition4Code string

type ProcessingPosition5Choice struct {
	Cd    ProcessingPosition4Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type ProcessingStatus39Choice struct {
	Rjctd  RejectedStatus10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Rjctd"`
	Canc   CancelledStatus5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Canc"`
	Accptd AcceptedStatus4Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Accptd"`
}

type References16 struct {
	AcctOwnrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AcctOwnrTxId,omitempty"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrcrTxId,omitempty"`
	PoolId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PoolId,omitempty"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 CmonId,omitempty"`
	TradId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 TradId,omitempty"`
}

type References24Choice struct {
	SctiesSttlmTxId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SctiesSttlmTxId"`
	IntraPosMvmntId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 IntraPosMvmntId"`
	IntraBalMvmntId   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 IntraBalMvmntId"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AcctSvcrTxId"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 MktInfrstrctrTxId"`
	PoolId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PoolId"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 CmonId"`
	TradId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 TradId"`
	OthrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 OthrTxId"`
}

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type Registration7Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type RegistrationReason3 struct {
	Cd       Registration7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	AddtlInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AddtlInf,omitempty"`
}

type RejectedStatus10Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 NoSpcfdRsn"`
	Rsn        []RejectionReason19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Rsn"`
}

type RejectionReason17Choice struct {
	Cd    RejectionReason40Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type RejectionReason19 struct {
	Cd          RejectionReason17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AddtlRsnInf,omitempty"`
}

// May be one of SETS, DDAT, CASY, DDEA, DEPT, DMON, DQUA, DSEC, DTRD, ICAG, ICUS, IEXE, NARR, NCRR, PLCE, RTGS, SETR
type RejectionReason40Code string

type RequestDetails13 struct {
	Ref          References16                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Ref"`
	AutomtcBrrwg AutomaticBorrowing2Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AutomtcBrrwg,omitempty"`
	RtnInd       bool                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 RtnInd,omitempty"`
	Lkg          LinkageType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Lkg,omitempty"`
	Prty         PriorityNumeric1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prty,omitempty"`
	OthrPrcg     []GenericIdentification20           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 OthrPrcg,omitempty"`
	PrtlSttlmInd SettlementTransactionCondition5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PrtlSttlmInd,omitempty"`
	SctiesRTGS   SecuritiesRTGS1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SctiesRTGS,omitempty"`
	HldInd       HoldIndicator4                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 HldInd,omitempty"`
	MtchgDnl     MatchingDenied1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 MtchgDnl,omitempty"`
	UnltrlSplt   UnilateralSplit1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 UnltrlSplt,omitempty"`
	Lnkgs        []Linkages27                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Lnkgs,omitempty"`
}

type SecuritiesAccount13 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Id"`
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Nm,omitempty"`
}

type SecuritiesRTGS1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type SecuritiesSettlementConditionsModificationRequestV05 struct {
	AcctOwnr    PartyIdentification36Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AcctOwnr,omitempty"`
	SfkpgAcct   SecuritiesAccount13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SfkpgAcct"`
	ReqDtls     []RequestDetails13          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 ReqDtls"`
	AddtlInf    []AdditionalInformation9    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 AddtlInf,omitempty"`
	SplmtryData []SupplementaryData1        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 SplmtryData,omitempty"`
}

// May be one of TRAD
type SecuritiesTransactionType5Code string

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Desc,omitempty"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type UnilateralSplit1Choice struct {
	Cd    SecuritiesTransactionType5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.030.001.05 Prtry"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
