// Code generated by main. DO NOT EDIT.

package sese_012_001_09

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account27 struct {
	Id       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
	AcctSvcr PartyIdentification139 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AcctSvcr"`
}

type Account28 struct {
	OwnrId      PartyIdentification132 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OwnrId,omitempty"`
	AcctId      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AcctId,omitempty"`
	Dsgnt       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dsgnt,omitempty"`
	AcctNm      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AcctNm,omitempty"`
	Svcr        PartyIdentification132 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Svcr,omitempty"`
	SubAcctDtls SubAccount5            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SubAcctDtls,omitempty"`
}

type AccountIdentificationAndName6 struct {
	Nm   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm,omitempty"`
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IBAN,omitempty"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Othr,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type ActiveCurrencyAnd13DecimalAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalInformation15 struct {
	InfTp  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 InfTp"`
	InfVal Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 InfVal"`
}

type AdditionalReference10 struct {
	Ref     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ref"`
	RefIssr PartyIdentification139 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RefIssr,omitempty"`
	MsgNm   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 MsgNm,omitempty"`
}

type AdditionalReference11 struct {
	Ref     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ref"`
	RefIssr PartyIdentification139 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RefIssr,omitempty"`
	MsgNm   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 MsgNm,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// May be one of LIQU, NLIQ
type AllOtherCash1Code string

type AlternatePartyIdentification7 struct {
	IdTp    IdentificationType42Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ctry"`
	AltrnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AltrnId"`
}

type AlternateSecurityIdentification7 struct {
	Id    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	IdSrc IdentificationSource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IdSrc"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// Must match the pattern AT[0-9]{5,5}
type AustrianBankleitzahlIdentifier string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type BICFIDec2014Identifier string

// Must match the pattern (BBG)[BCDFGHJKLMNPQRSTVWXYZ\d]{8}\d
type Bloomberg2Identifier string

type BranchData2 struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
	Nm      Max140Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm,omitempty"`
	PstlAdr PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PstlAdr,omitempty"`
}

// May be one of SLDP, SLRP, DLPR
type BusinessFlowType1Code string

// Must match the pattern CP[0-9]{4,4}
type CHIPSParticipantIdentifier string

// Must match the pattern CH[0-9]{6,6}
type CHIPSUniversalIdentifier string

// Must match the pattern CA[0-9]{9,9}
type CanadianPaymentsARNIdentifier string

// May be one of LIQU, NLIQ
type CashAll1Code string

type CashAsset1 struct {
	CshAsstTp CashAssetType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshAsstTp"`
	AddtlInf  AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type CashAssetType1Choice struct {
	Cd    CashAssetType1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of CSH2, CSH1
type CashAssetType1Code string

type ChargeBasis2Choice struct {
	Cd    TaxationBasis5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type ChargeOrCommissionDiscount1 struct {
	Amt  ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Amt,omitempty"`
	Rate float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Rate,omitempty"`
	Bsis WaivingInstruction2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Bsis,omitempty"`
}

type ChargeType5Choice struct {
	Cd    InvestmentFundFee1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type ClearingSystemMemberIdentification2Choice struct {
	USCHU       CHIPSUniversalIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 USCHU"`
	NZNCC       NewZealandNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NZNCC"`
	IENSC       IrishNSCIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IENSC"`
	GBSC        UKDomesticSortCodeIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 GBSC"`
	USCH        CHIPSParticipantIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 USCH"`
	CHBC        SwissBCIdentifier                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CHBC"`
	USFW        FedwireRoutingNumberIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 USFW"`
	PTNCC       PortugueseNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PTNCC"`
	RUCB        RussianCentralBankIdentificationCodeIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RUCB"`
	ITNCC       ItalianDomesticIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ITNCC"`
	ATBLZ       AustrianBankleitzahlIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ATBLZ"`
	CACPA       CanadianPaymentsARNIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CACPA"`
	CHSIC       SwissSICIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CHSIC"`
	DEBLZ       GermanBankleitzahlIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DEBLZ"`
	ESNCC       SpanishDomesticInterbankingIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ESNCC"`
	ZANCC       SouthAfricanNCCIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ZANCC"`
	HKNCC       HongKongBankIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 HKNCC"`
	AUBSBx      ExtensiveBranchNetworkIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AUBSBx"`
	AUBSBs      SmallNetworkIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AUBSBs"`
	INIFSC      IndianFinancialSystemCodeIdentifier            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 INIFSC"`
	GRHEBIC     HellenicBankIdentificationCodeIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 GRHEBIC"`
	PLKNR       PolishNationalClearingCodeIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PLKNR"`
	OthrClrCdId Max35Text                                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrClrCdId"`
}

type ClearingSystemMemberIdentification4Choice struct {
	USCHU  CHIPSUniversalIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 USCHU"`
	NZNCC  NewZealandNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NZNCC"`
	IENSC  IrishNSCIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IENSC"`
	GBSC   UKDomesticSortCodeIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 GBSC"`
	USCH   CHIPSParticipantIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 USCH"`
	CHBC   SwissBCIdentifier                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CHBC"`
	USFW   FedwireRoutingNumberIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 USFW"`
	PTNCC  PortugueseNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PTNCC"`
	RUCB   RussianCentralBankIdentificationCodeIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RUCB"`
	ITNCC  ItalianDomesticIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ITNCC"`
	ATBLZ  AustrianBankleitzahlIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ATBLZ"`
	CACPA  CanadianPaymentsARNIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CACPA"`
	CHSIC  SwissSICIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CHSIC"`
	DEBLZ  GermanBankleitzahlIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DEBLZ"`
	ESNCC  SpanishDomesticInterbankingIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ESNCC"`
	ZANCC  SouthAfricanNCCIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ZANCC"`
	HKNCC  HongKongBankIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 HKNCC"`
	AUBSBx ExtensiveBranchNetworkIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AUBSBx"`
	AUBSBs SmallNetworkIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AUBSBs"`
}

// Must be at least 1 items long
type ConsolidatedTapeAssociationIdentifier string

type ContactIdentification2 struct {
	NmPrfx   NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmPrfx,omitempty"`
	GvnNm    Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 GvnNm,omitempty"`
	Nm       Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm"`
	PhneNb   PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PhneNb,omitempty"`
	MobNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 MobNb,omitempty"`
	FaxNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 FaxNb,omitempty"`
	EmailAdr Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 EmailAdr,omitempty"`
}

type Conversion1 struct {
	TrgtScty FinancialInstrumentIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrgtScty"`
	AddtlInf []AdditionalInformation15          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type CreditTransfer9 struct {
	Dbtr           PartyIdentification132               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dbtr,omitempty"`
	DbtrAcct       AccountIdentificationAndName6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DbtrAcct,omitempty"`
	DbtrAgt        FinancialInstitutionIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DbtrAgt,omitempty"`
	DbtrAgtAcct    AccountIdentificationAndName6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DbtrAgtAcct,omitempty"`
	IntrmyAgt1     FinancialInstitutionIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IntrmyAgt1,omitempty"`
	IntrmyAgt1Acct AccountIdentificationAndName6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IntrmyAgt1Acct,omitempty"`
	IntrmyAgt2     FinancialInstitutionIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IntrmyAgt2,omitempty"`
	IntrmyAgt2Acct AccountIdentificationAndName6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IntrmyAgt2Acct,omitempty"`
	CdtrAgt        FinancialInstitutionIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CdtrAgt"`
	CdtrAgtAcct    AccountIdentificationAndName6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CdtrAgtAcct,omitempty"`
	Cdtr           PartyIdentification132               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cdtr,omitempty"`
	CdtrAcct       AccountIdentificationAndName6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CdtrAcct"`
}

type Crystallisation1 struct {
	TrchId           Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrchId"`
	CrstllsdUnitsNb  float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CrstllsdUnitsNb,omitempty"`
	UcrstllsdUnitsNb float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 UcrstllsdUnitsNb,omitempty"`
	AddtlInf         []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type DateAndAmount2 struct {
	Dt  ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dt,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Amt"`
}

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DtTm"`
}

type DateQuarter1Choice struct {
	Dt  ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dt"`
	Prd Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prd"`
}

type Document struct {
	PrtflTrfInstr PortfolioTransferInstructionV09 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtflTrfInstr"`
}

// Must be at least 1 items long
type EuroclearClearstreamIdentifier string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type Extension1 struct {
	PlcAndNm Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PlcAndNm"`
	Txt      Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Txt"`
}

// Must match the pattern AU[0-9]{6,6}
type ExtensiveBranchNetworkIdentifier string

// Must be at least 1 items long
type ExternalAccountIdentification1Code string

// Must match the pattern FW[0-9]{9,9}
type FedwireRoutingNumberIdentifier string

type Fee5 struct {
	Tp           ChargeType5Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp"`
	Bsis         ChargeBasis2Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Bsis,omitempty"`
	StdAmt       ActiveCurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 StdAmt,omitempty"`
	StdRate      float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 StdRate,omitempty"`
	DscntDtls    ChargeOrCommissionDiscount1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DscntDtls,omitempty"`
	ApldAmt      ActiveCurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ApldAmt,omitempty"`
	ApldRate     float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ApldRate,omitempty"`
	NonStdSLARef Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NonStdSLARef,omitempty"`
	RcptId       PartyIdentification139      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RcptId,omitempty"`
	InftvInd     bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 InftvInd"`
}

type FinancialInstitutionIdentification16 struct {
	BICFI       BICFIDec2014Identifier                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 BICFI,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ClrSysMmbId,omitempty"`
	NmAndAdr    NameAndAddress5                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmAndAdr,omitempty"`
	LEI         LEIIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LEI,omitempty"`
	PrtryId     Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtryId,omitempty"`
	BrnchId     BranchData2                               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 BrnchId,omitempty"`
}

type FinancialInstrument1Choice struct {
	Scty     FinancialInstrumentIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Scty"`
	CshAsst  CashAsset1                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshAsst"`
	OthrAsst OtherAsset1                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrAsst"`
}

type FinancialInstrument69 struct {
	LineId         Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LineId,omitempty"`
	Instrm         FinancialInstrument1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Instrm"`
	Qty            Quantity44Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Qty,omitempty"`
	TrfTp          TransferType1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfTp"`
	Convs          Conversion1                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Convs,omitempty"`
	UnitsDtls      []Unit11                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 UnitsDtls,omitempty"`
	ClntRef        AdditionalReference10             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ClntRef,omitempty"`
	CtrPtyRef      AdditionalReference10             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CtrPtyRef,omitempty"`
	BizFlowTp      BusinessFlowType1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 BizFlowTp,omitempty"`
	AvrgAcqstnPric ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AvrgAcqstnPric,omitempty"`
	TrfCcy         ActiveOrHistoricCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfCcy,omitempty"`
	TtlBookVal     DateAndAmount2                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TtlBookVal,omitempty"`
	TrfeeAcct      Account28                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfeeAcct,omitempty"`
	Trfr           Account28                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Trfr,omitempty"`
	ReqdTrfDt      ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ReqdTrfDt,omitempty"`
	ReqdTradDt     ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ReqdTradDt,omitempty"`
	ReqdSttlmDt    ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ReqdSttlmDt,omitempty"`
	PmtDtls        PaymentInstrument14               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PmtDtls,omitempty"`
	CrstllstnDtls  Crystallisation1                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CrstllstnDtls,omitempty"`
	TaxValtnPt     Tax36                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxValtnPt,omitempty"`
	SttlmPtiesDtls FundSettlementParameters14        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SttlmPtiesDtls,omitempty"`
	AddtlInf       []AdditionalInformation15         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type FinancialInstrumentIdentification1 struct {
	Id     SecurityIdentification25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Nm     Max350Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm,omitempty"`
	ShrtNm Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ShrtNm,omitempty"`
}

type FundPortfolio3Choice struct {
	TaxEffcntPdct TaxEfficientProduct3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxEffcntPdct"`
	GnlInvstmt    GeneralInvestment1   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 GnlInvstmt"`
	Pnsn          Pension1             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pnsn"`
}

type FundSettlementParameters14 struct {
	SfkpgPlc         SafekeepingPlaceFormat28Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SfkpgPlc,omitempty"`
	TradTxCond       []TradeTransactionCondition8Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TradTxCond,omitempty"`
	SttlmTxCond      []SettlementTransactionCondition30Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SttlmTxCond,omitempty"`
	SctiesSttlmSysId Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SctiesSttlmSysId,omitempty"`
	RcvgSdDtls       SettlementParties74                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RcvgSdDtls,omitempty"`
	DlvrgSdDtls      SettlementParties74                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DlvrgSdDtls,omitempty"`
}

// May be one of MALE, FEMA
type GenderCode string

type GeneralInvestment1 struct {
	Tp            GeneralInvestmentAccountType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp,omitempty"`
	CurInvstmtAmt ActiveCurrencyAnd13DecimalAmount    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CurInvstmtAmt,omitempty"`
	EstmtdVal     DateAndAmount2                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 EstmtdVal,omitempty"`
	AddtlInf      []AdditionalInformation15           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type GeneralInvestmentAccountType1Choice struct {
	Cd    GeneralInvestmentAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of EQUI
type GeneralInvestmentAccountType1Code string

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Issr,omitempty"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SchmeNm,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SchmeNm,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
}

// Must match the pattern BL[0-9]{8,8}
type GermanBankleitzahlIdentifier string

// Must match the pattern GR[0-9]{7,7}
type HellenicBankIdentificationCodeIdentifier string

// May be one of TFEE, TFOR
type HolderType1Code string

// Must match the pattern HK[0-9]{3,3}
type HongKongBankIdentifier string

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOYear time.Time

func (t *ISOYear) UnmarshalText(text []byte) error {
	return (*xsdGYear)(t).UnmarshalText(text)
}
func (t ISOYear) MarshalText() ([]byte, error) {
	return xsdGYear(t).MarshalText()
}

type ISOYearMonth time.Time

func (t *ISOYearMonth) UnmarshalText(text []byte) error {
	return (*xsdGYearMonth)(t).UnmarshalText(text)
}
func (t ISOYearMonth) MarshalText() ([]byte, error) {
	return xsdGYearMonth(t).MarshalText()
}

type IdentificationSource1Choice struct {
	Dmst  CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dmst"`
	Prtry Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type IdentificationType42Choice struct {
	Cd    TypeOfIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// Must match the pattern IN[a-zA-Z0-9]{11,11}
type IndianFinancialSystemCodeIdentifier string

type IndividualPerson8 struct {
	Nm            Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm"`
	GvnNm         Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 GvnNm"`
	NmPrfx        NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmPrfx,omitempty"`
	NmSfx         Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmSfx,omitempty"`
	Gndr          GenderCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Gndr,omitempty"`
	BirthDt       ISODate         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 BirthDt,omitempty"`
	SclSctyNb     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SclSctyNb,omitempty"`
	IndvInvstrAdr PostalAddress1  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IndvInvstrAdr"`
}

type Intermediary43 struct {
	Id       PartyIdentification139 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Acct     Account27              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Acct,omitempty"`
	Role     Role4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Role,omitempty"`
	CtctPrsn ContactIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CtctPrsn,omitempty"`
}

type InvestmentAccount69 struct {
	Id     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
	Dsgnt  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dsgnt,omitempty"`
	AcctNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AcctNm,omitempty"`
	Svcr   PartyIdentification132 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Svcr,omitempty"`
}

// May be one of BEND, BRKF, COMM, CDPL, CDSC, CBCH, DLEV, FEND, INIT, ADDF, POST, PREM, CHAR, SHIP, SWIT, UCIC, REGF, PENA
type InvestmentFundFee1Code string

// May be one of FMCO, REGI, TRAG, INTR, DIST, CONC, UCL1, UCL2, TRAN
type InvestmentFundRole2Code string

// Must match the pattern IE[0-9]{6,6}
type IrishNSCIdentifier string

// Must match the pattern IT[0-9]{10,10}
type ItalianDomesticIdentifier string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type MarketPracticeVersion1 struct {
	Nm Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm"`
	Dt ISOYearMonth `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dt,omitempty"`
	Nb Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nb,omitempty"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CreDtTm"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Adr,omitempty"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

// Must match the pattern NZ[0-9]{6,6}
type NewZealandNCCIdentifier string

type Organisation36 struct {
	Nm            Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm"`
	Id            PartyIdentification140 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
	Purp          Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Purp,omitempty"`
	TaxtnCtry     CountryCode            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxtnCtry,omitempty"`
	RegnCtry      CountryCode            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RegnCtry,omitempty"`
	RegnDt        ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RegnDt,omitempty"`
	TaxIdNb       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxIdNb,omitempty"`
	NtlRegnNb     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NtlRegnNb,omitempty"`
	CorpInvstrAdr PostalAddress1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CorpInvstrAdr"`
}

type OtherAmount1 struct {
	Tp  OtherAmountType1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp"`
	Amt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Amt"`
}

type OtherAmountType1Choice struct {
	Cd      OtherAmountType1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	PrtryCd GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtryCd"`
}

// May be one of PINT, SINT
type OtherAmountType1Code string

type OtherAsset1 struct {
	OthrAsstTp OtherAsset1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrAsstTp"`
	Id         Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Nm         Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm,omitempty"`
	OthrId     []Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrId,omitempty"`
	AddtlInf   []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type OtherAsset1Choice struct {
	Cd    OtherAsset1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of MOVE, PROP
type OtherAsset1Code string

type PartyIdentification122Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AnyBIC"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ctry"`
}

type PartyIdentification123Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmAndAdr"`
}

type PartyIdentification125Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AnyBIC"`
	PrtryId  GenericIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmAndAdr"`
}

type PartyIdentification126Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AnyBIC"`
	PrtryId GenericIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtryId"`
}

type PartyIdentification132 struct {
	AnyBIC      AnyBICDec2014Identifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AnyBIC,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ClrSysMmbId,omitempty"`
	NmAndAdr    NameAndAddress5                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmAndAdr,omitempty"`
	PrtryId     GenericIdentification1                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrtryId,omitempty"`
	LEI         LEIIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LEI,omitempty"`
}

type PartyIdentification139 struct {
	Pty PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LEI,omitempty"`
}

type PartyIdentification140 struct {
	Pty PartyIdentification126Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LEI,omitempty"`
}

type PartyIdentification141 struct {
	Id       PartyIdentification122Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	LEI      LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LEI,omitempty"`
	AltrnId  AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AltrnId,omitempty"`
	PrcgDt   DateAndDateTime2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrcgDt,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type PartyIdentificationAndAccount161 struct {
	Id        PartyIdentification123Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	LEI       LEIIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 LEI,omitempty"`
	AltrnId   AlternatePartyIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AltrnId,omitempty"`
	SfkpgAcct SecuritiesAccount19           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SfkpgAcct,omitempty"`
	PrcgDt    DateAndDateTime2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrcgDt,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RegnDtls,omitempty"`
}

type PaymentInstrument14 struct {
	Ref        Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ref,omitempty"`
	CdtTrfDtls CreditTransfer9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CdtTrfDtls,omitempty"`
}

type Pension1 struct {
	Id           PensionPolicy1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
	Tp           PensionSchemeType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp,omitempty"`
	TrfScp       PensionTransferScope1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfScp,omitempty"`
	TaxRef       []TaxReference1             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxRef,omitempty"`
	DrwdwnTrchId Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DrwdwnTrchId,omitempty"`
	AddtlInf     []AdditionalInformation15   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type PensionPolicy1 struct {
	Idr      Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Idr"`
	SubIdr   Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SubIdr,omitempty"`
	AddtlInf AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type PensionSchemeType1Choice struct {
	Cd    PensionSchemeType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of AAVC, DBEN, EXPP, FAVC, SIPG, GPPS, STKG, STKI, OCDC, PPNS, REAN, SC32, S32A, SIPP, SSAS, IPST, EPKA, ITPO, OTPM
type PensionSchemeType1Code string

type PensionTransferScope1Choice struct {
	Cd    PensionTransferScope1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of CRYS, SDDT, FULP, UCRY
type PensionTransferScope1Code string

// May be one of ATIN, GTIN, ITIN
type PersonIdentificationType7Code string

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// Must match the pattern PL[0-9]{8,8}
type PolishNationalClearingCodeIdentifier string

type PortfolioTransfer3 struct {
	MstrRef             Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 MstrRef,omitempty"`
	TrfId               Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfId"`
	TrfConfId           Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfConfId,omitempty"`
	ReqdTrfDt           ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ReqdTrfDt,omitempty"`
	Prtfl               FundPortfolio3Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtfl,omitempty"`
	AllOthrCsh          AllOtherCash1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AllOthrCsh,omitempty"`
	CshAll              CashAll1Code              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshAll,omitempty"`
	RsdlCsh             ResidualCash1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RsdlCsh,omitempty"`
	PmtDtls             PaymentInstrument14       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PmtDtls,omitempty"`
	FinInstrmAsstForTrf []FinancialInstrument69   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 FinInstrmAsstForTrf,omitempty"`
	AddtlInf            []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type PortfolioTransferInstructionV09 struct {
	MsgRef           MessageIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 MsgRef"`
	PoolRef          AdditionalReference11  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PoolRef,omitempty"`
	PrvsRef          AdditionalReference10  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrvsRef,omitempty"`
	RltdRef          AdditionalReference10  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RltdRef,omitempty"`
	PmryIndvInvstr   IndividualPerson8      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PmryIndvInvstr,omitempty"`
	ScndryIndvInvstr IndividualPerson8      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ScndryIndvInvstr,omitempty"`
	OthrIndvInvstr   []IndividualPerson8    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrIndvInvstr,omitempty"`
	PmryCorpInvstr   Organisation36         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PmryCorpInvstr,omitempty"`
	ScndryCorpInvstr Organisation36         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ScndryCorpInvstr,omitempty"`
	OthrCorpInvstr   []Organisation36       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrCorpInvstr,omitempty"`
	TrfrAcct         InvestmentAccount69    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TrfrAcct"`
	NmneeAcct        InvestmentAccount69    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NmneeAcct,omitempty"`
	Trfee            PartyIdentification132 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Trfee"`
	IntrmyInf        []Intermediary43       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IntrmyInf,omitempty"`
	PdctTrf          []PortfolioTransfer3   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PdctTrf"`
	MktPrctcVrsn     MarketPracticeVersion1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 MktPrctcVrsn,omitempty"`
	Xtnsn            []Extension1           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Xtnsn,omitempty"`
}

// Must match the pattern PT[0-9]{8,8}
type PortugueseNCCIdentifier string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ctry"`
}

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AdrLine,omitempty"`
}

// Must match the pattern ALL
type PreviousAll string

type PreviousYear1Choice struct {
	AllPrvsYrs   PreviousAll `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AllPrvsYrs"`
	SpcfcPrvsYrs []ISOYear   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SpcfcPrvsYrs"`
}

type PreviousYear4 struct {
	PrvsYrs     PreviousYear1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrvsYrs"`
	CshCmpntInd bool                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshCmpntInd,omitempty"`
}

// May be one of FORW, HIST
type PriceMethod1Code string

type PriceValue1 struct {
	Amt ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Amt"`
}

type Quantity44Choice struct {
	Unit     float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Unit"`
	PctgRate float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PctgRate"`
	FaceAmt  float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 FaceAmt"`
	AmtsdVal float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AmtsdVal"`
	CshAmt   ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshAmt"`
	OthrAsst Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrAsst"`
}

// Must be at least 1 items long
type RICIdentifier string

// May be one of NRCT, RCTR
type ResidualCash1Code string

type Role4Choice struct {
	Cd    InvestmentFundRole2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// Must match the pattern RU[0-9]{9,9}
type RussianCentralBankIdentificationCodeIdentifier string

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE, ALLP
type SafekeepingPlace2Code string

type SafekeepingPlaceFormat28Choice struct {
	Id      SafekeepingPlaceTypeAndText6           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TpAndId"`
	Prtry   GenericIdentification78                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
}

type SafekeepingPlaceTypeAndText6 struct {
	SfkpgPlcTp SafekeepingPlace2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id,omitempty"`
}

type SecuritiesAccount19 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm,omitempty"`
}

type SecurityIdentification25Choice struct {
	ISIN        ISINOct2015Identifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ISIN"`
	SEDOL       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SEDOL"`
	CUSIP       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CUSIP"`
	RIC         RICIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RIC"`
	TckrSymb    TickerIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TckrSymb"`
	Blmbrg      Bloomberg2Identifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Blmbrg"`
	CTA         ConsolidatedTapeAssociationIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CTA"`
	QUICK       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 QUICK"`
	Wrtppr      string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Wrtppr"`
	Dtch        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dtch"`
	Vlrn        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Vlrn"`
	SCVM        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 SCVM"`
	Belgn       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Belgn"`
	Cmon        EuroclearClearstreamIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cmon"`
	OthrPrtryId AlternateSecurityIdentification7      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrPrtryId"`
}

type SettlementParties74 struct {
	Dpstry PartyIdentification141           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount161 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount161 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount161 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount161 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount161 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Pty5,omitempty"`
}

// May be one of NOMC
type SettlementTransactionCondition11Code string

type SettlementTransactionCondition30Choice struct {
	Cd    SettlementTransactionCondition11Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification30              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// Must match the pattern AU[0-9]{6,6}
type SmallNetworkIdentifier string

// Must match the pattern ZA[0-9]{6,6}
type SouthAfricanNCCIdentifier string

// Must match the pattern ES[0-9]{8,9}
type SpanishDomesticInterbankingIdentifier string

type SubAccount5 struct {
	Id    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Id"`
	Nm    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Nm,omitempty"`
	Chrtc Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Chrtc,omitempty"`
}

type SubscriptionInformation2 struct {
	DtOfFrstSbcpt ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DtOfFrstSbcpt"`
	EqtyCmpnt     ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 EqtyCmpnt,omitempty"`
	CshCmpnt      ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshCmpnt,omitempty"`
	TtlAmtYrToDt  ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TtlAmtYrToDt"`
}

// Must match the pattern SW[0-9]{3,5}
type SwissBCIdentifier string

// Must match the pattern SW[0-9]{6,6}
type SwissSICIdentifier string

type Tax35 struct {
	Tp           TaxType3Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp"`
	ApldAmt      ActiveCurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ApldAmt"`
	ApldRate     float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ApldRate,omitempty"`
	Ctry         CountryCode                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ctry,omitempty"`
	RcptId       PartyIdentification139      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 RcptId,omitempty"`
	TaxClctnDtls TaxCalculationInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxClctnDtls,omitempty"`
}

type Tax36 struct {
	DtOrPrd  DateQuarter1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 DtOrPrd"`
	AddtlInf []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type TaxBasis1Choice struct {
	Cd    TaxationBasis2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type TaxCalculationInformation10 struct {
	Bsis     TaxBasis1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Bsis,omitempty"`
	TaxblAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxblAmt"`
}

type TaxEfficientProduct3 struct {
	TaxEffcntPdctTp TaxEfficientProductType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxEffcntPdctTp"`
	CshCmpntInd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CshCmpntInd,omitempty"`
	PrvsYrs         PreviousYear4                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PrvsYrs,omitempty"`
	CurYrSbcptDtls  SubscriptionInformation2       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CurYrSbcptDtls,omitempty"`
	AddtlInf        []AdditionalInformation15      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AddtlInf,omitempty"`
}

type TaxEfficientProductType1Choice struct {
	Cd    TaxEfficientProductType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of CASH, CCTF, FISA, HISA, INNF, JCSH, JISA, LISA, SCTF, EQUI, GISK, GASK
type TaxEfficientProductType1Code string

type TaxReference1 struct {
	TaxTp  TaxReferenceType1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxTp,omitempty"`
	Ref    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ref"`
	HldrTp TaxReferenceParty1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 HldrTp,omitempty"`
}

type TaxReferenceParty1Choice struct {
	Cd    HolderType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type TaxReferenceType1Choice struct {
	Cd    PersonIdentificationType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of PROV, NATI, STAT, WITH, KAPA, NKAP, INPO, STAM, WTAX, INHT, SOSU, CTAX, GIFT, COAX, EUTR, AKT1, AKT2, ZWIS
type TaxType17Code string

type TaxType3Choice struct {
	Cd    TaxType17Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type TaxableIncomePerShareCalculated2Choice struct {
	Cd    TaxableIncomePerShareCalculated2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of TSIY, TSIN, UKWN
type TaxableIncomePerShareCalculated2Code string

// May be one of FLAT, PERU
type TaxationBasis2Code string

// May be one of FLAT, GRAM, NEAM, NAVP, PERU
type TaxationBasis5Code string

// Must be at least 1 items long
type TickerIdentifier string

type TotalFeesAndTaxes41 struct {
	TtlOvrhdApld   ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TtlOvrhdApld,omitempty"`
	TtlFees        ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TtlFees,omitempty"`
	TtlTaxs        ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TtlTaxs,omitempty"`
	ComrclAgrmtRef Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 ComrclAgrmtRef,omitempty"`
	IndvFee        []Fee5                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IndvFee,omitempty"`
	IndvTax        []Tax35                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 IndvTax,omitempty"`
}

// May be one of XCPN, CCPN
type TradeTransactionCondition5Code string

type TradeTransactionCondition8Choice struct {
	Cd    TradeTransactionCondition5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type TransferType1Choice struct {
	Cd    TransferType3Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// May be one of SECU, CASH, CONV
type TransferType3Code string

// May be one of ARNU, CCPT, CHTY, CORP, DRLC, FIIN, TXID
type TypeOfIdentification1Code string

// May be one of BIDE, OFFR, NAVL, CREA, CANC, INTE, SWNG, MIDD, RINV, SWIC, DDVR, ACTU
type TypeOfPrice10Code string

type TypeOfPrice46Choice struct {
	Cd    TypeOfPrice10Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

// Must match the pattern SC[0-9]{6,6}
type UKDomesticSortCodeIdentifier string

// May be one of GRP1, GRP2
type UKTaxGroupUnit1Code string

type Unit11 struct {
	UnitsNb      float64             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 UnitsNb"`
	OrdrDt       ISODate             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OrdrDt,omitempty"`
	AcqstnDt     ISODate             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AcqstnDt,omitempty"`
	CertNb       []Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 CertNb,omitempty"`
	Grp1Or2Units UKTaxGroupUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Grp1Or2Units,omitempty"`
	Ref          Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Ref,omitempty"`
	PricDtls     UnitPrice23         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PricDtls,omitempty"`
	TxOvrhd      TotalFeesAndTaxes41 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TxOvrhd,omitempty"`
	OthrAmt      []OtherAmount1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 OthrAmt,omitempty"`
}

type UnitPrice23 struct {
	Tp                   TypeOfPrice46Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Tp"`
	Val                  PriceValue1                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Val"`
	PricMtd              PriceMethod1Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 PricMtd,omitempty"`
	AcrdIntrstNAV        ActiveOrHistoricCurrencyAndAmount      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 AcrdIntrstNAV,omitempty"`
	NbOfDaysAcrd         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 NbOfDaysAcrd,omitempty"`
	TaxblIncmPerShr      ActiveCurrencyAnd13DecimalAmount       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxblIncmPerShr,omitempty"`
	TaxblIncmPerShrClctd TaxableIncomePerShareCalculated2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 TaxblIncmPerShrClctd,omitempty"`
}

// May be one of WICA, WIUN
type WaivingInstruction1Code string

type WaivingInstruction2Choice struct {
	Cd    WaivingInstruction1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.012.001.09 Prtry"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYear time.Time

func (t *xsdGYear) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006")
}
func (t xsdGYear) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006")
}
func (t xsdGYear) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYear) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYearMonth time.Time

func (t *xsdGYearMonth) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYearMonth) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
