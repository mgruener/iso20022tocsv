// Code generated by main. DO NOT EDIT.

package sese_024_001_07

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus21Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type AcknowledgementReason12Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type AcknowledgementReason9 struct {
	Cd          AcknowledgementReason12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AmountAndDirection51 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BeneficialOwnership4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade4Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type CancellationReason19Choice struct {
	Cd    CancelledStatusReason13Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type CancellationReason9 struct {
	Cd          CancellationReason19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type CancellationStatus14Choice struct {
	NoSpcfdRsn NoReasonCode          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []CancellationReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

// May be one of CANI, CANS, CSUB, CXLR, CANT, CANZ, CORP, SCEX, OTHR, CTHP
type CancelledStatusReason13Code string

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem4Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type CentralCounterPartyEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesSttlmTxStsAdvc SecuritiesSettlementTransactionStatusAdviceV07 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SctiesSttlmTxStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type ExposureType16Choice struct {
	Cd    ExposureType4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of BFWD, PAYM, CCPC, COMM, CRDS, CRTL, CRSP, CCIR, CRPR, EQPT, EXTD, EQUS, EXPT, FIXI, FORX, FORW, FUTR, OPTN, LIQU, OTCD, REPO, RVPO, SLOA, SBSC, SCRP, SLEB, SHSL, SCIR, SCIE, SWPT, TBAS, TRCP
type ExposureType4Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingReason8 struct {
	Cd          FailingReason8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type FailingReason8Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type FailingStatus10Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []FailingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AmtsdVal"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SchmeNm,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id,omitempty"`
}

type HoldIndicator6 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ind"`
	Rsn []RegistrationReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterOfGuarantee4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type Linkages41 struct {
	PrcgPos         ProcessingPosition9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrcgPos,omitempty"`
	SctiesSttlmTxId Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SctiesSttlmTxId"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide4Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Desc"`
}

type MarketIdentification84 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id,omitempty"`
	Tp MarketType8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType8Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type MatchingStatus24Choice struct {
	Mtchd  ProprietaryReason4          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Mtchd"`
	Umtchd UnmatchedStatus16Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Umtchd"`
	Prtry  ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Adr,omitempty"`
}

type NettingEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PartyIdentification100 struct {
	Id  PartyIdentification71Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ctry"`
}

type PartyIdentification71Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NmAndAdr"`
}

type PartyIdentification91 struct {
	Id     PartyIdentification44Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	LEI    LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
	PrcgId Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrcgId,omitempty"`
}

type PartyIdentification92Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AnyBIC"`
	PrtryId GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrtryId"`
}

type PartyIdentification93Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ctry"`
}

type PartyIdentification98 struct {
	Id  PartyIdentification92Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
}

type PartyIdentification99 struct {
	Id  PartyIdentification93Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
}

type PartyIdentificationAndAccount117 struct {
	Id        PartyIdentification71Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	LEI       LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
	SfkpgAcct SecuritiesAccount19         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrcgId,omitempty"`
}

type PendingProcessingReason10Choice struct {
	Cd    PendingProcessingReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT, CSDH, CVAL, CDEL, CDLR, CDAC, INBC
type PendingProcessingReason2Code string

type PendingProcessingReason8 struct {
	Cd          PendingProcessingReason10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type PendingProcessingStatus11Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type PendingReason15 struct {
	Cd          PendingReason27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type PendingReason16 struct {
	Cd          PendingReason28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type PendingReason27Choice struct {
	Cd    PendingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type PendingReason28Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CSDH, CVAL, CDLR, INBC
type PendingReason2Code string

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus37Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []PendingReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type PendingStatus38Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []PendingReason16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type PlaceOfClearingIdentification1 struct {
	Id  AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id,omitempty"`
	LEI LEIIdentifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
}

type PlaceOfTradeIdentification1 struct {
	MktTpAndId MarketIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ctry"`
}

// May be one of INFO
type ProcessingPosition5Code string

type ProcessingPosition9Choice struct {
	Cd    ProcessingPosition5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type ProcessingStatus48Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus11Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PdgPrcg"`
	Rjctd      RejectionStatus21Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rjctd"`
	Rpr        RepairStatus12Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rpr"`
	Canc       CancellationStatus14Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Canc"`
	PdgCxl     PendingStatus38Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PdgCxl"`
	Prtry      ProprietaryStatusAndReason6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
	CxlReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CxlReqd"`
	ModReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 ModReqd"`
}

type ProprietaryReason4 struct {
	Rsn         GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason6 struct {
	PrtrySts GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrtrySts"`
	PrtryRsn []ProprietaryReason4    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type Registration10Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type Registration9Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type RegistrationReason5 struct {
	Cd       Registration10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlInf,omitempty"`
}

type RejectionReason27Choice struct {
	Cd    RejectionReason37Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type RejectionReason30 struct {
	Cd          RejectionReason27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, INPS, OTHR, ICUS, ICAG, DEPT, IEXE, INVB, INVL, INVN, VALR, INVE, PLIS
type RejectionReason37Code string

type RejectionStatus21Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []RejectionReason30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type RepairReason10Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairReason8 struct {
	Cd          RepairReason10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type RepairStatus12Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []RepairReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type RepurchaseType12Choice struct {
	Cd    RepurchaseType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of CADJ, CALL, PAIR, RATE, ROLP, TOPU, WTHD, PADJ
type RepurchaseType3Code string

type Restriction5Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type SafeKeepingPlace1 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat10Choice struct {
	Id      SafekeepingPlaceTypeAndText8             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TpAndId"`
	Prtry   GenericIdentification78                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
}

type SafekeepingPlaceTypeAndText8 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id,omitempty"`
}

type SecuritiesAccount19 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Nm,omitempty"`
}

type SecuritiesAccount24 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Nm,omitempty"`
}

type SecuritiesRTGS4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type SecuritiesSettlementTransactionStatusAdviceV07 struct {
	TxId          TransactionIdentifications31 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TxId"`
	Lnkgs         Linkages41                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Lnkgs,omitempty"`
	PrcgSts       ProcessingStatus48Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrcgSts,omitempty"`
	IfrrdMtchgSts MatchingStatus24Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 IfrrdMtchgSts,omitempty"`
	MtchgSts      MatchingStatus24Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 MtchgSts,omitempty"`
	SttlmSts      SettlementStatus17Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmSts,omitempty"`
	TxDtls        TransactionDetails79         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TxDtls,omitempty"`
	SplmtryData   []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SplmtryData,omitempty"`
}

type SecuritiesTransactionType21Choice struct {
	Cd    SecuritiesTransactionType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of CNCB, BSBK, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CORP, CLAI, AUTO, ETFT
type SecuritiesTransactionType7Code string

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Desc,omitempty"`
}

type SettlementDate10Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Dt"`
	DtCd SettlementDateCode8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 DtCd"`
}

type SettlementDateCode8Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type SettlementDetails95 struct {
	HldInd         HoldIndicator6                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmTxCond,omitempty"`
	SctiesTxTp     SecuritiesTransactionType21Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SctiesTxTp"`
	SttlgCpcty     SettlingCapacity7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS4Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SctiesRTGS,omitempty"`
	Regn           Registration9Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Regn,omitempty"`
	BnfclOwnrsh    BeneficialOwnership4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 BnfclOwnrsh,omitempty"`
	XpsrTp         ExposureType16Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 XpsrTp,omitempty"`
	CshClrSys      CashSettlementSystem4Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TaxCpcty,omitempty"`
	RpTp           RepurchaseType12Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 RpTp,omitempty"`
	MktClntSd      MarketClientSide4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 MktClntSd,omitempty"`
	BlckTrad       BlockTrade4Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 BlckTrad,omitempty"`
	LglRstrctns    Restriction5Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility4Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility4Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CCPElgblty,omitempty"`
	LttrOfGrnt     LetterOfGuarantee4Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LttrOfGrnt,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrtlSttlmInd,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 ElgblForColl,omitempty"`
}

type SettlementParties40 struct {
	Dpstry PartyIdentification91            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount117 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount117 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount117 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount117 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount117 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pty5,omitempty"`
}

type SettlementStatus17Choice struct {
	Pdg   PendingStatus37Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pdg"`
	Flng  FailingStatus10Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Flng"`
	Prtry ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod4Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of ADEA, ASGN, BUTC, CLEN, DLWM, DIRT, DRAW, EXER, EXPI, FRCL, KNOC, NOMC, NACT, PENS, PHYS, RHYP, RPTO, RESI, SHOR, SPDL, SPST, TRAN, TRIP, UNEX
type SettlementTransactionCondition10Code string

type SettlementTransactionCondition16Choice struct {
	Cd    SettlementTransactionCondition10Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity7Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty4Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TradeDate5Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Dt"`
	DtCd TradeDateCode3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 DtCd"`
}

type TradeDateCode3Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type TransactionDetails79 struct {
	TradId                  []Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TradId,omitempty"`
	PoolId                  Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PoolId,omitempty"`
	CorpActnEvtId           Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CorpActnEvtId,omitempty"`
	TrptyAgtCollTxId        Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TrptyAgtCollTxId,omitempty"`
	ClntTrptyCollTxId       Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 ClntTrptyCollTxId,omitempty"`
	ClntCollInstrId         Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 ClntCollInstrId,omitempty"`
	TrptyCollInstrId        Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TrptyCollInstrId,omitempty"`
	AcctOwnr                PartyIdentification98          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AcctOwnr,omitempty"`
	SfkpgAcct               SecuritiesAccount24            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SfkpgAcct"`
	SfkpgPlc                SafeKeepingPlace1              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SfkpgPlc,omitempty"`
	PlcOfTrad               PlaceOfTradeIdentification1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PlcOfTrad,omitempty"`
	PlcOfClr                PlaceOfClearingIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PlcOfClr,omitempty"`
	FinInstrmId             SecurityIdentification19       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 FinInstrmId"`
	SttlmQty                Quantity6Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmQty"`
	SttlmAmt                AmountAndDirection51           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmAmt,omitempty"`
	LateDlvryDt             DateAndDateTimeChoice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 LateDlvryDt,omitempty"`
	XpctdSttlmDt            DateAndDateTimeChoice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 XpctdSttlmDt,omitempty"`
	XpctdValDt              DateAndDateTimeChoice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 XpctdValDt,omitempty"`
	SttlmDt                 SettlementDate10Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmDt"`
	TradDt                  TradeDate5Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 TradDt,omitempty"`
	SctiesMvmntTp           ReceiveDelivery1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SctiesMvmntTp"`
	Pmt                     DeliveryReceiptType2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Pmt"`
	SttlmParams             SettlementDetails95            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmParams"`
	RcvgSttlmPties          SettlementParties40            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 RcvgSttlmPties,omitempty"`
	DlvrgSttlmPties         SettlementParties40            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 DlvrgSttlmPties,omitempty"`
	Invstr                  PartyIdentification99          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Invstr,omitempty"`
	QlfdFrgnIntrmy          PartyIdentification100         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 QlfdFrgnIntrmy,omitempty"`
	SttlmInstrPrcgAddtlDtls Max350Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 SttlmInstrPrcgAddtlDtls,omitempty"`
}

type TransactionIdentifications31 struct {
	AcctOwnrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AcctOwnrTxId"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 PrcrTxId,omitempty"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 CmonId,omitempty"`
	NetgSvcPrvdrId    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NetgSvcPrvdrId,omitempty"`
}

// May be one of ADEA, ACRU, IIND, CPCA, CLAT, NCRR, DDEA, DMCT, DCMX, DSEC, DQUA, INVE, LEOG, LATE, MIME, CMIS, NMAS, DTRA, OTHR, FRAP, PHYS, PLIS, INPS, PLCE, PODU, DEPT, ICAG, ICUS, IEXE, REGD, RTGS, SAFE, DMON, DDAT, SETS, SETR, TXST, DTRD, DELN, UNBR
type UnmatchedReason11Code string

type UnmatchedReason15 struct {
	Cd          UnmatchedReason21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 AddtlRsnInf,omitempty"`
}

type UnmatchedReason21Choice struct {
	Cd    UnmatchedReason11Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Prtry"`
}

type UnmatchedStatus16Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 NoSpcfdRsn"`
	Rsn        []UnmatchedReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.07 Rsn"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
