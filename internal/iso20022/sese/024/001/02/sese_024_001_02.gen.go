// Code generated by main. DO NOT EDIT.

package sese_024_001_02

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus3Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason3 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type AcknowledgementReason3 struct {
	Cd          AcknowledgementReason4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason4Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AmountAndDirection8 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BeneficialOwnership1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type BlockTrade1Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type CancellationReason1 struct {
	Cd          CancellationReason5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type CancellationReason5Choice struct {
	Cd    CancelledStatusReason9Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type CancellationStatus4Choice struct {
	NoSpcfdRsn NoReasonCode          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []CancellationReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

// May be one of CANI, CANS, CSUB, CXLR, CANT, CANZ, CORP, SCEX, OTHR
type CancelledStatusReason9Code string

type CashSettlementSystem1Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CentralCounterPartyEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesSttlmTxStsAdvc SecuritiesSettlementTransactionStatusAdviceV02 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SctiesSttlmTxStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// May be one of CCIR, COMM, CRDS, CRPR, CRSP, CRTL, EQPT, EQUS, EXPT, EXTD, FIXI, FORW, FORX, FUTR, LIQU, OPTN, OTCD, PAYM, REPO, SBSC, SCIE, SCIR, SCRP, SLEB, SLOA, SWPT, TRCP, BFWD, RVPO, TBAS, SHSL
type ExposureType2Code string

type ExposureType4Choice struct {
	Cd    ExposureType2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FailingReason1 struct {
	Cd          FailingReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type FailingReason1Choice struct {
	Cd    FailingReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY
type FailingReason1Code string

type FailingStatus1Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []FailingReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AmtsdVal"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SchmeNm,omitempty"`
}

type GenericIdentification21 struct {
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id,omitempty"`
}

type HoldIndicator2 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ind"`
	Rsn []RegistrationReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type LetterOfGuarantee1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketClientSide1Choice struct {
	Cd    MarketClientSideCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of MAKT, CLNT
type MarketClientSideCode string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Desc"`
}

type MarketIdentification4 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id,omitempty"`
	Tp MarketType3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType3Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type MatchingStatus2Choice struct {
	Mtchd  NoSpecifiedReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Mtchd"`
	Umtchd UnmatchedStatus1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Umtchd"`
	Prtry  ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Adr,omitempty"`
}

type NettingEligibility1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type NoSpecifiedReason1 struct {
	NoSpcfdRsn NoReasonCode `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrtryId"`
}

type PartyIdentification37Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ctry"`
}

type PartyIdentification44Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AnyBIC"`
	NmAndAdr NameAndAddress5  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ctry"`
}

type PartyIdentification45Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NmAndAdr"`
}

type PartyIdentification46 struct {
	Id     PartyIdentification44Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	PrcgId Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrcgId,omitempty"`
}

type PartyIdentificationAndAccount44 struct {
	Id        PartyIdentification45Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	SfkpgAcct SecuritiesAccount13         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrcgId,omitempty"`
}

type PendingProcessingReason1 struct {
	Cd          PendingProcessingReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type PendingProcessingReason1Choice struct {
	Cd    PendingProcessingReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT
type PendingProcessingReason1Code string

type PendingProcessingStatus1Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type PendingReason1 struct {
	Cd          PendingReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type PendingReason1Choice struct {
	Cd    PendingReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY
type PendingReason1Code string

type PendingReason2 struct {
	Cd          PendingReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type PendingReason2Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus3Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []PendingReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type PendingStatus4Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []PendingReason2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ctry"`
}

type ProcessingStatus1Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PdgPrcg"`
	Rjctd      RejectionStatus1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rjctd"`
	Rpr        RepairStatus1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rpr"`
	Canc       CancellationStatus4Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Canc"`
	PdgCxl     PendingStatus4Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PdgCxl"`
	Prtry      ProprietaryStatusAndReason1       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
	CxlReqd    NoSpecifiedReason1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CxlReqd"`
	ModReqd    NoSpecifiedReason1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 ModReqd"`
}

type ProprietaryReason1 struct {
	Rsn         GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason1 struct {
	PrtrySts GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrtrySts"`
	PrtryRsn []ProprietaryReason1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type Registration1Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type Registration3Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type RegistrationReason1 struct {
	Cd       Registration3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlInf,omitempty"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, INPS, OTHR, ICUS, ICAG, DEPT, IEXE
type RejectionReason25Code string

type RejectionReason4Choice struct {
	Cd    RejectionReason25Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type RejectionReason5 struct {
	Cd          RejectionReason4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type RejectionStatus1Choice struct {
	NoSpcfdRsn NoReasonCode       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []RejectionReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type RepairReason1 struct {
	Cd          RepairReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type RepairReason1Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairStatus1Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []RepairReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type RepurchaseType3Choice struct {
	Cd    RepurchaseType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of CADJ, CALL, PAIR, RATE, ROLP, TOPU, WTHD, PADJ
type RepurchaseType3Code string

type Restriction1Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat3Choice struct {
	Id      SafekeepingPlaceTypeAndText3             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TpAndId"`
	Prtry   GenericIdentification21                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
}

type SafekeepingPlaceTypeAndText3 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id,omitempty"`
}

type SecuritiesAccount13 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Id"`
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Nm,omitempty"`
}

type SecuritiesRTGS1Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type SecuritiesSettlementTransactionStatusAdviceV02 struct {
	TxId          TransactionIdentifications9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TxId"`
	PrcgSts       ProcessingStatus1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrcgSts,omitempty"`
	IfrrdMtchgSts MatchingStatus2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 IfrrdMtchgSts,omitempty"`
	MtchgSts      MatchingStatus2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 MtchgSts,omitempty"`
	SttlmSts      SettlementStatus2Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmSts,omitempty"`
	TxDtls        TransactionDetails22        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TxDtls,omitempty"`
	SplmtryData   []SupplementaryData1        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SplmtryData,omitempty"`
}

type SecuritiesTransactionType1Choice struct {
	Cd    SecuritiesTransactionType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of CNCB, BSBK, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RPTO, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CORP, CLAI, AUTO
type SecuritiesTransactionType1Code string

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Desc,omitempty"`
}

type SettlementDate2Choice struct {
	Dt   DateAndDateTimeChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Dt"`
	DtCd SettlementDateCode2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 DtCd"`
}

type SettlementDateCode2Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type SettlementDetails23 struct {
	HldInd         HoldIndicator2                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmTxCond,omitempty"`
	SctiesTxTp     SecuritiesTransactionType1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SctiesTxTp"`
	SttlgCpcty     SettlingCapacity1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification20                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SctiesRTGS,omitempty"`
	Regn           Registration1Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Regn,omitempty"`
	BnfclOwnrsh    BeneficialOwnership1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 BnfclOwnrsh,omitempty"`
	XpsrTp         ExposureType4Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 XpsrTp,omitempty"`
	CshClrSys      CashSettlementSystem1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TaxCpcty,omitempty"`
	RpTp           RepurchaseType3Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 RpTp,omitempty"`
	MktClntSd      MarketClientSide1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 MktClntSd,omitempty"`
	BlckTrad       BlockTrade1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 BlckTrad,omitempty"`
	LglRstrctns    Restriction1Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CCPElgblty,omitempty"`
	LttrOfGrnt     LetterOfGuarantee1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 LttrOfGrnt,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrtlSttlmInd,omitempty"`
	ElgblForColl   bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 ElgblForColl,omitempty"`
}

type SettlementParties13 struct {
	Dpstry PartyIdentification46           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount44 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pty5,omitempty"`
}

type SettlementStatus2Choice struct {
	Pdg   PendingStatus3Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pdg"`
	Flng  FailingStatus1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Flng"`
	Prtry ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type SettlementSystemMethod1Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

type SettlementTransactionCondition6Choice struct {
	Cd    SettlementTransactionCondition6Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of ASGN, BUTC, CLEN, DIRT, DLWM, DRAW, EXER, FRCL, KNOC, PHYS, RESI, SHOR, SPDL, SPST, EXPI, PENS, UNEX, TRIP, NOMC, TRAN, RHYP, ADEA
type SettlementTransactionCondition6Code string

type SettlingCapacity1Choice struct {
	Cd    SettlingCapacity1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of CUST, SAGE, SPRI
type SettlingCapacity1Code string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty1Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TradeDate1Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Dt"`
	DtCd TradeDateCode1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 DtCd"`
}

type TradeDateCode1Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

type TransactionDetails22 struct {
	TradId                  []Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TradId,omitempty"`
	PoolId                  Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PoolId,omitempty"`
	CorpActnEvtId           Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CorpActnEvtId,omitempty"`
	TrptyAgtCollTxId        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TrptyAgtCollTxId,omitempty"`
	ClntTrptyCollTxId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 ClntTrptyCollTxId,omitempty"`
	AcctOwnr                PartyIdentification36Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AcctOwnr,omitempty"`
	SfkpgAcct               SecuritiesAccount13           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SfkpgAcct"`
	SfkpgPlc                SafekeepingPlaceFormat3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SfkpgPlc,omitempty"`
	PlcOfTrad               MarketIdentification4         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PlcOfTrad,omitempty"`
	PlcOfClr                AnyBICIdentifier              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PlcOfClr,omitempty"`
	FinInstrmId             SecurityIdentification14      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 FinInstrmId"`
	SttlmQty                Quantity6Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmQty"`
	SttlmAmt                AmountAndDirection8           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmAmt,omitempty"`
	LateDlvryDt             DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 LateDlvryDt,omitempty"`
	XpctdSttlmDt            DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 XpctdSttlmDt,omitempty"`
	XpctdValDt              DateAndDateTimeChoice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 XpctdValDt,omitempty"`
	SttlmDt                 SettlementDate2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmDt"`
	TradDt                  TradeDate1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 TradDt,omitempty"`
	SctiesMvmntTp           ReceiveDelivery1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SctiesMvmntTp"`
	Pmt                     DeliveryReceiptType2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Pmt"`
	SttlmParams             SettlementDetails23           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmParams"`
	RcvgSttlmPties          SettlementParties13           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 RcvgSttlmPties,omitempty"`
	DlvrgSttlmPties         SettlementParties13           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 DlvrgSttlmPties,omitempty"`
	Invstr                  PartyIdentification37Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Invstr,omitempty"`
	QlfdFrgnIntrmy          PartyIdentification45Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 QlfdFrgnIntrmy,omitempty"`
	SttlmInstrPrcgAddtlDtls Max350Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 SttlmInstrPrcgAddtlDtls,omitempty"`
}

type TransactionIdentifications9 struct {
	AcctOwnrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AcctOwnrTxId"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 PrcrTxId,omitempty"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 CmonId,omitempty"`
	NetgSvcPrvdrId    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NetgSvcPrvdrId,omitempty"`
}

type UnmatchedReason1 struct {
	Cd          UnmatchedReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	AddtlRsnInf Max210Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 AddtlRsnInf,omitempty"`
}

type UnmatchedReason1Choice struct {
	Cd    UnmatchedReason2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Prtry"`
}

// May be one of CMIS, DDAT, DELN, DEPT, DMON, DDEA, DQUA, ADEA, SETR, SETS, DSEC, DTRA, CLAT, PHYS, IIND, FRAP, PLCE, PODU, REGD, RTGS, ICAG, CPCA, IEXE, NCRR, LEOG, NMAS, SAFE, DTRD, LATE, TXST, ICUS, OTHR, MIME, UNBR, INPS
type UnmatchedReason2Code string

type UnmatchedStatus1Choice struct {
	NoSpcfdRsn NoReasonCode       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 NoSpcfdRsn"`
	Rsn        []UnmatchedReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.02 Rsn,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
