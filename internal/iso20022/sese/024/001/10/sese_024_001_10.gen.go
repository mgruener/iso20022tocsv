// Code generated by main. DO NOT EDIT.

package sese_024_001_10

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus21Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type AcknowledgementReason12Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

type AcknowledgementReason9 struct {
	Cd          AcknowledgementReason12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AmountAndDirection51 struct {
	Amt                 ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type BeneficialOwnership4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade4Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type CancellationReason22 struct {
	Cd          CancellationReason36Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type CancellationReason36Choice struct {
	Cd    CancelledStatusReason16Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type CancellationStatus24Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []CancellationReason22 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

// May be one of SCEX, OTHR, CXLR, BYIY, CTHP, CANZ, CANT, CSUB, CANS, CANI, CORP
type CancelledStatusReason16Code string

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem4Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type CentralCounterPartyEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesSttlmTxStsAdvc SecuritiesSettlementTransactionStatusAdviceV10 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SctiesSttlmTxStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type ExposureType16Choice struct {
	Cd    ExposureType4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of BFWD, PAYM, CCPC, COMM, CRDS, CRTL, CRSP, CCIR, CRPR, EQPT, EXTD, EQUS, EXPT, FIXI, FORX, FORW, FUTR, OPTN, LIQU, OTCD, REPO, RVPO, SLOA, SBSC, SCRP, SLEB, SHSL, SCIR, SCIE, SWPT, TBAS, TRCP
type ExposureType4Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingReason8 struct {
	Cd          FailingReason8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type FailingReason8Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type FailingStatus10Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []FailingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AmtsdVal"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SchmeNm,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id,omitempty"`
}

type HoldIndicator6 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ind"`
	Rsn []RegistrationReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterOfGuarantee4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type Linkages41 struct {
	PrcgPos         ProcessingPosition9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrcgPos,omitempty"`
	SctiesSttlmTxId Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SctiesSttlmTxId"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

// May be one of CLNT, MAKT
type MarketClientSide1Code string

type MarketClientSide6Choice struct {
	Cd    MarketClientSide1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Desc"`
}

type MarketIdentification84 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id,omitempty"`
	Tp MarketType8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Tp"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MarketType8Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type MatchingStatus24Choice struct {
	Mtchd  ProprietaryReason4          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Mtchd"`
	Umtchd UnmatchedStatus16Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Umtchd"`
	Prtry  ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max52Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Adr,omitempty"`
}

type NettingEligibility4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type PartyIdentification120Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NmAndAdr"`
}

type PartyIdentification122Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AnyBIC"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ctry"`
}

type PartyIdentification127Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AnyBIC"`
	PrtryId GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrtryId"`
}

type PartyIdentification134Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ctry"`
}

type PartyIdentification136 struct {
	Id  PartyIdentification120Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
}

type PartyIdentification144 struct {
	Id  PartyIdentification127Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
}

type PartyIdentification148 struct {
	Id     PartyIdentification122Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	LEI    LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
	PrcgId Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrcgId,omitempty"`
}

type PartyIdentification149 struct {
	Id  PartyIdentification134Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
}

type PartyIdentificationAndAccount170 struct {
	Id        PartyIdentification120Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	LEI       LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
	SfkpgAcct SecuritiesAccount19          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SfkpgAcct,omitempty"`
	PrcgId    Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrcgId,omitempty"`
}

type PendingProcessingReason10Choice struct {
	Cd    PendingProcessingReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT, CSDH, CVAL, CDEL, CDLR, CDAC, INBC
type PendingProcessingReason2Code string

type PendingProcessingReason8 struct {
	Cd          PendingProcessingReason10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type PendingProcessingStatus11Choice struct {
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type PendingReason15 struct {
	Cd          PendingReason27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type PendingReason16 struct {
	Cd          PendingReason28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type PendingReason27Choice struct {
	Cd    PendingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type PendingReason28Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CSDH, CVAL, CDLR, INBC
type PendingReason2Code string

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus37Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []PendingReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type PendingStatus38Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []PendingReason16 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type PlaceOfClearingIdentification2 struct {
	Id  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id,omitempty"`
	LEI LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
}

type PlaceOfTradeIdentification1 struct {
	MktTpAndId MarketIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ctry"`
}

// May be one of INFO
type ProcessingPosition5Code string

type ProcessingPosition9Choice struct {
	Cd    ProcessingPosition5Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type ProcessingStatus74Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus11Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PdgPrcg"`
	Rjctd      RejectionStatus21Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rjctd"`
	Rpr        RepairStatus12Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rpr"`
	Canc       CancellationStatus24Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Canc"`
	PdgCxl     PendingStatus38Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PdgCxl"`
	Prtry      ProprietaryStatusAndReason6        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
	CxlReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CxlReqd"`
	ModReqd    ProprietaryReason4                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 ModReqd"`
}

type ProprietaryReason4 struct {
	Rsn         GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason6 struct {
	PrtrySts GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrtrySts"`
	PrtryRsn []ProprietaryReason4    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrtryRsn,omitempty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type Registration10Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type Registration9Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type RegistrationReason5 struct {
	Cd       Registration10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlInf,omitempty"`
}

type RejectionReason27Choice struct {
	Cd    RejectionReason37Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type RejectionReason30 struct {
	Cd          RejectionReason27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, INPS, OTHR, ICUS, ICAG, DEPT, IEXE, INVB, INVL, INVN, VALR, INVE, PLIS
type RejectionReason37Code string

type RejectionStatus21Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []RejectionReason30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type RepairReason10Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairReason8 struct {
	Cd          RepairReason10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type RepairStatus12Choice struct {
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []RepairReason8 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type RepurchaseType22Choice struct {
	Cd    RepurchaseType9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of PAIR, PADJ, RATE, CALL, ROLP, CADJ, TOPU, WTHD
type RepurchaseType9Code string

type Restriction5Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type SafeKeepingPlace3 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat29Choice struct {
	Id      SafekeepingPlaceTypeAndText8           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TpAndId"`
	Prtry   GenericIdentification78                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
}

type SafekeepingPlaceTypeAndText8 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id,omitempty"`
}

type SecuritiesAccount19 struct {
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Id"`
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Nm,omitempty"`
}

type SecuritiesRTGS4Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Ind"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type SecuritiesSettlementTransactionStatusAdviceV10 struct {
	TxId          TransactionIdentifications31 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TxId"`
	Lnkgs         Linkages41                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Lnkgs,omitempty"`
	PrcgSts       ProcessingStatus74Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrcgSts,omitempty"`
	IfrrdMtchgSts MatchingStatus24Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 IfrrdMtchgSts,omitempty"`
	MtchgSts      MatchingStatus24Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 MtchgSts,omitempty"`
	SttlmSts      SettlementStatus17Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmSts,omitempty"`
	TxDtls        TransactionDetails113        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TxDtls,omitempty"`
	SplmtryData   []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SplmtryData,omitempty"`
}

// May be one of BSBK, COLI, COLO, MKDW, MKUP, NETT, NSYN, PAIR, PLAC, PORT, REAL, REDM, REPU, RODE, RVPO, SECB, SECL, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, BYIY, CNCB, OWNE, FCTA, OWNI, RELE, SBRE, CORP, CLAI, AUTO, SWIF, SWIT, CONV, ETFT, ISSU, SLRE, INSP, SBBK, REDI, REBL
type SecuritiesTransactionType26Code string

type SecuritiesTransactionType44Choice struct {
	Cd    SecuritiesTransactionType26Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Desc,omitempty"`
}

type SettlementDate19Choice struct {
	Dt   DateAndDateTime2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Dt"`
	DtCd SettlementDateCode8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 DtCd"`
}

type SettlementDateCode8Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type SettlementDetails166 struct {
	HldInd         HoldIndicator6                           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmTxCond,omitempty"`
	SctiesTxTp     SecuritiesTransactionType44Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SctiesTxTp"`
	SttlgCpcty     SettlingCapacity7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification30                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS4Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SctiesRTGS,omitempty"`
	Regn           Registration9Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Regn,omitempty"`
	BnfclOwnrsh    BeneficialOwnership4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 BnfclOwnrsh,omitempty"`
	XpsrTp         ExposureType16Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 XpsrTp,omitempty"`
	CshClrSys      CashSettlementSystem4Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty4Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TaxCpcty,omitempty"`
	RpTp           RepurchaseType22Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 RpTp,omitempty"`
	MktClntSd      MarketClientSide6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 MktClntSd,omitempty"`
	BlckTrad       BlockTrade4Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 BlckTrad,omitempty"`
	LglRstrctns    Restriction5Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility4Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility4Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CCPElgblty,omitempty"`
	LttrOfGrnt     LetterOfGuarantee4Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LttrOfGrnt,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrtlSttlmInd,omitempty"`
	ElgblForColl   bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 ElgblForColl,omitempty"`
}

type SettlementParties78 struct {
	Dpstry PartyIdentification148           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount170 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount170 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount170 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount170 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount170 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pty5,omitempty"`
}

type SettlementStatus17Choice struct {
	Pdg   PendingStatus37Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pdg"`
	Flng  FailingStatus10Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Flng"`
	Prtry ProprietaryStatusAndReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod4Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of ADEA, ASGN, BUTC, CLEN, DLWM, DIRT, DRAW, EXER, EXPI, FRCL, KNOC, NOMC, NACT, PENS, PHYS, RHYP, RPTO, RESI, SHOR, SPDL, SPST, TRAN, TRIP, UNEX
type SettlementTransactionCondition10Code string

type SettlementTransactionCondition16Choice struct {
	Cd    SettlementTransactionCondition10Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity7Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty4Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TradeDate8Choice struct {
	Dt   DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Dt"`
	DtCd TradeDateCode3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 DtCd"`
}

type TradeDateCode3Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type TransactionDetails113 struct {
	TradId                      []Max52Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TradId,omitempty"`
	PoolId                      Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PoolId,omitempty"`
	CorpActnEvtId               Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CorpActnEvtId,omitempty"`
	TrptyAgtSvcPrvdrCollTxId    Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TrptyAgtSvcPrvdrCollTxId,omitempty"`
	ClntTrptyCollTxId           Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 ClntTrptyCollTxId,omitempty"`
	ClntCollInstrId             Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 ClntCollInstrId,omitempty"`
	TrptyAgtSvcPrvdrCollInstrId Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TrptyAgtSvcPrvdrCollInstrId,omitempty"`
	AcctOwnr                    PartyIdentification144         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AcctOwnr,omitempty"`
	SfkpgAcct                   SecuritiesAccount19            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SfkpgAcct"`
	SfkpgPlc                    SafeKeepingPlace3              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SfkpgPlc,omitempty"`
	PlcOfTrad                   PlaceOfTradeIdentification1    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PlcOfTrad,omitempty"`
	PlcOfClr                    PlaceOfClearingIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PlcOfClr,omitempty"`
	FinInstrmId                 SecurityIdentification19       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 FinInstrmId"`
	SttlmQty                    Quantity6Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmQty"`
	SttlmAmt                    AmountAndDirection51           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmAmt,omitempty"`
	LateDlvryDt                 DateAndDateTime2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 LateDlvryDt,omitempty"`
	XpctdSttlmDt                DateAndDateTime2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 XpctdSttlmDt,omitempty"`
	XpctdValDt                  DateAndDateTime2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 XpctdValDt,omitempty"`
	SttlmDt                     SettlementDate19Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmDt"`
	TradDt                      TradeDate8Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 TradDt,omitempty"`
	AckdStsTmStmp               ISODateTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AckdStsTmStmp,omitempty"`
	MtchdStsTmStmp              ISODateTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 MtchdStsTmStmp,omitempty"`
	SctiesMvmntTp               ReceiveDelivery1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SctiesMvmntTp"`
	Pmt                         DeliveryReceiptType2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Pmt"`
	SttlmParams                 SettlementDetails166           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmParams"`
	RcvgSttlmPties              SettlementParties78            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 RcvgSttlmPties,omitempty"`
	DlvrgSttlmPties             SettlementParties78            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 DlvrgSttlmPties,omitempty"`
	Invstr                      PartyIdentification149         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Invstr,omitempty"`
	QlfdFrgnIntrmy              PartyIdentification136         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 QlfdFrgnIntrmy,omitempty"`
	SttlmInstrPrcgAddtlDtls     Max350Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 SttlmInstrPrcgAddtlDtls,omitempty"`
}

type TransactionIdentifications31 struct {
	AcctOwnrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AcctOwnrTxId"`
	AcctSvcrTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 PrcrTxId,omitempty"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 CmonId,omitempty"`
	NetgSvcPrvdrId    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NetgSvcPrvdrId,omitempty"`
}

// May be one of ADEA, ACRU, IIND, CPCA, CLAT, NCRR, DDEA, DMCT, DCMX, DSEC, DQUA, INVE, LEOG, LATE, MIME, CMIS, NMAS, DTRA, OTHR, FRAP, PHYS, PLIS, INPS, PLCE, PODU, DEPT, ICAG, ICUS, IEXE, REGD, RTGS, SAFE, DMON, DDAT, SETS, SETR, TXST, DTRD, DELN, UNBR
type UnmatchedReason11Code string

type UnmatchedReason15 struct {
	Cd          UnmatchedReason21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 AddtlRsnInf,omitempty"`
}

type UnmatchedReason21Choice struct {
	Cd    UnmatchedReason11Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Prtry"`
}

type UnmatchedStatus16Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 NoSpcfdRsn"`
	Rsn        []UnmatchedReason15 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.024.001.10 Rsn"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
