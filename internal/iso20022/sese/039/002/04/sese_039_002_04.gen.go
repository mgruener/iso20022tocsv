// Code generated by main. DO NOT EDIT.

package sese_039_002_04

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus30Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason18 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn"`
}

type AcknowledgementReason18 struct {
	Cd          AcknowledgementReason21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason21Choice struct {
	Cd    AcknowledgementReason6Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, NSTP, LATE
type AcknowledgementReason6Code string

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AmountAndDirection67 struct {
	Amt                 RestrictedFINActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Amt"`
	CdtDbtInd           CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type DeniedReason17 struct {
	Cd          DeniedReason24Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type DeniedReason24Choice struct {
	Cd    DeniedReason6Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

// May be one of ADEA, CDCY, CDRE, DCAN, DSET, DPRG, DREP, LATE, OTHR, CDRG
type DeniedReason6Code string

type DeniedStatus19Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NoSpcfdRsn"`
	Rsn        []DeniedReason17 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn"`
}

type Document struct {
	SctiesSttlmTxModReqStsAdvc SecuritiesSettlementTransactionModificationRequestStatusAdvice002V04 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SctiesSttlmTxModReqStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AmtsdVal"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Identification16 struct {
	Id RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type ModificationProcessingStatus8Choice struct {
	AckdAccptd AcknowledgedAcceptedStatus30Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AckdAccptd"`
	PdgPrcg    PendingProcessingStatus16Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PdgPrcg"`
	Dnd        DeniedStatus19Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Dnd"`
	Rjctd      RejectionStatus24Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rjctd"`
	Rprd       RepairStatus17Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rprd"`
	Modfd      ModificationStatus5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Modfd"`
	Prtry      ProprietaryStatusAndReason7        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

type ModificationReason5 struct {
	Cd          ModificationReason5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type ModificationReason5Choice struct {
	Cd    ModifiedStatusReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

type ModificationStatus5Choice struct {
	NoSpcfdRsn NoReasonCode          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NoSpcfdRsn"`
	Rsn        []ModificationReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn,omitempty"`
}

// May be one of MDBY, OTHR
type ModifiedStatusReason1Code string

type NameAndAddress12 struct {
	Nm RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Nm"`
}

// May be one of NORE
type NoReasonCode string

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Tp"`
}

type PartyIdentification104Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NmAndAdr"`
}

type PartyIdentification108 struct {
	Id     PartyIdentification58Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	LEI    LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 LEI,omitempty"`
	PrcgId RestrictedFINXMax16Text     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrcgId,omitempty"`
}

type PartyIdentification109 struct {
	Id  PartyIdentification114Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 LEI,omitempty"`
}

type PartyIdentification110 struct {
	Id  PartyIdentification115Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 LEI,omitempty"`
}

type PartyIdentification114Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrtryId"`
}

type PartyIdentification115Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Ctry"`
}

type PartyIdentification58Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AnyBIC"`
	NmAndAdr NameAndAddress12 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Ctry"`
}

type PartyIdentificationAndAccount146 struct {
	Id        PartyIdentification104Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	LEI       LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 LEI,omitempty"`
	SfkpgAcct SecuritiesAccount30          `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SfkpgAcct,omitempty"`
	PrcgId    RestrictedFINXMax16Text      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrcgId,omitempty"`
}

type PendingProcessingReason13 struct {
	Cd          PendingProcessingReason15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type PendingProcessingReason15Choice struct {
	Cd    PendingProcessingReason3Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

// May be one of ADEA, BLOC, MUNO, NEXT, MINO, OTHR, DENO, CERT
type PendingProcessingReason3Code string

type PendingProcessingStatus16Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn"`
}

type ProprietaryReason5 struct {
	Rsn         GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason7 struct {
	PrtrySts GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrtrySts"`
	PrtryRsn []ProprietaryReason5    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrtryRsn,omitempty"`
}

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type RejectionReason31Choice struct {
	Cd    RejectionReason31Code   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

// May be one of SAFE, DQUA, ADEA, DSEC, LATE, CASH, DDEA, DTRD, PLCE, RTGS, NCRR, PHYS, REFE, DMON, MINO, BATC, MUNO, TXST, SETS, IIND, CAEV, CASY, DDAT, SETR, SDUT, INPS, OTHR, ICUS, ICAG, DEPT, IEXE, INVL, INVB, INVN, VALR
type RejectionReason31Code string

type RejectionReason37 struct {
	Cd          RejectionReason31Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type RejectionStatus24Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NoSpcfdRsn"`
	Rsn        []RejectionReason37 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn"`
}

type RepairReason13 struct {
	Cd          RepairReason14Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AddtlRsnInf,omitempty"`
}

type RepairReason14Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairStatus17Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 NoSpcfdRsn"`
	Rsn        []RepairReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Rsn"`
}

type RestrictedFINActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type RestrictedFINActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

type SecuritiesAccount30 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Nm,omitempty"`
}

type SecuritiesSettlementTransactionModificationRequestStatusAdvice002V04 struct {
	ModReqRef   Identification16                    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 ModReqRef"`
	AcctOwnr    PartyIdentification109              `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AcctOwnr,omitempty"`
	SfkpgAcct   SecuritiesAccount30                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SfkpgAcct"`
	TxId        TransactionIdentifications37        `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 TxId,omitempty"`
	ModPrcgSts  ModificationProcessingStatus8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 ModPrcgSts"`
	TxDtls      TransactionDetails84                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 TxDtls,omitempty"`
	SplmtryData []SupplementaryData1                `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SplmtryData,omitempty"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Desc,omitempty"`
}

type SettlementDate15Choice struct {
	Dt   DateAndDateTimeChoice      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Dt"`
	DtCd SettlementDateCode11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 DtCd"`
}

type SettlementDateCode11Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

type SettlementParties49 struct {
	Dpstry PartyIdentification108           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Pty5,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TradeDate6Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Dt"`
	DtCd TradeDateCode4Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 DtCd"`
}

type TradeDateCode4Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Prtry"`
}

type TransactionDetails84 struct {
	FinInstrmId     SecurityIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 FinInstrmId"`
	SctiesMvmntTp   ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SctiesMvmntTp"`
	Pmt             DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Pmt"`
	SttlmQty        Quantity10Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SttlmQty"`
	SttlmAmt        AmountAndDirection67     `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SttlmAmt,omitempty"`
	SttlmDt         SettlementDate15Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 SttlmDt"`
	TradDt          TradeDate6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 TradDt,omitempty"`
	DlvrgSttlmPties SettlementParties49      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties  SettlementParties49      `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 RcvgSttlmPties,omitempty"`
	Invstr          PartyIdentification110   `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 Invstr,omitempty"`
}

type TransactionIdentifications37 struct {
	AcctOwnrTxId      RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AcctOwnrTxId"`
	AcctSvcrTxId      RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 PrcrTxId,omitempty"`
	OthrId            RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:sese.039.002.04 OthrId,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
