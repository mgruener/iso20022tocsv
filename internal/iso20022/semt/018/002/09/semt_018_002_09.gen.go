// Code generated by main. DO NOT EDIT.

package semt_018_002_09

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus25Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type AcknowledgementReason13 struct {
	Cd          AcknowledgementReason16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason16Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AmountAndDirection67 struct {
	Amt                 RestrictedFINActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Amt"`
	CdtDbtInd           CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CdtDbtInd"`
	OrgnlCcyAndOrdrdAmt RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 OrgnlCcyAndOrdrdAmt,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BeneficialOwnership5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade5Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type CancellationReason14 struct {
	Cd          CancellationReason24Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type CancellationReason24Choice struct {
	Cd    CancelledStatusReason13Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type CancellationStatus17Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []CancellationReason14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

// May be one of CANI, CANS, CSUB, CXLR, CANT, CANZ, CORP, SCEX, OTHR, CTHP
type CancelledStatusReason13Code string

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem5Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type CentralCounterPartyEligibility5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of ACTV, ATTI, BRUP, DFLT, BONU, EXRI, CAPD, CAPG, CAPI, DRCA, DVCA, CHAN, COOP, CLSA, CONS, CONV, CREV, DECR, DETI, DSCL, DVOP, DRIP, DRAW, DTCH, EXOF, REDM, MCAL, INCR, PPMT, INTR, PRII, RHDI, LIQU, EXTM, MRGR, NOOF, CERT, ODLT, OTHR, PARI, PCAL, PRED, PINK, PLAC, PDEF, PRIO, BPUT, REDO, REMK, BIDS, SPLR, RHTS, DVSC, SHPR, SMAL, SOFF, DVSE, SPLF, TREC, TEND, DLST, SUSP, EXWA, WTRC, WRTH, ACCU, MTNG, INFO, TNDP
type CorporateActionEventType28Code string

type CorporateActionEventType83Choice struct {
	Cd    CorporateActionEventType28Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 DtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of OPEN, UKWN
type DateType4Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesTxPdgRpt SecuritiesTransactionPendingReport002V09 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SctiesTxPdgRpt"`
}

// May be one of YEAR, ADHO, MNTH, DAIL, INDA, WEEK
type EventFrequency4Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FailingReason10 struct {
	Cd          FailingReason11Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type FailingReason11Choice struct {
	Cd    FailingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CDLR, CSDH, CVAL, INBC
type FailingReason2Code string

type FailingStatus12Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []FailingReason10 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AmtsdVal"`
}

type Frequency26Choice struct {
	Cd    EventFrequency4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of COLL, CLAI, OTHR, RODE, SPLI, THRD, TRAN
type GeneratedReason3Code string

type GeneratedReason6 struct {
	Cd          GeneratedReasons6Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type GeneratedReasons6Choice struct {
	Cd    GeneratedReason3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type GeneratedStatus8Choice struct {
	NoSpcfdRsn NoReasonCode       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []GeneratedReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SchmeNm,omitempty"`
}

type GenericIdentification85 struct {
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Tp"`
	Id RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id,omitempty"`
}

type HoldIndicator7 struct {
	Ind bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ind"`
	Rsn []RegistrationReason6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type InstructionProcessingStatus27Choice struct {
	PdgPrcg    PendingProcessingStatus15Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PdgPrcg"`
	CxlReqd    ProprietaryReason5                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CxlReqd"`
	AckdAccptd AcknowledgedAcceptedStatus25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AckdAccptd"`
	Canc       CancellationStatus17Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Canc"`
	Gnrtd      GeneratedStatus8Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Gnrtd"`
	Rpr        RepairStatus16Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rpr"`
	PdgCxl     PendingStatus46Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PdgCxl"`
	ModReqd    ProprietaryReason5                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ModReqd"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterOfGuarantee5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

// May be one of CLNT, MAKT
type MarketClientSide1Code string

type MarketClientSide7Choice struct {
	Cd    MarketClientSide1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type MarketIdentification2Choice struct {
	MktIdrCd MICIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MktIdrCd"`
	Desc     RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Desc"`
}

type MarketIdentification90 struct {
	Id MarketIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id,omitempty"`
	Tp MarketType16Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Tp"`
}

type MarketType16Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

type MatchingStatus32Choice struct {
	Mtchd  ProprietaryReason5          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Mtchd"`
	Umtchd UnmatchedStatus21Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Umtchd"`
	Prtry  ProprietaryStatusAndReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress12 struct {
	Nm RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Nm"`
}

type NettingEligibility5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of NORE
type NoReasonCode string

type Number3Choice struct {
	Shrt Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Shrt"`
	Lng  Exact5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Lng"`
}

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type Pagination1 struct {
	PgNb      Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PgNb"`
	LastPgInd bool            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LastPgInd"`
}

type PartyIdentification103Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrtryId"`
}

type PartyIdentification104Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NmAndAdr"`
}

type PartyIdentification108 struct {
	Id     PartyIdentification58Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	LEI    LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LEI,omitempty"`
	PrcgId RestrictedFINXMax16Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrcgId,omitempty"`
}

type PartyIdentification119 struct {
	Id  PartyIdentification103Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LEI,omitempty"`
}

type PartyIdentification58Choice struct {
	AnyBIC   AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AnyBIC"`
	NmAndAdr NameAndAddress12 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ctry"`
}

type PartyIdentificationAndAccount146 struct {
	Id        PartyIdentification104Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	LEI       LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LEI,omitempty"`
	SfkpgAcct SecuritiesAccount30          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SfkpgAcct,omitempty"`
	PrcgId    RestrictedFINXMax16Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrcgId,omitempty"`
}

type PendingProcessingReason12 struct {
	Cd          PendingProcessingReason14Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type PendingProcessingReason14Choice struct {
	Cd    PendingProcessingReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of ADEA, CAIS, DOCY, NOFX, BLOC, MUNO, GLOB, YCOL, COLL, FLIM, NEXT, LACK, LALO, MONY, MINO, OTHR, DENO, LIQU, CERT, CSDH, CVAL, CDEL, CDLR, CDAC, INBC
type PendingProcessingReason2Code string

type PendingProcessingStatus15Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []PendingProcessingReason12 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type PendingReason20 struct {
	Cd          PendingReason37Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type PendingReason24 struct {
	Cd          PendingReason41Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, CSDH, CVAL, CDLR, INBC
type PendingReason2Code string

type PendingReason37Choice struct {
	Cd    PendingReason6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type PendingReason41Choice struct {
	Cd    PendingReason2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of ADEA, CONF, OTHR, CDRG, CDCY, CDRE
type PendingReason6Code string

type PendingStatus46Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []PendingReason20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type PendingStatus50Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []PendingReason24 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type PlaceOfClearingIdentification1 struct {
	Id  AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id,omitempty"`
	LEI LEIIdentifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LEI,omitempty"`
}

type PlaceOfTradeIdentification2 struct {
	MktTpAndId MarketIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LEI,omitempty"`
}

type ProprietaryReason5 struct {
	Rsn         GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason7 struct {
	PrtrySts GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrtrySts"`
	PrtryRsn []ProprietaryReason5    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrtryRsn,omitempty"`
}

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type Registration11Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type Registration12Choice struct {
	Cd    Registration2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

// May be one of PTYH, CSDH, CDEL, CVAL
type Registration2Code string

type RegistrationReason6 struct {
	Cd       Registration12Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlInf,omitempty"`
}

type RepairReason12 struct {
	Cd          RepairReason14Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type RepairReason14Choice struct {
	Cd    RepairReason4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of BATC, CAEV, CASH, CASY, DDAT, DDEA, DMON, DQUA, DSEC, DTRD, IIND, MINO, MUNO, NCRR, PHYS, PLCE, REFE, RTGS, SAFE, SETR, SETS, TXST, INPS, SDUT, OTHR, IEXE, ICAG, DEPT, ICUS
type RepairReason4Code string

type RepairStatus16Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []RepairReason12 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type RepurchaseType24Choice struct {
	Cd    RepurchaseType9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of PAIR, PADJ, RATE, CALL, ROLP, CADJ, TOPU, WTHD
type RepurchaseType9Code string

type RestrictedFINActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type RestrictedFINActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,350}
type RestrictedFINXMax350Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

type Restriction6Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type SafeKeepingPlace2 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat17Choice struct {
	Id      SafekeepingPlaceTypeAndText15            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TpAndId"`
	Prtry   GenericIdentification85                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
}

type SafekeepingPlaceTypeAndText15 struct {
	SfkpgPlcTp SafekeepingPlace3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SfkpgPlcTp"`
	Id         RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id,omitempty"`
}

type SecuritiesAccount30 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Nm,omitempty"`
}

type SecuritiesRTGS5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type SecuritiesTransactionPendingReport002V09 struct {
	Pgntn       Pagination1            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pgntn"`
	StmtGnlDtls Statement70            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StmtGnlDtls"`
	AcctOwnr    PartyIdentification119 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AcctOwnr,omitempty"`
	SfkpgAcct   SecuritiesAccount30    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SfkpgAcct"`
	Sts         []StatusAndReason35    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Sts,omitempty"`
	Txs         []Transaction64        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Txs,omitempty"`
}

// May be one of CNCB, BSBK, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CORP, CLAI, AUTO, ETFT, BIYI, SWIF, SWIT
type SecuritiesTransactionType20Code string

type SecuritiesTransactionType42Choice struct {
	Cd    SecuritiesTransactionType20Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Desc,omitempty"`
}

type SettlementDate32Choice struct {
	Dt   DateAndDateTime2Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Dt"`
	DtCd SettlementDateCode11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 DtCd"`
}

type SettlementDateCode11Choice struct {
	Cd    DateType4Code           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type SettlementDetails161 struct {
	HldInd         HoldIndicator7                           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 HldInd,omitempty"`
	SttlmTxCond    []SettlementTransactionCondition28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlmTxCond,omitempty"`
	SttlgCpcty     SettlingCapacity8Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification47                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS5Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SctiesRTGS,omitempty"`
	Regn           Registration11Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Regn,omitempty"`
	BnfclOwnrsh    BeneficialOwnership5Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 BnfclOwnrsh,omitempty"`
	CshClrSys      CashSettlementSystem5Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TaxCpcty,omitempty"`
	RpTp           RepurchaseType24Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 RpTp,omitempty"`
	MktClntSd      MarketClientSide7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MktClntSd,omitempty"`
	BlckTrad       BlockTrade5Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 BlckTrad,omitempty"`
	LglRstrctns    Restriction6Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod5Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility5Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility5Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CCPElgblty,omitempty"`
	LttrOfGrnt     LetterOfGuarantee5Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LttrOfGrnt,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrtlSttlmInd,omitempty"`
}

type SettlementOrCorporateActionEvent24Choice struct {
	SctiesTxTp    SecuritiesTransactionType42Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SctiesTxTp"`
	CorpActnEvtTp CorporateActionEventType83Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CorpActnEvtTp"`
}

type SettlementParties49 struct {
	Dpstry PartyIdentification108           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount146 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pty5,omitempty"`
}

type SettlementStatus22Choice struct {
	Pdg   PendingStatus50Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pdg"`
	Flng  FailingStatus12Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Flng"`
	Prtry ProprietaryStatusAndReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod5Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of ADEA, ASGN, BUTC, CLEN, DLWM, DIRT, DRAW, EXER, EXPI, FRCL, KNOC, NOMC, NACT, PENS, PHYS, RHYP, RPTO, RESI, SHOR, SPDL, SPST, TRAN, TRIP, UNEX
type SettlementTransactionCondition10Code string

type SettlementTransactionCondition28Choice struct {
	Cd    SettlementTransactionCondition10Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity8Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type Statement70 struct {
	RptNb     Number3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 RptNb,omitempty"`
	QryRef    RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 QryRef,omitempty"`
	StmtId    RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StmtId,omitempty"`
	StmtDtTm  DateAndDateTime2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StmtDtTm"`
	Frqcy     Frequency26Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Frqcy,omitempty"`
	UpdTp     UpdateType16Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 UpdTp,omitempty"`
	StmtStr   StatementStructure1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StmtStr"`
	ActvtyInd bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ActvtyInd"`
}

// May be one of STAT, TRAN
type StatementStructure1Code string

// May be one of COMP, DELT
type StatementUpdateType1Code string

type Status23Choice struct {
	Prtry         ProprietaryStatusAndReason7         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
	MtchgSts      MatchingStatus32Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MtchgSts"`
	IfrrdMtchgSts MatchingStatus32Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 IfrrdMtchgSts"`
	SttlmSts      SettlementStatus22Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlmSts"`
	InstrPrcgSts  InstructionProcessingStatus27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 InstrPrcgSts"`
}

type StatusAndReason35 struct {
	StsAndRsn Status23Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StsAndRsn"`
	Tx        []Transaction63 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Tx,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty5Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TradeDate9Choice struct {
	Dt   DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Dt"`
	DtCd TradeDateCode4Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 DtCd"`
}

type TradeDateCode4Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type Transaction63 struct {
	AcctOwnrTxId                RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AcctOwnrTxId"`
	AcctSvcrTxId                RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId           RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MktInfrstrctrTxId,omitempty"`
	PrcrTxId                    RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrcrTxId,omitempty"`
	TradId                      []RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TradId,omitempty"`
	PoolId                      RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PoolId,omitempty"`
	CmonId                      RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CmonId,omitempty"`
	CorpActnEvtId               RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CorpActnEvtId,omitempty"`
	TrptyAgtSvcPrvdrCollTxId    RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TrptyAgtSvcPrvdrCollTxId,omitempty"`
	ClntTrptyCollTxId           RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ClntTrptyCollTxId,omitempty"`
	ClntCollInstrId             RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ClntCollInstrId,omitempty"`
	TrptyAgtSvcPrvdrCollInstrId RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TrptyAgtSvcPrvdrCollInstrId,omitempty"`
	TxDtls                      TransactionDetails111     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TxDtls,omitempty"`
}

type Transaction64 struct {
	AcctOwnrTxId                RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AcctOwnrTxId"`
	AcctSvcrTxId                RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId           RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MktInfrstrctrTxId,omitempty"`
	PrcrTxId                    RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PrcrTxId,omitempty"`
	TradId                      []RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TradId,omitempty"`
	PoolId                      RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PoolId,omitempty"`
	CmonId                      RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CmonId,omitempty"`
	CorpActnEvtId               RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 CorpActnEvtId,omitempty"`
	TrptyAgtSvcPrvdrCollTxId    RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TrptyAgtSvcPrvdrCollTxId,omitempty"`
	ClntTrptyCollTxId           RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ClntTrptyCollTxId,omitempty"`
	ClntCollInstrId             RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 ClntCollInstrId,omitempty"`
	TrptyAgtSvcPrvdrCollInstrId RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TrptyAgtSvcPrvdrCollInstrId,omitempty"`
	TxDtls                      TransactionDetails111     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TxDtls,omitempty"`
	StsAndRsn                   []Status23Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 StsAndRsn,omitempty"`
}

// May be one of BOLE, CLAI, COLL, CORP, SETT
type TransactionActivity1Code string

type TransactionActivity4Choice struct {
	Cd    TransactionActivity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type TransactionDetails111 struct {
	TxActvty               TransactionActivity4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TxActvty"`
	SttlmTxOrCorpActnEvtTp SettlementOrCorporateActionEvent24Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlmTxOrCorpActnEvtTp,omitempty"`
	SctiesMvmntTp          ReceiveDelivery1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SctiesMvmntTp"`
	Pmt                    DeliveryReceiptType2Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Pmt"`
	SttlmParams            SettlementDetails161                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlmParams,omitempty"`
	PlcOfTrad              PlaceOfTradeIdentification2              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PlcOfTrad,omitempty"`
	SfkpgPlc               SafeKeepingPlace2                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SfkpgPlc,omitempty"`
	PlcOfClr               PlaceOfClearingIdentification1           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PlcOfClr,omitempty"`
	FinInstrmId            SecurityIdentification20                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 FinInstrmId"`
	PstngQty               Quantity10Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PstngQty"`
	PstngAmt               AmountAndDirection67                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 PstngAmt,omitempty"`
	TradDt                 TradeDate9Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TradDt,omitempty"`
	XpctdSttlmDt           DateAndDateTime2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 XpctdSttlmDt,omitempty"`
	SttlmDt                SettlementDate32Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SttlmDt"`
	LateDlvryDt            DateAndDateTime2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 LateDlvryDt,omitempty"`
	XpctdValDt             DateAndDateTime2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 XpctdValDt,omitempty"`
	AckdStsTmStmp          ISODateTime                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AckdStsTmStmp,omitempty"`
	MtchdStsTmStmp         ISODateTime                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 MtchdStsTmStmp,omitempty"`
	DlvrgSttlmPties        SettlementParties49                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties         SettlementParties49                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 RcvgSttlmPties,omitempty"`
	TxAddtlDtls            RestrictedFINXMax350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 TxAddtlDtls,omitempty"`
	SplmtryData            []SupplementaryData1                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 SplmtryData,omitempty"`
}

// May be one of ADEA, ACRU, IIND, CPCA, CLAT, NCRR, DDEA, DMCT, DCMX, DSEC, DQUA, INVE, LEOG, LATE, MIME, CMIS, NMAS, DTRA, OTHR, FRAP, PHYS, PLIS, INPS, PLCE, PODU, DEPT, ICAG, ICUS, IEXE, REGD, RTGS, SAFE, DMON, DDAT, SETS, SETR, TXST, DTRD, DELN, UNBR
type UnmatchedReason11Code string

type UnmatchedReason20 struct {
	Cd          UnmatchedReason27Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 AddtlRsnInf,omitempty"`
}

type UnmatchedReason27Choice struct {
	Cd    UnmatchedReason11Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type UnmatchedStatus21Choice struct {
	NoSpcfdRsn NoReasonCode        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 NoSpcfdRsn"`
	Rsn        []UnmatchedReason20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Rsn"`
}

type UpdateType16Choice struct {
	Cd    StatementUpdateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.018.002.09 Prtry"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
