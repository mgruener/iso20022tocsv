// Code generated by main. DO NOT EDIT.

package semt_020_002_05

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesMsgCxlAdvc SecuritiesMessageCancellationAdvice002V05 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesMsgCxlAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type PartyIdentification109 struct {
	Id  PartyIdentification114Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 LEI,omitempty"`
}

type PartyIdentification114Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 PrtryId"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type References53Choice struct {
	SctiesSttlmTxConfId           SettlementTypeAndIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesSttlmTxConfId"`
	IntraPosMvmntConfId           RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 IntraPosMvmntConfId"`
	SctiesBalAcctgRptId           RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesBalAcctgRptId"`
	SctiesBalCtdyRptId            RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesBalCtdyRptId"`
	IntraPosMvmntPstngRptId       RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 IntraPosMvmntPstngRptId"`
	SctiesFincgConfId             SettlementTypeAndIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesFincgConfId"`
	SctiesTxPdgRptId              RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesTxPdgRptId"`
	SctiesTxPstngRptId            RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesTxPstngRptId"`
	SctiesSttlmTxAllgmtRptId      RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesSttlmTxAllgmtRptId"`
	SctiesSttlmTxAllgmtNtfctnTxId SettlementTypeAndIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesSttlmTxAllgmtNtfctnTxId"`
	PrtflTrfNtfctnId              RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 PrtflTrfNtfctnId"`
	SctiesSttlmTxGnrtnNtfctnId    SettlementTypeAndIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesSttlmTxGnrtnNtfctnId"`
	OthrMsgId                     RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 OthrMsgId"`
	TtlPrtflValtnRptId            RestrictedFINXMax16Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 TtlPrtflValtnRptId"`
}

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

type SecuritiesAccount27 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Nm,omitempty"`
}

type SecuritiesMessageCancellationAdvice002V05 struct {
	Ref         References53Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Ref"`
	AcctOwnr    PartyIdentification109 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 AcctOwnr,omitempty"`
	SfkpgAcct   SecuritiesAccount27    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SfkpgAcct"`
	SplmtryData []SupplementaryData1   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SplmtryData,omitempty"`
}

type SettlementTypeAndIdentification22 struct {
	TxId          RestrictedFINXMax16Text  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 TxId"`
	SctiesMvmntTp ReceiveDelivery1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 SctiesMvmntTp"`
	Pmt           DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Pmt"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.020.002.05 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}
