// Code generated by main. DO NOT EDIT.

package semt_003_001_09

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account18 struct {
	Id       AccountIdentification26     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	AcctSvcr PartyIdentification71Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctSvcr,omitempty"`
}

type AccountIdentification26 struct {
	Prtry SimpleIdentificationInformation4 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalBalanceInformation14 struct {
	SubBalTp        SubBalanceType12Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SubBalTp"`
	Qty             SubBalanceQuantity6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
	SubBalAddtlDtls Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SubBalAddtlDtls,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AggregateBalanceInformation31 struct {
	FinInstrmId                 SecurityIdentification19                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FinInstrmId"`
	FinInstrmAttrbts            FinancialInstrumentAttributes64         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FinInstrmAttrbts,omitempty"`
	InvstmtFndsFinInstrmAttrbts FinancialInstrument21                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 InvstmtFndsFinInstrmAttrbts,omitempty"`
	AddtlDerivAttrbts           DerivativeBasicAttributes1              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AddtlDerivAttrbts,omitempty"`
	AggtBal                     Balance6                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AggtBal"`
	SfkpgPlc                    SafeKeepingPlace1                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgPlc,omitempty"`
	CorpActnOptnTp              CorporateActionOption5Code              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CorpActnOptnTp,omitempty"`
	PricDtls                    []PriceInformation12                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PricDtls"`
	FXDtls                      []ForeignExchangeTerms22                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FXDtls,omitempty"`
	DaysAcrd                    float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DaysAcrd,omitempty"`
	AcctBaseCcyAmts             BalanceAmounts1                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctBaseCcyAmts"`
	InstrmCcyAmts               BalanceAmounts1                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 InstrmCcyAmts,omitempty"`
	AltrnRptgCcyAmts            BalanceAmounts1                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AltrnRptgCcyAmts,omitempty"`
	QtyBrkdwn                   []QuantityBreakdown28                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtyBrkdwn,omitempty"`
	BalBrkdwn                   []SubBalanceInformation14               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BalBrkdwn,omitempty"`
	AddtlBalBrkdwn              []AdditionalBalanceInformation14        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AddtlBalBrkdwn,omitempty"`
	BalAtSfkpgPlc               []AggregateBalancePerSafekeepingPlace29 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BalAtSfkpgPlc,omitempty"`
	HldgAddtlDtls               Max350Text                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 HldgAddtlDtls,omitempty"`
	SplmtryData                 []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SplmtryData,omitempty"`
}

type AggregateBalancePerSafekeepingPlace29 struct {
	SfkpgPlc         SafeKeepingPlace1                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgPlc"`
	PlcOfListg       MarketIdentification3Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PlcOfListg,omitempty"`
	Pldgee           Pledgee1                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Pldgee,omitempty"`
	AggtBal          Balance6                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AggtBal"`
	PricDtls         []PriceInformation12             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PricDtls"`
	FXDtls           []ForeignExchangeTerms22         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FXDtls,omitempty"`
	DaysAcrd         float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DaysAcrd,omitempty"`
	AcctBaseCcyAmts  BalanceAmounts1                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctBaseCcyAmts"`
	InstrmCcyAmts    BalanceAmounts1                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 InstrmCcyAmts,omitempty"`
	AltrnRptgCcyAmts BalanceAmounts1                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AltrnRptgCcyAmts,omitempty"`
	QtyBrkdwn        []QuantityBreakdown28            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtyBrkdwn,omitempty"`
	XpsrTp           ExposureType16Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 XpsrTp,omitempty"`
	BalBrkdwn        []SubBalanceInformation14        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BalBrkdwn,omitempty"`
	AddtlBalBrkdwn   []AdditionalBalanceInformation14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AddtlBalBrkdwn,omitempty"`
	HldgAddtlDtls    Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 HldgAddtlDtls,omitempty"`
}

type AmountAndDirection6 struct {
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Amt"`
	Sgn bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Sgn"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type Balance6 struct {
	ShrtLngInd ShortLong1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ShrtLngInd"`
	Qty        BalanceQuantity9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
}

type Balance7 struct {
	ShrtLngInd ShortLong1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ShrtLngInd,omitempty"`
	Qty        BalanceQuantity9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
}

type BalanceAmounts1 struct {
	HldgVal       AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 HldgVal"`
	PrvsHldgVal   AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PrvsHldgVal,omitempty"`
	BookVal       AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BookVal,omitempty"`
	UrlsdGnLoss   AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UrlsdGnLoss,omitempty"`
	AcrdIntrstAmt AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcrdIntrstAmt,omitempty"`
}

type BalanceAmounts2 struct {
	HldgVal     AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 HldgVal"`
	BookVal     AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BookVal,omitempty"`
	UrlsdGnLoss AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UrlsdGnLoss,omitempty"`
}

type BalanceQuantity9Choice struct {
	Qty   Quantity6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
	Prtry GenericIdentification56 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type ClassificationType32Choice struct {
	ClssfctnFinInstrm CFIOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AltrnClssfctn"`
}

// May be one of CASH, SECU
type CorporateActionOption5Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DtTm"`
}

type DerivativeBasicAttributes1 struct {
	NtnlCcyAndAmt    ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 NtnlCcyAndAmt"`
	IntrstInclInPric bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 IntrstInclInPric,omitempty"`
}

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	SctiesBalAcctgRpt SecuritiesBalanceAccountingReportV09 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SctiesBalAcctgRpt"`
}

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// May be one of YEAR, ADHO, MNTH, DAIL, INDA, WEEK
type EventFrequency4Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

type ExposureType16Choice struct {
	Cd    ExposureType4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// May be one of BFWD, PAYM, CCPC, COMM, CRDS, CRTL, CRSP, CCIR, CRPR, EQPT, EXTD, EQUS, EXPT, FIXI, FORX, FORW, FUTR, OPTN, LIQU, OTCD, REPO, RVPO, SLOA, SBSC, SCRP, SLEB, SHSL, SCIR, SCIE, SWPT, TBAS, TRCP
type ExposureType4Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrument21 struct {
	ClssTp          Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ClssTp,omitempty"`
	SctiesForm      FormOfSecurity1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SctiesForm,omitempty"`
	DstrbtnPlcy     DistributionPolicy1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DstrbtnPlcy,omitempty"`
	PdctGrp         Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PdctGrp,omitempty"`
	UmbrllNm        Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UmbrllNm,omitempty"`
	BaseCcy         ActiveCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BaseCcy,omitempty"`
	DnmtnCcy        ActiveCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DnmtnCcy,omitempty"`
	ReqdNAVCcy      ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ReqdNAVCcy,omitempty"`
	DualFndInd      bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DualFndInd,omitempty"`
	CtryOfDmcl      CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CtryOfDmcl,omitempty"`
	RegdDstrbtnCtry []CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 RegdDstrbtnCtry,omitempty"`
}

type FinancialInstrumentAttributes64 struct {
	PlcOfListg             MarketIdentification3Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity6Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 RegnForm,omitempty"`
	PmtFrqcy               Frequency23Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus5Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PmtSts,omitempty"`
	VarblRateChngFrqcy     Frequency23Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 VarblRateChngFrqcy,omitempty"`
	ClssfctnTp             ClassificationType32Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle8Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 OptnStyle,omitempty"`
	OptnTp                 OptionType6Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 IntrstRate,omitempty"`
	YldToMtrtyRate         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 YldToMtrtyRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number22Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CpnAttchdNb,omitempty"`
	PoolNb                 GenericIdentification37                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 MktOrIndctvPric,omitempty"`
	ExrcPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ExrcPric,omitempty"`
	SbcptPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SbcptPric,omitempty"`
	ConvsPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ConvsPric,omitempty"`
	StrkPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification19             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls Max350Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AmtsdVal"`
}

type ForeignExchangeTerms22 struct {
	UnitCcy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UnitCcy"`
	QtdCcy   ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtdCcy"`
	XchgRate float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 XchgRate"`
	QtnDt    ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtnDt,omitempty"`
	QtgInstn PartyIdentification71Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtgInstn,omitempty"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity6Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type Frequency23Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type Frequency25Choice struct {
	Cd    EventFrequency4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SchmeNm,omitempty"`
}

type GenericIdentification37 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Issr,omitempty"`
}

type GenericIdentification56 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SchmeNm,omitempty"`
	Bal     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Bal"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id,omitempty"`
}

type GenericIdentification80 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat4Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type Intermediary32 struct {
	Id   PartyIdentification100 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Role Role6Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Role,omitempty"`
	Acct Account18              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Acct,omitempty"`
}

// May be one of FMCO, REGI, TRAG, INTR, DIST, CONC, UCL1, UCL2, TRAN
type InvestmentFundRole2Code string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Desc"`
}

type MarketIdentification3Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Desc"`
}

type MarketIdentification89 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id,omitempty"`
	Tp MarketType15Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp"`
}

type MarketType15Choice struct {
	Cd    MarketType4Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// May be one of FUND, LMAR, THEO, VEND
type MarketType4Code string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Adr,omitempty"`
}

type Number22Choice struct {
	Shrt Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Shrt"`
	Lng  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Lng"`
}

type Number3Choice struct {
	Shrt Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Shrt"`
	Lng  Exact5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Lng"`
}

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle8Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType6Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp"`
}

type Pagination struct {
	PgNb      Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PgNb"`
	LastPgInd bool            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LastPgInd"`
}

type PartyIdentification100 struct {
	Id  PartyIdentification71Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LEI,omitempty"`
}

type PartyIdentification71Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 NmAndAdr"`
}

type PartyIdentification92Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AnyBIC"`
	PrtryId GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PrtryId"`
}

type PartyIdentification98 struct {
	Id  PartyIdentification92Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	LEI LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LEI,omitempty"`
}

type Pledgee1 struct {
	PldgeeTpAndId PledgeeFormat3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PldgeeTpAndId,omitempty"`
	LEI           LEIIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LEI,omitempty"`
}

type PledgeeFormat3Choice struct {
	TpAndId PledgeeTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TpAndId"`
	Id      PledgeeTypeAndText1             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Prtry   GenericIdentification80         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// May be one of CPTY, REGB
type PledgeeType1Code string

type PledgeeTypeAndAnyBICIdentifier1 struct {
	Id       AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	PldgeeTp PledgeeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PldgeeTp"`
}

type PledgeeTypeAndText1 struct {
	Id       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id,omitempty"`
	PldgeeTp PledgeeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PldgeeTp"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Ctry"`
}

type Price2 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp"`
	Val PriceRateOrAmountChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Val"`
}

type PriceInformation12 struct {
	Tp        TypeOfPrice28Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp"`
	Val       PriceRateOrAmountOrUnknownChoice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Val"`
	ValTp     YieldedOrValueType1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ValTp"`
	SrcOfPric MarketIdentification89           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SrcOfPric,omitempty"`
	QtnDt     DateAndDateTimeChoice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtnDt,omitempty"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Amt"`
}

type PriceRateOrAmountOrUnknownChoice struct {
	Rate     float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Rate"`
	Amt      ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Amt"`
	UknwnInd bool                                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UknwnInd"`
}

type PriceType1Choice struct {
	Mkt    Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Mkt"`
	Indctv Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PurposeCode7Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 OrgnlAndCurFace"`
}

type QuantityAndAvailability1 struct {
	Qty       FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
	AvlbtyInd bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AvlbtyInd"`
}

type QuantityBreakdown28 struct {
	LotNb            GenericIdentification37 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LotNb,omitempty"`
	LotQty           Balance7                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LotQty,omitempty"`
	LotDtTm          DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LotDtTm,omitempty"`
	LotPric          Price2                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LotPric,omitempty"`
	TpOfPric         TypeOfPrice29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TpOfPric,omitempty"`
	AcctBaseCcyAmts  BalanceAmounts2         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctBaseCcyAmts,omitempty"`
	InstrmCcyAmts    BalanceAmounts2         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 InstrmCcyAmts,omitempty"`
	AltrnRptgCcyAmts BalanceAmounts2         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AltrnRptgCcyAmts,omitempty"`
}

type Role6Choice struct {
	Cd    InvestmentFundRole2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
	Txt   Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Txt"`
}

type SafeKeepingPlace1 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat10Choice struct {
	Id      SafekeepingPlaceTypeAndText8             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TpAndId"`
	Prtry   GenericIdentification78                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
}

type SafekeepingPlaceTypeAndText8 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id,omitempty"`
}

type SecuritiesAccount25 struct {
	Id Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Tp PurposeCode7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp,omitempty"`
	Nm Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Nm,omitempty"`
}

type SecuritiesAccount26 struct {
	Id    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
	Tp    PurposeCode7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Tp,omitempty"`
	Nm    Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Nm,omitempty"`
	Dsgnt Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Dsgnt,omitempty"`
}

// May be one of MARG, SHOR, ABRD, CEND, DVPA, PHYS
type SecuritiesAccountPurposeType1Code string

type SecuritiesBalanceAccountingReportV09 struct {
	Pgntn               Pagination                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Pgntn"`
	StmtGnlDtls         Statement40                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 StmtGnlDtls"`
	AcctOwnr            PartyIdentification98           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctOwnr,omitempty"`
	AcctSvcr            PartyIdentification100          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctSvcr,omitempty"`
	SfkpgAcct           SecuritiesAccount26             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgAcct"`
	IntrmyInf           []Intermediary32                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 IntrmyInf,omitempty"`
	BalForAcct          []AggregateBalanceInformation31 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BalForAcct,omitempty"`
	SubAcctDtls         []SubAccountIdentification43    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SubAcctDtls,omitempty"`
	AcctBaseCcyTtlAmts  TotalValueInPageAndStatement2   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctBaseCcyTtlAmts,omitempty"`
	AltrnRptgCcyTtlAmts TotalValueInPageAndStatement2   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AltrnRptgCcyTtlAmts,omitempty"`
}

// May be one of BLOK, AWAS, BLCA, BLOT, BLOV, BORR, BODE, BORE, COLI, COLO, LOAN, LODE, LORE, MARG, PECA, PEDA, PEND, PENR, PLED, REGO, RSTR, OTHR, TRAN, DRAW, WDOC, BTRA
type SecuritiesBalanceType12Code string

// May be one of COLA, OTHR, CLEN, DIRT, NOMI, SPOS, UNRG, ISSU, QUAS
type SecuritiesBalanceType7Code string

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus5Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Desc,omitempty"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SimpleIdentificationInformation4 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Id"`
}

type Statement40 struct {
	RptNb      Number3Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 RptNb,omitempty"`
	QryRef     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QryRef,omitempty"`
	StmtId     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 StmtId,omitempty"`
	StmtDtTm   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 StmtDtTm"`
	Frqcy      Frequency25Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Frqcy"`
	UpdTp      UpdateType15Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 UpdTp"`
	StmtBsis   StatementBasis7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 StmtBsis"`
	ActvtyInd  bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ActvtyInd"`
	AudtdInd   bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AudtdInd"`
	SubAcctInd bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SubAcctInd"`
	TaxLotInd  bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TaxLotInd,omitempty"`
}

// May be one of CONT, SETT, TRAD
type StatementBasis1Code string

type StatementBasis7Choice struct {
	Cd    StatementBasis1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

// May be one of COMP, DELT
type StatementUpdateType1Code string

type SubAccountIdentification43 struct {
	AcctOwnr      PartyIdentification98           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AcctOwnr,omitempty"`
	SfkpgAcct     SecuritiesAccount25             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SfkpgAcct"`
	ActvtyInd     bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ActvtyInd"`
	BalForSubAcct []AggregateBalanceInformation31 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 BalForSubAcct,omitempty"`
}

type SubBalanceInformation14 struct {
	SubBalTp           SubBalanceType11Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SubBalTp"`
	Qty                SubBalanceQuantity6Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
	SubBalAddtlDtls    Max140Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 SubBalAddtlDtls,omitempty"`
	AddtlBalBrkdwnDtls []AdditionalBalanceInformation14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 AddtlBalBrkdwnDtls,omitempty"`
}

type SubBalanceQuantity6Choice struct {
	Qty          FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Qty"`
	Prtry        GenericIdentification56            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
	QtyAndAvlbty QuantityAndAvailability1           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 QtyAndAvlbty"`
}

type SubBalanceType11Choice struct {
	Cd    SecuritiesBalanceType12Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type SubBalanceType12Choice struct {
	Cd    SecuritiesBalanceType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TotalValueInPageAndStatement2 struct {
	TtlHldgsValOfPg   AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TtlHldgsValOfPg,omitempty"`
	TtlHldgsValOfStmt AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TtlHldgsValOfStmt"`
	TtlBookValOfStmt  AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 TtlBookValOfStmt,omitempty"`
}

// May be one of BIDE, OFFR, NAVL, CREA, CANC, INTE, SWNG, MIDD, RINV, SWIC, MRKT, INDC
type TypeOfPrice11Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice28Choice struct {
	Cd    TypeOfPrice11Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type TypeOfPrice29Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type UpdateType15Choice struct {
	Cd    StatementUpdateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Cd"`
	Prtry GenericIdentification30  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Prtry"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.003.001.09 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
