// Code generated by main. DO NOT EDIT.

package semt_002_002_10

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account30 struct {
	Id       AccountIdentification4       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	AcctSvcr PartyIdentification137Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctSvcr,omitempty"`
}

type AccountIdentification4 struct {
	Prtry SimpleIdentificationInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalBalanceInformation19 struct {
	SubBalTp        SubBalanceType14Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SubBalTp"`
	Qty             Balance13                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	SubBalAddtlDtls RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SubBalAddtlDtls,omitempty"`
	QtyBrkdwn       []QuantityBreakdown56    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtyBrkdwn,omitempty"`
}

type AggregateBalanceInformation39 struct {
	FinInstrmId                 SecurityIdentification20                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FinInstrmId"`
	FinInstrmAttrbts            FinancialInstrumentAttributes97         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FinInstrmAttrbts,omitempty"`
	InvstmtFndsFinInstrmAttrbts FinancialInstrument22                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 InvstmtFndsFinInstrmAttrbts,omitempty"`
	ValtnHrcutDtls              BasicCollateralValuation1Details        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ValtnHrcutDtls,omitempty"`
	AggtBal                     Balance10                               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AggtBal"`
	AvlblBal                    Balance12                               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AvlblBal,omitempty"`
	NotAvlblBal                 BalanceQuantity12Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 NotAvlblBal,omitempty"`
	SfkpgPlc                    SafeKeepingPlace4                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgPlc,omitempty"`
	CorpActnOptnTp              CorporateActionOption5Code              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CorpActnOptnTp,omitempty"`
	PricDtls                    []PriceInformation22                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PricDtls,omitempty"`
	FXDtls                      []ForeignExchangeTerms35                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FXDtls,omitempty"`
	DaysAcrd                    float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DaysAcrd,omitempty"`
	AcctBaseCcyAmts             BalanceAmounts4                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctBaseCcyAmts,omitempty"`
	InstrmCcyAmts               BalanceAmounts4                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 InstrmCcyAmts,omitempty"`
	QtyBrkdwn                   []QuantityBreakdown56                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtyBrkdwn,omitempty"`
	BalBrkdwn                   []SubBalanceInformation19               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BalBrkdwn,omitempty"`
	AddtlBalBrkdwn              []AdditionalBalanceInformation19        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AddtlBalBrkdwn,omitempty"`
	BalAtSfkpgPlc               []AggregateBalancePerSafekeepingPlace36 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BalAtSfkpgPlc,omitempty"`
	HldgAddtlDtls               RestrictedFINXMax350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 HldgAddtlDtls,omitempty"`
	SplmtryData                 []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SplmtryData,omitempty"`
}

type AggregateBalancePerSafekeepingPlace36 struct {
	SfkpgPlc        SafeKeepingPlace4                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgPlc"`
	PlcOfListg      MarketIdentification4Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PlcOfListg,omitempty"`
	Pldgee          Pledgee4                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Pldgee,omitempty"`
	AggtBal         Balance10                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AggtBal"`
	AvlblBal        Balance12                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AvlblBal,omitempty"`
	NotAvlblBal     BalanceQuantity12Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 NotAvlblBal,omitempty"`
	PricDtls        []PriceInformation22             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PricDtls,omitempty"`
	FXDtls          []ForeignExchangeTerms35         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FXDtls,omitempty"`
	DaysAcrd        float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DaysAcrd,omitempty"`
	AcctBaseCcyAmts BalanceAmounts4                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctBaseCcyAmts,omitempty"`
	InstrmCcyAmts   BalanceAmounts4                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 InstrmCcyAmts,omitempty"`
	QtyBrkdwn       []QuantityBreakdown56            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtyBrkdwn,omitempty"`
	XpsrTp          ExposureType17Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 XpsrTp,omitempty"`
	BalBrkdwn       []SubBalanceInformation19        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BalBrkdwn,omitempty"`
	AddtlBalBrkdwn  []AdditionalBalanceInformation19 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AddtlBalBrkdwn,omitempty"`
	HldgAddtlDtls   RestrictedFINXMax350Text         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 HldgAddtlDtls,omitempty"`
}

type AmountAndDirection14 struct {
	Amt RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Amt"`
	Sgn bool                                           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Sgn"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type Balance10 struct {
	ShrtLngInd ShortLong1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ShrtLngInd"`
	Qty        BalanceQuantity10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
}

type Balance11 struct {
	ShrtLngInd ShortLong1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ShrtLngInd,omitempty"`
	Qty        BalanceQuantity10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
}

type Balance12 struct {
	ShrtLngInd ShortLong1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ShrtLngInd,omitempty"`
	Qty        BalanceQuantity12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
}

type Balance13 struct {
	ShrtLngInd ShortLong1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ShrtLngInd,omitempty"`
	Qty        SubBalanceQuantity7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
}

type BalanceAmounts4 struct {
	HldgVal       AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 HldgVal,omitempty"`
	PrvsHldgVal   AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PrvsHldgVal,omitempty"`
	BookVal       AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BookVal,omitempty"`
	ElgblCollVal  AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ElgblCollVal,omitempty"`
	AcrdIntrstAmt AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcrdIntrstAmt,omitempty"`
}

type BalanceQuantity10Choice struct {
	Qty   Quantity10Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	Prtry GenericIdentification144 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type BalanceQuantity12Choice struct {
	Qty   FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	Prtry GenericIdentification144            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type BasicCollateralValuation1Details struct {
	ValtnHrcut float64               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ValtnHrcut"`
	HrcutSrc   PartyIdentification15 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 HrcutSrc,omitempty"`
}

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type ClassificationType33Choice struct {
	ClssfctnFinInstrm CFIOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification86 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AltrnClssfctn"`
}

// May be one of CASH, SECU
type CorporateActionOption5Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DtTm"`
}

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	SctiesBalCtdyRpt SecuritiesBalanceCustodyReport002V10 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SctiesBalCtdyRpt"`
}

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// May be one of YEAR, ADHO, MNTH, DAIL, INDA, WEEK, SEMI, QUTR, TOMN, TOWK, TWMN, OVNG, ONDE
type EventFrequency7Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

type ExposureType17Choice struct {
	Cd    ExposureType4Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// May be one of BFWD, PAYM, CCPC, COMM, CRDS, CRTL, CRSP, CCIR, CRPR, EQPT, EXTD, EQUS, EXPT, FIXI, FORX, FORW, FUTR, OPTN, LIQU, OTCD, REPO, RVPO, SLOA, SBSC, SCRP, SLEB, SHSL, SCIR, SCIE, SWPT, TBAS, TRCP
type ExposureType4Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrument22 struct {
	ClssTp          Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ClssTp,omitempty"`
	SctiesForm      FormOfSecurity1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SctiesForm,omitempty"`
	DstrbtnPlcy     DistributionPolicy1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DstrbtnPlcy,omitempty"`
	PdctGrp         RestrictedFINXMax140Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PdctGrp,omitempty"`
	UmbrllNm        Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 UmbrllNm,omitempty"`
	BaseCcy         ActiveCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BaseCcy,omitempty"`
	DnmtnCcy        ActiveCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DnmtnCcy,omitempty"`
	ReqdNAVCcy      ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ReqdNAVCcy,omitempty"`
	DualFndInd      bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DualFndInd,omitempty"`
	CtryOfDmcl      CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CtryOfDmcl,omitempty"`
	RegdDstrbtnCtry []CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 RegdDstrbtnCtry,omitempty"`
}

type FinancialInstrumentAttributes97 struct {
	PlcOfListg             MarketIdentification4Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 RegnForm,omitempty"`
	PmtFrqcy               Frequency27Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PmtSts,omitempty"`
	VarblRateChngFrqcy     Frequency27Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 VarblRateChngFrqcy,omitempty"`
	ClssfctnTp             ClassificationType33Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle9Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 OptnStyle,omitempty"`
	OptnTp                 OptionType7Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 IntrstRate,omitempty"`
	YldToMtrtyRate         float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 YldToMtrtyRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number23Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CpnAttchdNb,omitempty"`
	PoolNb                 GenericIdentification39                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType5Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 MktOrIndctvPric,omitempty"`
	ExrcPric               Price3                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ExrcPric,omitempty"`
	SbcptPric              Price3                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SbcptPric,omitempty"`
	ConvsPric              Price3                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ConvsPric,omitempty"`
	StrkPric               Price3                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity15Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity15Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification20             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls RestrictedFINXMax350Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AmtsdVal"`
}

type ForeignExchangeTerms35 struct {
	UnitCcy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 UnitCcy"`
	QtdCcy   ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtdCcy"`
	XchgRate float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 XchgRate"`
	QtnDt    ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtnDt,omitempty"`
	QtgInstn PartyIdentification137Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtgInstn,omitempty"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity7Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type Frequency27Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type Frequency34Choice struct {
	Cd    EventFrequency7Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type GenericIdentification144 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SchmeNm,omitempty"`
	Bal     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Bal"`
}

type GenericIdentification18 struct {
	Id      RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SchmeNm,omitempty"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Issr,omitempty"`
}

type GenericIdentification39 struct {
	Id   RestrictedFINMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Issr RestrictedFINMax8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Issr,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SchmeNm,omitempty"`
}

type GenericIdentification85 struct {
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp"`
	Id RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id,omitempty"`
}

type GenericIdentification86 struct {
	Id      RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat5Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type Intermediary45 struct {
	Id   PartyIdentification157 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Role Role7Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Role,omitempty"`
	Acct Account30              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Acct,omitempty"`
}

// May be one of FMCO, REGI, TRAG, INTR, DIST, CONC, UCL1, UCL2, TRAN
type InvestmentFundRole2Code string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketIdentification2Choice struct {
	MktIdrCd MICIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 MktIdrCd"`
	Desc     RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Desc"`
}

type MarketIdentification4Choice struct {
	MktIdrCd MICIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 MktIdrCd"`
	Desc     RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Desc"`
}

type MarketIdentification91 struct {
	Id MarketIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id,omitempty"`
	Tp MarketType17Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp"`
}

type MarketType17Choice struct {
	Cd    MarketType4Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// May be one of FUND, LMAR, THEO, VEND
type MarketType4Code string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress12 struct {
	Nm RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Nm"`
}

type Number23Choice struct {
	Shrt Exact3NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Shrt"`
	Lng  GenericIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Lng"`
}

type Number3Choice struct {
	Shrt Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Shrt"`
	Lng  Exact5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Lng"`
}

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle9Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType7Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp"`
}

type Pagination1 struct {
	PgNb      Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PgNb"`
	LastPgInd bool            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LastPgInd"`
}

type PartyIdentification136Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PrtryId"`
}

type PartyIdentification137Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 NmAndAdr"`
}

type PartyIdentification15 struct {
	Ctry CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Ctry,omitempty"`
	Id   Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
}

type PartyIdentification156 struct {
	Id  PartyIdentification136Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LEI,omitempty"`
}

type PartyIdentification157 struct {
	Id  PartyIdentification137Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LEI,omitempty"`
}

type Pledgee4 struct {
	PldgeeTpAndId PledgeeFormat6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PldgeeTpAndId,omitempty"`
	LEI           LEIIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LEI,omitempty"`
}

type PledgeeFormat6Choice struct {
	TpAndId PledgeeTypeAndAnyBICIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TpAndId"`
	Id      PledgeeTypeAndText2             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Prtry   GenericIdentification85         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// May be one of CPTY, REGB
type PledgeeType1Code string

type PledgeeTypeAndAnyBICIdentifier2 struct {
	Id       AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	PldgeeTp PledgeeType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PldgeeTp"`
}

type PledgeeTypeAndText2 struct {
	Id       RestrictedFINMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id,omitempty"`
	PldgeeTp PledgeeType1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PldgeeTp"`
}

type Price3 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp"`
	Val PriceRateOrAmount1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Val"`
}

type PriceInformation22 struct {
	Tp        TypeOfPrice33Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp"`
	Val       PriceRateOrAmountOrUnknown3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Val"`
	ValTp     YieldedOrValueType1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ValTp"`
	SrcOfPric MarketIdentification91            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SrcOfPric,omitempty"`
	QtnDt     DateAndDateTime2Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtnDt,omitempty"`
}

type PriceRateOrAmount1Choice struct {
	Rate float64                                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Rate"`
	Amt  RestrictedFINActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Amt"`
}

type PriceRateOrAmountOrUnknown3Choice struct {
	Rate     float64                                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Rate"`
	Amt      RestrictedFINActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Amt"`
	UknwnInd bool                                                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 UknwnInd"`
}

type PriceType5Choice struct {
	Mkt    Price3 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Mkt"`
	Indctv Price3 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PurposeCode8Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 OrgnlAndCurFace"`
}

type QuantityAndAvailability2 struct {
	Qty       FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	AvlbtyInd bool                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AvlbtyInd"`
}

type QuantityBreakdown56 struct {
	LotNb    GenericIdentification39 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LotNb,omitempty"`
	LotQty   Balance11               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LotQty,omitempty"`
	LotDtTm  DateAndDateTime2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LotDtTm,omitempty"`
	LotPric  Price3                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LotPric,omitempty"`
	TpOfPric TypeOfPrice32Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TpOfPric,omitempty"`
}

type RestrictedFINActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type RestrictedFINActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax30Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax8Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,350}
type RestrictedFINXMax350Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

type Role7Choice struct {
	Cd    InvestmentFundRole2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
	Txt   RestrictedFINXMax350Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Txt"`
}

type SafeKeepingPlace4 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat39Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat39Choice struct {
	Id      SafekeepingPlaceTypeAndText15          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TpAndId"`
	Prtry   GenericIdentification85                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
}

type SafekeepingPlaceTypeAndText15 struct {
	SfkpgPlcTp SafekeepingPlace3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgPlcTp"`
	Id         RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id,omitempty"`
}

type SecuritiesAccount33 struct {
	Id    RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Tp    PurposeCode8Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp,omitempty"`
	Nm    Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Nm,omitempty"`
	Dsgnt Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Dsgnt,omitempty"`
}

type SecuritiesAccount34 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
	Tp PurposeCode8Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Nm,omitempty"`
}

// May be one of MARG, SHOR, ABRD, CEND, DVPA, PHYS
type SecuritiesAccountPurposeType1Code string

type SecuritiesBalanceCustodyReport002V10 struct {
	Pgntn              Pagination1                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Pgntn"`
	StmtGnlDtls        Statement77                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 StmtGnlDtls"`
	AcctOwnr           PartyIdentification156          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctOwnr,omitempty"`
	AcctSvcr           PartyIdentification157          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctSvcr,omitempty"`
	SfkpgAcct          SecuritiesAccount33             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgAcct"`
	IntrmyInf          []Intermediary45                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 IntrmyInf,omitempty"`
	BalForAcct         []AggregateBalanceInformation39 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BalForAcct,omitempty"`
	SubAcctDtls        []SubAccountIdentification58    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SubAcctDtls,omitempty"`
	AcctBaseCcyTtlAmts TotalValueInPageAndStatement3   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctBaseCcyTtlAmts,omitempty"`
}

// May be one of BLOK, AWAS, BLCA, BLOT, BLOV, BORR, BODE, BORE, COLI, COLO, LOAN, LODE, LORE, MARG, PECA, PEDA, PEND, PENR, PLED, REGO, RSTR, OTHR, TRAN, DRAW, WDOC, BTRA
type SecuritiesBalanceType12Code string

// May be one of COLA, OTHR, CLEN, DIRT, NOMI, SPOS, UNRG, ISSU, QUAS
type SecuritiesBalanceType7Code string

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus6Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Desc,omitempty"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SimpleIdentificationInformation1 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Id"`
}

type Statement77 struct {
	RptNb              Number3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 RptNb,omitempty"`
	QryRef             RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QryRef,omitempty"`
	StmtId             RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 StmtId,omitempty"`
	StmtDtTm           DateAndDateTime2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 StmtDtTm"`
	Frqcy              Frequency34Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Frqcy"`
	UpdTp              UpdateType16Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 UpdTp"`
	StmtBsis           StatementBasis9Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 StmtBsis"`
	ActvtyInd          bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ActvtyInd"`
	SubAcctInd         bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SubAcctInd"`
	SctyIntrstOrSetOff bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SctyIntrstOrSetOff,omitempty"`
}

// May be one of CONT, SETT, TRAD
type StatementBasis1Code string

type StatementBasis9Choice struct {
	Cd    StatementBasis1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

// May be one of COMP, DELT
type StatementUpdateType1Code string

type SubAccountIdentification58 struct {
	AcctOwnr      PartyIdentification156          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AcctOwnr,omitempty"`
	SfkpgAcct     SecuritiesAccount34             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SfkpgAcct"`
	ActvtyInd     bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ActvtyInd"`
	BalForSubAcct []AggregateBalanceInformation39 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 BalForSubAcct,omitempty"`
}

type SubBalanceInformation19 struct {
	SubBalTp           SubBalanceType13Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SubBalTp"`
	Qty                Balance13                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	SubBalAddtlDtls    RestrictedFINXMax140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 SubBalAddtlDtls,omitempty"`
	QtyBrkdwn          []QuantityBreakdown56            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtyBrkdwn,omitempty"`
	AddtlBalBrkdwnDtls []AdditionalBalanceInformation19 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 AddtlBalBrkdwnDtls,omitempty"`
}

type SubBalanceQuantity7Choice struct {
	Qty          FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Qty"`
	Prtry        GenericIdentification144            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
	QtyAndAvlbty QuantityAndAvailability2            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 QtyAndAvlbty"`
}

type SubBalanceType13Choice struct {
	Cd    SecuritiesBalanceType12Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type SubBalanceType14Choice struct {
	Cd    SecuritiesBalanceType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TotalValueInPageAndStatement3 struct {
	TtlHldgsValOfPg   AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TtlHldgsValOfPg,omitempty"`
	TtlHldgsValOfStmt AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TtlHldgsValOfStmt"`
	TtlBookValOfStmt  AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TtlBookValOfStmt,omitempty"`
	TtlElgblCollVal   AmountAndDirection14 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 TtlElgblCollVal,omitempty"`
}

// May be one of BIDE, OFFR, NAVL, CREA, CANC, INTE, SWNG, MIDD, RINV, SWIC, MRKT, INDC
type TypeOfPrice11Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice32Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type TypeOfPrice33Choice struct {
	Cd    TypeOfPrice11Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type UpdateType16Choice struct {
	Cd    StatementUpdateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Prtry"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.002.10 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
