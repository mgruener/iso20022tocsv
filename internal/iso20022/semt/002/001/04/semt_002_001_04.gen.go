// Code generated by main. DO NOT EDIT.

package semt_002_001_04

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account11 struct {
	Id       AccountIdentification1      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	AcctSvcr PartyIdentification49Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctSvcr,omitempty"`
}

type AccountIdentification1 struct {
	Prtry SimpleIdentificationInformation `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalBalanceInformation5 struct {
	SubBalTp        SubBalanceType6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SubBalTp"`
	Qty             SubBalanceQuantity3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	SubBalAddtlDtls Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SubBalAddtlDtls,omitempty"`
	QtyBrkdwn       []QuantityBreakdown3      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtyBrkdwn,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AggregateBalanceInformation12 struct {
	FinInstrmId                 SecurityIdentification14                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FinInstrmId"`
	FinInstrmAttrbts            FinancialInstrumentAttributes20         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FinInstrmAttrbts,omitempty"`
	InvstmtFndsFinInstrmAttrbts FinancialInstrument21                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 InvstmtFndsFinInstrmAttrbts,omitempty"`
	ValtnHrcutDtls              BasicCollateralValuation1Details        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ValtnHrcutDtls,omitempty"`
	AggtBal                     Balance1                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AggtBal"`
	AvlblBal                    BalanceQuantity5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AvlblBal,omitempty"`
	NotAvlblBal                 BalanceQuantity5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 NotAvlblBal,omitempty"`
	SfkpgPlc                    SafekeepingPlaceFormat3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SfkpgPlc,omitempty"`
	CorpActnOptnTp              CorporateActionOption5Code              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CorpActnOptnTp,omitempty"`
	PricDtls                    []PriceInformation5                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PricDtls,omitempty"`
	FXDtls                      []ForeignExchangeTerms14                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FXDtls,omitempty"`
	DaysAcrd                    float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DaysAcrd,omitempty"`
	AcctBaseCcyAmts             BalanceAmounts3                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctBaseCcyAmts,omitempty"`
	InstrmCcyAmts               BalanceAmounts3                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 InstrmCcyAmts,omitempty"`
	QtyBrkdwn                   []QuantityBreakdown3                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtyBrkdwn,omitempty"`
	BalBrkdwn                   []SubBalanceInformation5                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BalBrkdwn,omitempty"`
	AddtlBalBrkdwn              []AdditionalBalanceInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AddtlBalBrkdwn,omitempty"`
	BalAtSfkpgPlc               []AggregateBalancePerSafekeepingPlace11 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BalAtSfkpgPlc,omitempty"`
	HldgAddtlDtls               Max350Text                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 HldgAddtlDtls,omitempty"`
	SplmtryData                 []SupplementaryData1                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SplmtryData,omitempty"`
}

type AggregateBalancePerSafekeepingPlace11 struct {
	SfkpgPlc        SafekeepingPlaceFormat3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SfkpgPlc"`
	PlcOfListg      MarketIdentification5           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PlcOfListg,omitempty"`
	AggtBal         Balance1                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AggtBal"`
	AvlblBal        BalanceQuantity5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AvlblBal,omitempty"`
	NotAvlblBal     BalanceQuantity5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 NotAvlblBal,omitempty"`
	PricDtls        []PriceInformation5             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PricDtls,omitempty"`
	FXDtls          []ForeignExchangeTerms14        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FXDtls,omitempty"`
	DaysAcrd        float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DaysAcrd,omitempty"`
	AcctBaseCcyAmts BalanceAmounts3                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctBaseCcyAmts,omitempty"`
	InstrmCcyAmts   BalanceAmounts3                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 InstrmCcyAmts,omitempty"`
	QtyBrkdwn       []QuantityBreakdown3            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtyBrkdwn,omitempty"`
	BalBrkdwn       []SubBalanceInformation5        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BalBrkdwn,omitempty"`
	AddtlBalBrkdwn  []AdditionalBalanceInformation5 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AddtlBalBrkdwn,omitempty"`
	HldgAddtlDtls   Max350Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 HldgAddtlDtls,omitempty"`
}

type AmountAndDirection6 struct {
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Amt"`
	Sgn bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Sgn"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type Balance1 struct {
	ShrtLngInd ShortLong1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ShrtLngInd"`
	Qty        BalanceQuantity4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
}

type BalanceAmounts3 struct {
	HldgVal       AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 HldgVal,omitempty"`
	PrvsHldgVal   AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PrvsHldgVal,omitempty"`
	BookVal       AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BookVal,omitempty"`
	ElgblCollVal  AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ElgblCollVal,omitempty"`
	AcrdIntrstAmt AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcrdIntrstAmt,omitempty"`
}

type BalanceQuantity4Choice struct {
	Qty   Quantity6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	Prtry GenericIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type BalanceQuantity5Choice struct {
	Qty   FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	Prtry GenericIdentification22            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type BasicCollateralValuation1Details struct {
	ValtnHrcut float64               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ValtnHrcut"`
	HrcutSrc   PartyIdentification15 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 HrcutSrc,omitempty"`
}

// Must match the pattern [A-Z]{1,6}
type CFIIdentifier string

type ClassificationType2Choice struct {
	ClssfctnFinInstrm CFIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ClssfctnFinInstrm"`
	AltrnClssfctn     GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AltrnClssfctn"`
}

// May be one of CASH, SECU
type CorporateActionOption5Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DtTm"`
}

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	SctiesBalCtdyRpt SecuritiesBalanceCustodyReportV04 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SctiesBalCtdyRpt"`
}

// May be one of YEAR, MNTH, QUTR, SEMI, WEEK
type EventFrequency3Code string

// May be one of YEAR, ADHO, MNTH, DAIL, INDA, WEEK
type EventFrequency4Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrument21 struct {
	ClssTp          Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ClssTp,omitempty"`
	SctiesForm      FormOfSecurity1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SctiesForm,omitempty"`
	DstrbtnPlcy     DistributionPolicy1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DstrbtnPlcy,omitempty"`
	PdctGrp         Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PdctGrp,omitempty"`
	UmbrllNm        Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 UmbrllNm,omitempty"`
	BaseCcy         ActiveCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BaseCcy,omitempty"`
	DnmtnCcy        ActiveCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DnmtnCcy,omitempty"`
	ReqdNAVCcy      ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ReqdNAVCcy,omitempty"`
	DualFndInd      bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DualFndInd,omitempty"`
	CtryOfDmcl      CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CtryOfDmcl,omitempty"`
	RegdDstrbtnCtry []CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 RegdDstrbtnCtry,omitempty"`
}

type FinancialInstrumentAttributes20 struct {
	PlcOfListg             MarketIdentification5                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PlcOfListg,omitempty"`
	DayCntBsis             InterestComputationMethodFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DayCntBsis,omitempty"`
	RegnForm               FormOfSecurity2Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 RegnForm,omitempty"`
	PmtFrqcy               Frequency3Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PmtFrqcy,omitempty"`
	PmtSts                 SecuritiesPaymentStatus2Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PmtSts,omitempty"`
	PmtDrctn               PaymentDirection2Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PmtDrctn,omitempty"`
	VarblRateChngFrqcy     Frequency3Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 VarblRateChngFrqcy,omitempty"`
	PrefToIncm             PreferenceToIncome2Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PrefToIncm,omitempty"`
	ClssfctnTp             ClassificationType2Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ClssfctnTp,omitempty"`
	OptnStyle              OptionStyle4Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 OptnStyle,omitempty"`
	OptnTp                 OptionType2Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 OptnTp,omitempty"`
	DnmtnCcy               ActiveOrHistoricCurrencyCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DnmtnCcy,omitempty"`
	CpnDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CpnDt,omitempty"`
	XpryDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 XpryDt,omitempty"`
	FltgRateFxgDt          ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FltgRateFxgDt,omitempty"`
	MtrtyDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 MtrtyDt,omitempty"`
	IsseDt                 ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 IsseDt,omitempty"`
	NxtCllblDt             ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 NxtCllblDt,omitempty"`
	PutblDt                ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PutblDt,omitempty"`
	DtdDt                  ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 DtdDt,omitempty"`
	FrstPmtDt              ISODate                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FrstPmtDt,omitempty"`
	PrvsFctr               float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PrvsFctr,omitempty"`
	CurFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CurFctr,omitempty"`
	NxtFctr                float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 NxtFctr,omitempty"`
	IntrstRate             float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 IntrstRate,omitempty"`
	NxtIntrstRate          float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 NxtIntrstRate,omitempty"`
	IndxRateBsis           float64                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 IndxRateBsis,omitempty"`
	CpnAttchdNb            Number2Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CpnAttchdNb,omitempty"`
	PoolNb                 Number2Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PoolNb,omitempty"`
	VarblRateInd           bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 VarblRateInd,omitempty"`
	CllblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CllblInd,omitempty"`
	PutblInd               bool                                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PutblInd,omitempty"`
	MktOrIndctvPric        PriceType1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 MktOrIndctvPric,omitempty"`
	ExrcPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ExrcPric,omitempty"`
	SbcptPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SbcptPric,omitempty"`
	ConvsPric              Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ConvsPric,omitempty"`
	StrkPric               Price2                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 StrkPric,omitempty"`
	MinNmnlQty             FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 MinNmnlQty,omitempty"`
	CtrctSz                FinancialInstrumentQuantity1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CtrctSz,omitempty"`
	UndrlygFinInstrmId     []SecurityIdentification14             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 UndrlygFinInstrmId,omitempty"`
	FinInstrmAttrAddtlDtls Max350Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FinInstrmAttrAddtlDtls,omitempty"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AmtsdVal"`
}

type ForeignExchangeTerms14 struct {
	UnitCcy  ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 UnitCcy"`
	QtdCcy   ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtdCcy"`
	XchgRate float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 XchgRate"`
	QtnDt    ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtnDt,omitempty"`
	QtgInstn PartyIdentification49Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtgInstn,omitempty"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type FormOfSecurity2Choice struct {
	Cd    FormOfSecurity1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type Frequency3Choice struct {
	Cd    EventFrequency3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type Frequency4Choice struct {
	Cd    EventFrequency4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Issr,omitempty"`
}

type GenericIdentification13 struct {
	Id      Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	SchmeNm Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SchmeNm,omitempty"`
	Issr    Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Issr"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SchmeNm,omitempty"`
}

type GenericIdentification21 struct {
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id,omitempty"`
}

type GenericIdentification22 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SchmeNm,omitempty"`
	Bal     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Bal"`
}

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014, NARR
type InterestComputationMethod2Code string

type InterestComputationMethodFormat1Choice struct {
	Cd    InterestComputationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type Intermediary21 struct {
	Id   PartyIdentification49Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Role Role2Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Role,omitempty"`
	Acct Account11                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Acct,omitempty"`
}

// May be one of FMCO, REGI, TRAG, INTR, DIST, CONC, UCL1, UCL2, TRAN
type InvestmentFundRole2Code string

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketIdentification1Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Desc"`
}

type MarketIdentification5 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id,omitempty"`
	Tp MarketType2Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp"`
}

type MarketIdentification6 struct {
	Id MarketIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id,omitempty"`
	Tp MarketType4Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp"`
}

type MarketType2Choice struct {
	Cd    MarketType5Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type MarketType4Choice struct {
	Cd    MarketType4Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

// May be one of FUND, LMAR, THEO, VEND
type MarketType4Code string

// May be one of OTCO, EXCH
type MarketType5Code string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Adr,omitempty"`
}

type Number2Choice struct {
	Shrt Exact3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Shrt"`
	Lng  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Lng"`
}

type Number3Choice struct {
	Shrt Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Shrt"`
	Lng  Exact5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Lng"`
}

// May be one of AMER, EURO
type OptionStyle2Code string

type OptionStyle4Choice struct {
	Cd    OptionStyle2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

// May be one of CALL, PUTO
type OptionType1Code string

type OptionType2Choice struct {
	Cd    OptionType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp"`
}

type Pagination struct {
	PgNb      Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PgNb"`
	LastPgInd bool            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 LastPgInd"`
}

type PartyIdentification15 struct {
	Ctry CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Ctry,omitempty"`
	Id   Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
}

type PartyIdentification36Choice struct {
	AnyBIC  AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AnyBIC"`
	PrtryId GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PrtryId"`
}

type PartyIdentification49Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 NmAndAdr"`
}

type PaymentDirection2Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Ind"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Ctry"`
}

// May be one of ORDN, PFRD
type PreferenceToIncome1Code string

type PreferenceToIncome2Choice struct {
	Cd    PreferenceToIncome1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type Price2 struct {
	Tp  YieldedOrValueType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp"`
	Val PriceRateOrAmountChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Val"`
}

type PriceInformation5 struct {
	Tp        TypeOfPrice4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp"`
	Val       PriceRateOrAmountOrUnknownChoice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Val"`
	ValTp     YieldedOrValueType1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ValTp"`
	SrcOfPric MarketIdentification6            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SrcOfPric,omitempty"`
	QtnDt     DateAndDateTimeChoice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtnDt,omitempty"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Amt"`
}

type PriceRateOrAmountOrUnknownChoice struct {
	Rate     float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Rate"`
	Amt      ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Amt"`
	UknwnInd bool                                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 UknwnInd"`
}

type PriceType1Choice struct {
	Mkt    Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Mkt"`
	Indctv Price2 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Indctv"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PurposeCode1Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification13           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type PurposeCode2Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 OrgnlAndCurFace"`
}

type QuantityAndAvailability1 struct {
	Qty       FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	AvlbtyInd bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AvlbtyInd"`
}

type QuantityBreakdown3 struct {
	LotNb    Number2Choice                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 LotNb,omitempty"`
	LotQty   FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 LotQty,omitempty"`
	LotDtTm  DateAndDateTimeChoice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 LotDtTm,omitempty"`
	LotPric  Price2                             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 LotPric,omitempty"`
	TpOfPric TypeOfPrice3Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TpOfPric,omitempty"`
}

type Role2Choice struct {
	Cd    InvestmentFundRole2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
	Txt   Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Txt"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat3Choice struct {
	Id      SafekeepingPlaceTypeAndText3             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TpAndId"`
	Prtry   GenericIdentification21                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
}

type SafekeepingPlaceTypeAndText3 struct {
	SfkpgPlcTp SafekeepingPlace3Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id,omitempty"`
}

type SecuritiesAccount11 struct {
	Id    Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Tp    PurposeCode1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp,omitempty"`
	Nm    Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Nm,omitempty"`
	Dsgnt Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Dsgnt,omitempty"`
}

type SecuritiesAccount14 struct {
	Id Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
	Tp PurposeCode2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Tp,omitempty"`
	Nm Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Nm,omitempty"`
}

// May be one of MARG, SHOR, ABRD, CEND, DVPA, PHYS
type SecuritiesAccountPurposeType1Code string

type SecuritiesBalanceCustodyReportV04 struct {
	Pgntn              Pagination                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Pgntn"`
	StmtGnlDtls        Statement21                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 StmtGnlDtls"`
	AcctOwnr           PartyIdentification36Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctOwnr,omitempty"`
	AcctSvcr           PartyIdentification49Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctSvcr,omitempty"`
	SfkpgAcct          SecuritiesAccount11             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SfkpgAcct"`
	IntrmyInf          []Intermediary21                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 IntrmyInf,omitempty"`
	BalForAcct         []AggregateBalanceInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BalForAcct,omitempty"`
	SubAcctDtls        []SubAccountIdentification17    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SubAcctDtls,omitempty"`
	AcctBaseCcyTtlAmts TotalValueInPageAndStatement1   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctBaseCcyTtlAmts,omitempty"`
}

// May be one of BLOK, AWAS, BLCA, BLOT, BLOV, BORR, BODE, BORE, COLI, COLO, LOAN, LODE, LORE, MARG, PECA, PEDA, PEND, PENR, PLED, REGO, RSTR, OTHR, TRAN, DRAW, WDOC, BTRA
type SecuritiesBalanceType12Code string

// May be one of COLA, OTHR, CLEN, DIRT, NOMI, SPOS, UNRG, ISSU, QUAS
type SecuritiesBalanceType7Code string

// May be one of FULL, NILL, PART
type SecuritiesPaymentStatus1Code string

type SecuritiesPaymentStatus2Choice struct {
	Cd    SecuritiesPaymentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Desc,omitempty"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SimpleIdentificationInformation struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Id"`
}

type Statement21 struct {
	RptNb      Number3Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 RptNb,omitempty"`
	QryRef     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QryRef,omitempty"`
	StmtId     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 StmtId,omitempty"`
	StmtDtTm   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 StmtDtTm"`
	Frqcy      Frequency4Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Frqcy"`
	UpdTp      UpdateType2Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 UpdTp"`
	StmtBsis   StatementBasis3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 StmtBsis"`
	ActvtyInd  bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ActvtyInd"`
	SubAcctInd bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SubAcctInd"`
}

// May be one of CONT, SETT, TRAD
type StatementBasis1Code string

type StatementBasis3Choice struct {
	Cd    StatementBasis1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

// May be one of COMP, DELT
type StatementUpdateType1Code string

type SubAccountIdentification17 struct {
	AcctOwnr      PartyIdentification36Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AcctOwnr,omitempty"`
	SfkpgAcct     SecuritiesAccount14             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SfkpgAcct"`
	ActvtyInd     bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ActvtyInd"`
	BalForSubAcct []AggregateBalanceInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 BalForSubAcct,omitempty"`
}

type SubBalanceInformation5 struct {
	SubBalTp           SubBalanceType5Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SubBalTp"`
	Qty                SubBalanceQuantity3Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	SubBalAddtlDtls    Max140Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 SubBalAddtlDtls,omitempty"`
	QtyBrkdwn          []QuantityBreakdown3            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtyBrkdwn,omitempty"`
	AddtlBalBrkdwnDtls []AdditionalBalanceInformation5 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 AddtlBalBrkdwnDtls,omitempty"`
}

type SubBalanceQuantity3Choice struct {
	Qty          FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Qty"`
	Prtry        GenericIdentification22            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
	QtyAndAvlbty QuantityAndAvailability1           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 QtyAndAvlbty"`
}

type SubBalanceType5Choice struct {
	Cd    SecuritiesBalanceType12Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type SubBalanceType6Choice struct {
	Cd    SecuritiesBalanceType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TotalValueInPageAndStatement1 struct {
	TtlHldgsValOfPg   AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TtlHldgsValOfPg,omitempty"`
	TtlHldgsValOfStmt AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TtlHldgsValOfStmt"`
	TtlBookValOfStmt  AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TtlBookValOfStmt,omitempty"`
	TtlElgblCollVal   AmountAndDirection6 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 TtlElgblCollVal,omitempty"`
}

// May be one of BIDE, OFFR, NAVL, CREA, CANC, INTE, SWNG, MIDD, RINV, SWIC, MRKT, INDC
type TypeOfPrice11Code string

// May be one of AVER
type TypeOfPrice14Code string

type TypeOfPrice3Choice struct {
	Cd    TypeOfPrice14Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type TypeOfPrice4Choice struct {
	Cd    TypeOfPrice11Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type UpdateType2Choice struct {
	Cd    StatementUpdateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Cd"`
	Prtry GenericIdentification20  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Prtry"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.002.001.04 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
