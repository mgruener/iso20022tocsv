// Code generated by main. DO NOT EDIT.

package semt_014_002_06_0

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcknowledgedAcceptedStatus25Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 NoSpcfdRsn"`
	Rsn        []AcknowledgementReason13 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rsn"`
}

type AcknowledgementReason13 struct {
	Cd          AcknowledgementReason16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AddtlRsnInf,omitempty"`
}

type AcknowledgementReason16Choice struct {
	Cd    AcknowledgementReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

// May be one of ADEA, SMPG, OTHR, CDCY, CDRG, CDRE, NSTP, RQWV, LATE
type AcknowledgementReason5Code string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type CancellationReason24 struct {
	Cd          CancellationReason37Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AddtlRsnInf,omitempty"`
}

type CancellationReason37Choice struct {
	Cd    CancelledStatusReason16Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

type CancellationStatus25Choice struct {
	NoSpcfdRsn NoReasonCode           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 NoSpcfdRsn"`
	Rsn        []CancellationReason24 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rsn"`
}

// May be one of SCEX, OTHR, CXLR, BYIY, CTHP, CANZ, CANT, CSUB, CANS, CANI, CORP
type CancelledStatusReason16Code string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 DtTm"`
}

type Document struct {
	IntraPosMvmntStsAdvc IntraPositionMovementStatusAdvice002V06 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 IntraPosMvmntStsAdvc"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FailingReason10Choice struct {
	Cd    FailingReason3Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

// May be one of AWMO, BYIY, CLAT, ADEA, CANR, CAIS, OBJT, AWSH, PHSE, STCD, DOCY, MLAT, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, INBC
type FailingReason3Code string

type FailingReason9 struct {
	Cd          FailingReason10Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AddtlRsnInf,omitempty"`
}

type FailingStatus11Choice struct {
	NoSpcfdRsn NoReasonCode     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 NoSpcfdRsn"`
	Rsn        []FailingReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rsn"`
}

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AmtsdVal"`
}

type GenericIdentification39 struct {
	Id   RestrictedFINMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Id"`
	Issr RestrictedFINMax8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Issr,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

type IntraPositionDetails50 struct {
	PoolId        RestrictedFINXMax16Text            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PoolId,omitempty"`
	AcctOwnr      PartyIdentification136Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AcctOwnr,omitempty"`
	SfkpgAcct     SecuritiesAccount30                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SfkpgAcct"`
	FinInstrmId   SecurityIdentification20           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 FinInstrmId"`
	SttlmQty      FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SttlmQty"`
	LotNb         GenericIdentification39            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 LotNb,omitempty"`
	SttlmDt       DateAndDateTime2Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SttlmDt"`
	AckdStsTmStmp ISODateTime                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AckdStsTmStmp,omitempty"`
	BalFr         SecuritiesBalanceType11Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 BalFr,omitempty"`
	BalTo         SecuritiesBalanceType11Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 BalTo,omitempty"`
}

type IntraPositionMovementStatusAdvice002V06 struct {
	TxId        TransactionIdentifications34         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 TxId"`
	PrcgSts     IntraPositionProcessingStatus8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PrcgSts,omitempty"`
	SttlmSts    SettlementStatus20Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SttlmSts,omitempty"`
	TxDtls      IntraPositionDetails50               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 TxDtls,omitempty"`
	SplmtryData []SupplementaryData1                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 SplmtryData,omitempty"`
}

type IntraPositionProcessingStatus8Choice struct {
	Rjctd      RejectionOrRepairStatus33Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rjctd"`
	Rpr        RejectionOrRepairStatus33Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rpr"`
	Canc       CancellationStatus25Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Canc"`
	AckdAccptd AcknowledgedAcceptedStatus25Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AckdAccptd"`
	Prtry      ProprietaryStatusAndReason7        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

// May be one of NORE
type NoReasonCode string

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Tp"`
}

type PartyIdentification136Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PrtryId"`
}

// May be one of AWMO, ADEA, CAIS, REFU, AWSH, PHSE, TAMM, DOCY, DOCC, BLOC, CHAS, NEWI, CLAC, MUNO, GLOB, PREA, PART, NMAS, NOFX, CMON, YCOL, COLL, DEPO, FLIM, INCA, LINK, FUTU, LACK, LALO, MONY, NCON, REFS, SDUT, BATC, CYCL, SBLO, CPEC, MINO, IAAD, OTHR, PHCK, BENO, BOTH, CLHT, DENO, DISA, DKNY, FROZ, LAAW, LATE, LIQU, PRCY, REGT, SETS, CERT, PRSY, INBC
type PendingReason10Code string

type PendingReason19 struct {
	Cd          PendingReason36Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AddtlRsnInf,omitempty"`
}

type PendingReason36Choice struct {
	Cd    PendingReason10Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

type PendingStatus45Choice struct {
	NoSpcfdRsn NoReasonCode      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 NoSpcfdRsn"`
	Rsn        []PendingReason19 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rsn"`
}

type ProprietaryReason5 struct {
	Rsn         GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rsn,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason7 struct {
	PrtrySts GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PrtrySts"`
	PrtryRsn []ProprietaryReason5    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PrtryRsn,omitempty"`
}

type RejectionAndRepairReason27Choice struct {
	Cd    RejectionReason29Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

type RejectionOrRepairReason27 struct {
	Cd          []RejectionAndRepairReason27Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AddtlRsnInf,omitempty"`
}

type RejectionOrRepairStatus33Choice struct {
	NoSpcfdRsn NoReasonCode                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 NoSpcfdRsn"`
	Rsn        []RejectionOrRepairReason27 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Rsn"`
}

// May be one of SAFE, ADEA, LATE, CAEV, DDAT, REFE, OTHR, DQUA, DSEC, INVB, INVL, INVN, MINO, MUNO, VALR
type RejectionReason29Code string

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax30Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax8Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

type SecuritiesAccount30 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Nm,omitempty"`
}

type SecuritiesBalanceType11Choice struct {
	Cd    SecuritiesBalanceType13Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

// May be one of BLOK, AWAS, AVAI, NOMI, PLED, REGO, RSTR, OTHR, SPOS, UNRG, ISSU, QUAS, COLA
type SecuritiesBalanceType13Code string

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Desc,omitempty"`
}

type SettlementStatus20Choice struct {
	Pdg   PendingStatus45Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Pdg"`
	Flng  FailingStatus11Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Flng"`
	Prtry ProprietaryStatusAndReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Prtry"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TransactionIdentifications34 struct {
	AcctOwnrTxId      RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AcctOwnrTxId"`
	AcctSvcrTxId      RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 MktInfrstrctrTxId,omitempty"`
	PrcrTxId          RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.014.002.06 PrcrTxId,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
