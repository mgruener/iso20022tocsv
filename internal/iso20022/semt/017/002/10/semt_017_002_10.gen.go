// Code generated by main. DO NOT EDIT.

package semt_017_002_10

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account30 struct {
	Id       AccountIdentification4       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	AcctSvcr PartyIdentification137Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctSvcr,omitempty"`
}

type AccountIdentification4 struct {
	Prtry SimpleIdentificationInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalReference12 struct {
	Ref     RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ref"`
	RefIssr PartyIdentification192  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 RefIssr,omitempty"`
	MsgNm   RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MsgNm,omitempty"`
}

type AmountAndDirection18 struct {
	Amt    RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Amt"`
	CdtDbt CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CdtDbt"`
}

type AmountAndDirection59 struct {
	Amt       RestrictedFINActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Amt"`
	CdtDbtInd CreditDebitCode                                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CdtDbtInd,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type BalanceQuantity12Choice struct {
	Qty   FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Qty"`
	Prtry GenericIdentification144            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type BeneficialOwnership5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of BLPA, BLCH
type BlockTrade1Code string

type BlockTrade5Choice struct {
	Cd    BlockTrade1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

// May be one of GROS, NETS
type CashSettlementSystem2Code string

type CashSettlementSystem5Choice struct {
	Cd    CashSettlementSystem2Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type CentralCounterPartyEligibility5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type ClosingBalance4 struct {
	ShrtLngInd ShortLong1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ShrtLngInd"`
	ClsgBal    ClosingBalance5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClsgBal"`
}

type ClosingBalance5Choice struct {
	Fnl    BalanceQuantity12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Fnl"`
	Intrmy BalanceQuantity12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Intrmy"`
}

type CorporateActionEventType101Choice struct {
	Cd    CorporateActionEventType33Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of ACTV, ATTI, BRUP, DFLT, BONU, EXRI, CAPD, CAPG, CAPI, DRCA, DVCA, CHAN, COOP, CLSA, CONS, CONV, CREV, DECR, DETI, DSCL, DVOP, DRIP, DRAW, DTCH, EXOF, REDM, MCAL, INCR, PPMT, INTR, RHDI, LIQU, EXTM, MRGR, NOOF, CERT, ODLT, OTHR, PARI, PCAL, PRED, PINK, PLAC, PDEF, PRIO, BPUT, REDO, REMK, BIDS, SPLR, RHTS, DVSC, SHPR, SMAL, SOFF, DVSE, SPLF, TREC, TEND, DLST, SUSP, EXWA, WTRC, WRTH, ACCU, MTNG, INFO, TNDP
type CorporateActionEventType33Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 DtTm"`
}

type DateTimePeriod1 struct {
	FrDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FrDtTm"`
	ToDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ToDtTm"`
}

// May be one of VARI
type DateType3Code string

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	SctiesTxPstngRpt SecuritiesTransactionPostingReport002V10 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SctiesTxPstngRpt"`
}

// May be one of YEAR, ADHO, MNTH, DAIL, INDA, WEEK
type EventFrequency4Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrument76 struct {
	SplmtryId   RestrictedFINXMax35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SplmtryId,omitempty"`
	SctiesForm  FormOfSecurity1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SctiesForm,omitempty"`
	ClssTp      RestrictedFINXMax35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClssTp,omitempty"`
	DstrbtnPlcy DistributionPolicy1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 DstrbtnPlcy,omitempty"`
	ClssfctnTp  SecurityClassificationType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClssfctnTp,omitempty"`
}

type FinancialInstrumentDetails37 struct {
	FinInstrmId                 SecurityIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FinInstrmId"`
	InvstmtFndsFinInstrmAttrbts FinancialInstrument76    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 InvstmtFndsFinInstrmAttrbts,omitempty"`
	PricDtls                    PriceInformation24       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PricDtls,omitempty"`
	SfkpgPlc                    SafeKeepingPlace4        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgPlc,omitempty"`
	OpngBal                     OpeningBalance4          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 OpngBal,omitempty"`
	ClsgBal                     ClosingBalance4          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClsgBal,omitempty"`
	Tx                          []Transaction113         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tx"`
}

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AmtsdVal"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type Frequency26Choice struct {
	Cd    EventFrequency4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type GenericIdentification144 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SchmeNm,omitempty"`
	Bal     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Bal"`
}

type GenericIdentification18 struct {
	Id      RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SchmeNm,omitempty"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Issr,omitempty"`
}

type GenericIdentification39 struct {
	Id   RestrictedFINMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Issr RestrictedFINMax8Text  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Issr,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SchmeNm,omitempty"`
}

type GenericIdentification85 struct {
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp"`
	Id RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type Intermediary45 struct {
	Id   PartyIdentification157 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Role Role7Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Role,omitempty"`
	Acct Account30              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Acct,omitempty"`
}

// May be one of FMCO, REGI, TRAG, INTR, DIST, CONC, UCL1, UCL2, TRAN
type InvestmentFundRole2Code string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterOfGuarantee5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

// May be one of CLNT, MAKT
type MarketClientSide1Code string

type MarketClientSide7Choice struct {
	Cd    MarketClientSide1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type MarketIdentification2Choice struct {
	MktIdrCd MICIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MktIdrCd"`
	Desc     RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Desc"`
}

type MarketIdentification90 struct {
	Id MarketIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id,omitempty"`
	Tp MarketType16Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp"`
}

type MarketIdentification91 struct {
	Id MarketIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id,omitempty"`
	Tp MarketType17Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp"`
}

type MarketType16Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type MarketType17Choice struct {
	Cd    MarketType4Code         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

// May be one of FUND, LMAR, THEO, VEND
type MarketType4Code string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress11 struct {
	Nm  RestrictedFINMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Nm"`
	Adr PostalAddress7         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Adr,omitempty"`
}

type NameAndAddress12 struct {
	Nm RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Nm"`
}

type NettingEligibility5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type Number3Choice struct {
	Shrt Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Shrt"`
	Lng  Exact5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Lng"`
}

type OpeningBalance4 struct {
	ShrtLngInd ShortLong1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ShrtLngInd"`
	OpngBal    OpeningBalance5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 OpngBal"`
}

type OpeningBalance5Choice struct {
	Frst   BalanceQuantity12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Frst"`
	Intrmy BalanceQuantity12Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Intrmy"`
}

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp"`
}

// May be one of A144, NRST, RSTR
type OwnershipLegalRestrictions1Code string

type Pagination1 struct {
	PgNb      Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PgNb"`
	LastPgInd bool            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LastPgInd"`
}

type PartyIdentification136Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrtryId"`
}

type PartyIdentification137Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AnyBIC"`
	PrtryId  GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrtryId"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 NmAndAdr"`
}

type PartyIdentification145Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AnyBIC"`
	NmAndAdr NameAndAddress12        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 NmAndAdr"`
	Ctry     CountryCode             `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ctry"`
}

type PartyIdentification152Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AnyBIC"`
	PrtryId  GenericIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrtryId"`
	NmAndAdr NameAndAddress11        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 NmAndAdr"`
}

type PartyIdentification156 struct {
	Id  PartyIdentification136Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
}

type PartyIdentification157 struct {
	Id  PartyIdentification137Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
}

type PartyIdentification191 struct {
	Id     PartyIdentification145Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	LEI    LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
	PrcgId RestrictedFINXMax16Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrcgId,omitempty"`
}

type PartyIdentification192 struct {
	Pty PartyIdentification152Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pty"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
}

type PartyIdentificationAndAccount190 struct {
	Id        PartyIdentification137Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	LEI       LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
	SfkpgAcct SecuritiesAccount30          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgAcct,omitempty"`
	PrcgId    RestrictedFINXMax16Text      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrcgId,omitempty"`
}

type Period2 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ToDt"`
}

type Period7Choice struct {
	FrDtTmToDtTm DateTimePeriod1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FrDtTmToDtTm"`
	FrDtToDt     Period2         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FrDtToDt"`
}

type PlaceOfClearingIdentification2 struct {
	Id  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id,omitempty"`
	LEI LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
}

type PlaceOfTradeIdentification2 struct {
	MktTpAndId MarketIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MktTpAndId,omitempty"`
	LEI        LEIIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
}

type PostalAddress7 struct {
	AdrLine []RestrictedFINMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AdrLine,omitempty"`
	PstCd   RestrictedFINMax8Text    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PstCd,omitempty"`
	TwnNm   RestrictedFINMax23Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TwnNm,omitempty"`
	Ctry    CountryCode              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ctry"`
}

type PriceInformation24 struct {
	Tp        TypeOfPrice49Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp"`
	ValTp     YieldedOrValueType1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ValTp"`
	Val       PriceRateOrAmountOrUnknown3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Val"`
	SrcOfPric MarketIdentification91            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SrcOfPric,omitempty"`
	QtnDt     DateAndDateTime2Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 QtnDt,omitempty"`
}

type PriceRateOrAmountOrUnknown3Choice struct {
	Rate     float64                                                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Rate"`
	Amt      RestrictedFINActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Amt"`
	UknwnInd bool                                                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 UknwnInd"`
}

// May be one of DISC, PREM, PARV
type PriceValueType1Code string

type PurposeCode8Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 OrgnlAndCurFace"`
}

// May be one of DELI, RECE
type ReceiveDelivery1Code string

type Registration11Choice struct {
	Cd    Registration1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of NREG, YREG
type Registration1Code string

type RepurchaseType24Choice struct {
	Cd    RepurchaseType9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of PAIR, PADJ, RATE, CALL, ROLP, CADJ, TOPU, WTHD
type RepurchaseType9Code string

type RestrictedFINActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type RestrictedFINActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax23Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax30Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax35Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax8Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,350}
type RestrictedFINXMax350Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,52}
type RestrictedFINXMax52Text string

type Restriction6Choice struct {
	Cd    OwnershipLegalRestrictions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type Role7Choice struct {
	Cd    InvestmentFundRole2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
	Txt   RestrictedFINXMax350Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Txt"`
}

type SafeKeepingPlace4 struct {
	SfkpgPlcFrmt SafekeepingPlaceFormat39Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgPlcFrmt,omitempty"`
	LEI          LEIIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LEI,omitempty"`
}

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE
type SafekeepingPlace3Code string

type SafekeepingPlaceFormat39Choice struct {
	Id      SafekeepingPlaceTypeAndText15          `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TpAndId"`
	Prtry   GenericIdentification85                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
}

type SafekeepingPlaceTypeAndText15 struct {
	SfkpgPlcTp SafekeepingPlace3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgPlcTp"`
	Id         RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id,omitempty"`
}

type SecuritiesAccount30 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Nm,omitempty"`
}

type SecuritiesAccount34 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Tp PurposeCode8Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp,omitempty"`
	Nm Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Nm,omitempty"`
}

type SecuritiesAccount40 struct {
	Id    RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
	Tp    GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Tp,omitempty"`
	Nm    Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Nm,omitempty"`
	Dsgnt RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Dsgnt,omitempty"`
}

// May be one of MARG, SHOR, ABRD, CEND, DVPA, PHYS
type SecuritiesAccountPurposeType1Code string

type SecuritiesRTGS5Choice struct {
	Ind   bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Ind"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type SecuritiesTransactionPostingReport002V10 struct {
	Pgntn         Pagination1                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pgntn"`
	StmtGnlDtls   Statement82                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 StmtGnlDtls"`
	AcctOwnr      PartyIdentification156         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctOwnr,omitempty"`
	SfkpgAcct     SecuritiesAccount40            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgAcct"`
	IntrmyInf     []Intermediary45               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 IntrmyInf,omitempty"`
	FinInstrmDtls []FinancialInstrumentDetails37 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FinInstrmDtls,omitempty"`
	SubAcctDtls   []SubAccountIdentification61   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SubAcctDtls,omitempty"`
}

// May be one of BSBK, BYIY, CNCB, COLI, COLO, CONV, FCTA, INSP, ISSU, MKDW, MKUP, NETT, NSYN, OWNE, OWNI, PAIR, PLAC, PORT, REAL, REDI, REDM, RELE, REPU, RODE, RVPO, SBBK, SBRE, SECB, SECL, SLRE, SUBS, SYND, TBAC, TRAD, TRPO, TRVO, TURN, CLAI, CORP, AUTO, SWIF, SWIT, ETFT, REBL, TRIN, TOUT
type SecuritiesTransactionType27Code string

type SecuritiesTransactionType58Choice struct {
	Cd    SecuritiesTransactionType27Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type SecurityClassificationType3Choice struct {
	CFI           CFIOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CFI"`
	AltrnClssfctn GenericIdentification39 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AltrnClssfctn"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Desc,omitempty"`
}

type SettlementDate20Choice struct {
	Dt   DateAndDateTime2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Dt"`
	DtCd SettlementDateCode9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 DtCd"`
}

// May be one of WISS
type SettlementDate4Code string

type SettlementDateCode9Choice struct {
	Cd    SettlementDate4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type SettlementDetails162 struct {
	SttlmTxCond    []SettlementTransactionCondition28Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SttlmTxCond,omitempty"`
	SttlgCpcty     SettlingCapacity8Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SttlgCpcty,omitempty"`
	StmpDtyTaxBsis GenericIdentification47                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 StmpDtyTaxBsis,omitempty"`
	SctiesRTGS     SecuritiesRTGS5Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SctiesRTGS,omitempty"`
	Regn           Registration11Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Regn,omitempty"`
	BnfclOwnrsh    BeneficialOwnership5Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 BnfclOwnrsh,omitempty"`
	CshClrSys      CashSettlementSystem5Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CshClrSys,omitempty"`
	TaxCpcty       TaxCapacityParty5Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TaxCpcty,omitempty"`
	RpTp           RepurchaseType24Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 RpTp,omitempty"`
	MktClntSd      MarketClientSide7Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MktClntSd,omitempty"`
	BlckTrad       BlockTrade5Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 BlckTrad,omitempty"`
	LglRstrctns    Restriction6Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LglRstrctns,omitempty"`
	SttlmSysMtd    SettlementSystemMethod5Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SttlmSysMtd,omitempty"`
	NetgElgblty    NettingEligibility5Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 NetgElgblty,omitempty"`
	CCPElgblty     CentralCounterPartyEligibility5Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CCPElgblty,omitempty"`
	LttrOfGrnt     LetterOfGuarantee5Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 LttrOfGrnt,omitempty"`
	PrtlSttlmInd   SettlementTransactionCondition5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrtlSttlmInd,omitempty"`
}

type SettlementOrCorporateActionEvent33Choice struct {
	SctiesTxTp    SecuritiesTransactionType58Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SctiesTxTp"`
	CorpActnEvtTp CorporateActionEventType101Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CorpActnEvtTp"`
}

type SettlementParties90 struct {
	Dpstry PartyIdentification191           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount190 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount190 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount190 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount190 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount190 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pty5,omitempty"`
}

// May be one of NSET, YSET
type SettlementSystemMethod1Code string

type SettlementSystemMethod5Choice struct {
	Cd    SettlementSystemMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of ADEA, ASGN, BUTC, CLEN, DLWM, DIRT, DRAW, EXER, EXPI, FRCL, KNOC, NOMC, NACT, PENS, PHYS, RHYP, RPTO, RESI, SHOR, SPDL, SPST, TRAN, TRIP, UNEX
type SettlementTransactionCondition10Code string

type SettlementTransactionCondition28Choice struct {
	Cd    SettlementTransactionCondition10Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of PART, NPAR, PARC, PARQ
type SettlementTransactionCondition5Code string

// May be one of SAGE, CUST, SPRI, RISP
type SettlingCapacity2Code string

type SettlingCapacity8Choice struct {
	Cd    SettlingCapacity2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SimpleIdentificationInformation1 struct {
	Id RestrictedFINXMax35Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Id"`
}

type Statement82 struct {
	RptNb      Number3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 RptNb,omitempty"`
	QryRef     RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 QryRef,omitempty"`
	StmtId     RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 StmtId,omitempty"`
	StmtPrd    Period7Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 StmtPrd"`
	Frqcy      Frequency26Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Frqcy,omitempty"`
	UpdTp      UpdateType16Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 UpdTp,omitempty"`
	StmtBsis   StatementBasis12Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 StmtBsis"`
	ActvtyInd  bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ActvtyInd"`
	SubAcctInd bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SubAcctInd"`
}

type StatementBasis12Choice struct {
	Cd    StatementBasis2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of SETT, TRAD
type StatementBasis2Code string

// May be one of COMP, DELT
type StatementUpdateType1Code string

type SubAccountIdentification61 struct {
	AcctOwnr      PartyIdentification156         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctOwnr,omitempty"`
	SfkpgAcct     SecuritiesAccount34            `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgAcct"`
	ActvtyInd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ActvtyInd"`
	FinInstrmDtls []FinancialInstrumentDetails37 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FinInstrmDtls,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TaxCapacityParty5Choice struct {
	Cd    TaxLiability1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

// May be one of PRIN, AGEN
type TaxLiability1Code string

type TradeDate9Choice struct {
	Dt   DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Dt"`
	DtCd TradeDateCode4Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 DtCd"`
}

type TradeDateCode4Choice struct {
	Cd    DateType3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type Transaction113 struct {
	AcctOwnrTxId                RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctOwnrTxId"`
	AcctSvcrTxId                RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctSvcrTxId,omitempty"`
	MktInfrstrctrTxId           RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MktInfrstrctrTxId,omitempty"`
	PrcrTxId                    RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PrcrTxId,omitempty"`
	TradId                      []RestrictedFINXMax52Text `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TradId,omitempty"`
	PoolId                      RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PoolId,omitempty"`
	CmonId                      RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CmonId,omitempty"`
	CorpActnEvtId               RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 CorpActnEvtId,omitempty"`
	TrptyAgtSvcPrvdrCollTxId    RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TrptyAgtSvcPrvdrCollTxId,omitempty"`
	ClntTrptyCollTxId           RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClntTrptyCollTxId,omitempty"`
	ClntCollInstrId             RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClntCollInstrId,omitempty"`
	TrptyAgtSvcPrvdrCollInstrId RestrictedFINXMax16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TrptyAgtSvcPrvdrCollInstrId,omitempty"`
	MstrRef                     RestrictedFINXMax35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MstrRef,omitempty"`
	ClntRef                     AdditionalReference12     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ClntRef,omitempty"`
	AcctOwnrLegId               RestrictedFINXMax35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctOwnrLegId,omitempty"`
	AcctSvcrLegId               RestrictedFINXMax35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcctSvcrLegId,omitempty"`
	TxDtls                      TransactionDetails131     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TxDtls,omitempty"`
	SplmtryData                 []SupplementaryData1      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SplmtryData,omitempty"`
}

// May be one of BOLE, CLAI, COLL, CORP, SETT
type TransactionActivity1Code string

type TransactionActivity4Choice struct {
	Cd    TransactionActivity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type TransactionDetails131 struct {
	TxActvty               TransactionActivity4Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TxActvty"`
	SttlmTxOrCorpActnEvtTp SettlementOrCorporateActionEvent33Choice `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SttlmTxOrCorpActnEvtTp,omitempty"`
	SctiesMvmntTp          ReceiveDelivery1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SctiesMvmntTp"`
	Pmt                    DeliveryReceiptType2Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Pmt"`
	SttlmParams            SettlementDetails162                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SttlmParams,omitempty"`
	PlcOfTrad              PlaceOfTradeIdentification2              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PlcOfTrad,omitempty"`
	SfkpgPlc               SafeKeepingPlace4                        `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SfkpgPlc,omitempty"`
	PlcOfClr               PlaceOfClearingIdentification2           `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PlcOfClr,omitempty"`
	PstngQty               Quantity10Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PstngQty"`
	NbOfDaysAcrd           float64                                  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 NbOfDaysAcrd,omitempty"`
	PstngAmt               AmountAndDirection18                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 PstngAmt,omitempty"`
	AcrdIntrstAmt          AmountAndDirection59                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AcrdIntrstAmt,omitempty"`
	TradDt                 TradeDate9Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TradDt,omitempty"`
	FctvSttlmDt            DateAndDateTime2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 FctvSttlmDt"`
	SttlmDt                SettlementDate20Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 SttlmDt,omitempty"`
	ValDt                  DateAndDateTime2Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ValDt,omitempty"`
	AckdStsTmStmp          ISODateTime                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 AckdStsTmStmp,omitempty"`
	MtchdStsTmStmp         ISODateTime                              `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 MtchdStsTmStmp,omitempty"`
	DlvrgSttlmPties        SettlementParties90                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties         SettlementParties90                      `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 RcvgSttlmPties,omitempty"`
	RvslInd                bool                                     `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 RvslInd,omitempty"`
	TxAddtlDtls            RestrictedFINXMax350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 TxAddtlDtls,omitempty"`
}

// May be one of BIDE, OFFR, NAVL, CREA, CANC, INTE, SWNG, MIDD, RINV, SWIC, MRKT, INDC, DDVR, ACTU
type TypeOfPrice17Code string

type TypeOfPrice49Choice struct {
	Cd    TypeOfPrice17Code       `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type UpdateType16Choice struct {
	Cd    StatementUpdateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Prtry"`
}

type YieldedOrValueType1Choice struct {
	Yldd  bool                `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 Yldd"`
	ValTp PriceValueType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:semt.017.002.10 ValTp"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
