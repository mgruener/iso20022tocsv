// Code generated by main. DO NOT EDIT.

package tsin_004_001_01

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IBAN"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Othr"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type AccountingAccount1 struct {
	Id           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	CostRefPttrn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CostRefPttrn,omitempty"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalInformation1 struct {
	InfTp  InformationType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InfTp"`
	InfVal Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InfVal"`
}

type AdditionalInformation6 struct {
	InfTp  ExternalInformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InfTp"`
	InfVal Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InfVal"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type Adjustment4 struct {
	Tp             AdjustmentType2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp"`
	OthrAdjstmntTp Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrAdjstmntTp"`
	Drctn          AdjustmentDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Drctn"`
	Amt            CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Amt"`
}

// May be one of ADDD, SUBS
type AdjustmentDirection1Code string

// May be one of REBA, DISC, CREN, SURC
type AdjustmentType2Code string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICIdentifier string

type BinaryFile1 struct {
	MIMETp         Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MIMETp,omitempty"`
	NcodgTp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NcodgTp,omitempty"`
	CharSet        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CharSet,omitempty"`
	InclBinryObjct Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InclBinryObjct,omitempty"`
}

type BranchAndFinancialInstitutionIdentification4 struct {
	FinInstnId FinancialInstitutionIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 FinInstnId"`
	BrnchId    BranchData2                         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BrnchId,omitempty"`
}

type BranchData2 struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id,omitempty"`
	Nm      Max140Text     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
	PstlAdr PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PstlAdr,omitempty"`
}

type CashAccount16 struct {
	Id  AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	Tp  CashAccountType2             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp,omitempty"`
	Ccy ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Ccy,omitempty"`
	Nm  Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
}

type CashAccountType2 struct {
	Cd    CashAccountType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

// May be one of CASH, CHAR, COMM, TAXE, CISH, TRAS, SACC, CACC, SVGS, ONDP, MGLD, NREX, MOMA, LOAN, SLRY, ODFT
type CashAccountType4Code string

type CategoryPurpose1Choice struct {
	Cd    ExternalCategoryPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

// May be one of POST, REGF, SHIP, CHAR, OTHR, PREM, PACK, PICK, SECU, INSU, MISC
type ChargeType17Code string

// May be one of SIGN, STDE, STOR, PACK, PICK, DNGR, SECU, INSU, COLF, CHOR, CHDE, AIRF, TRPT
type ChargeType8Code string

type ChargeTypeFormat3Choice struct {
	Cd    ChargeType17Code        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type ChargesDetails2 struct {
	Tp          ChargeType8Code   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp"`
	OthrChrgsTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrChrgsTp"`
	Amt         CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Amt"`
}

type ClearingSystemIdentification2Choice struct {
	Cd    ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type ClearingSystemMemberIdentification2 struct {
	ClrSysId ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClrSysId,omitempty"`
	MmbId    Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MmbId"`
}

type Consignment2 struct {
	Consgnr      TradeParty1       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Consgnr,omitempty"`
	Consgn       TradeParty1       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Consgn,omitempty"`
	TrnsprtMeans []TransportMeans3 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TrnsprtMeans,omitempty"`
}

type Contacts3 struct {
	NmPrfx    NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NmPrfx,omitempty"`
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
	PhneNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PhneNb,omitempty"`
	MobNb     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MobNb,omitempty"`
	FaxNb     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 FaxNb,omitempty"`
	EmailAdr  Max2048Text     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 EmailAdr,omitempty"`
	Othr      Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Othr,omitempty"`
	JobTitl   Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 JobTitl,omitempty"`
	Rspnsblty Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Rspnsblty,omitempty"`
	Dept      Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Dept,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type CountryCodeAndName1 struct {
	Cd CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd,omitempty"`
	Nm Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
}

// May be one of CRDT, DBIT
type CreditDebitCode string

type CreditorReferenceInformation2 struct {
	Tp  CreditorReferenceType2 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp,omitempty"`
	Ref Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Ref,omitempty"`
}

type CreditorReferenceType1Choice struct {
	Cd    DocumentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type CreditorReferenceType2 struct {
	CdOrPrtry CreditorReferenceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CdOrPrtry"`
	Issr      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr,omitempty"`
}

type CurrencyAndAmount struct {
	Value float64      `xml:",chardata"`
	Ccy   CurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type CurrencyCode string

type CurrencyReference2 struct {
	TrgtCcy     CurrencyCode               `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TrgtCcy"`
	SrcCcy      CurrencyCode               `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SrcCcy"`
	XchgRateInf []ExchangeRateInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 XchgRateInf,omitempty"`
}

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DtTm"`
}

type DateAndPlaceOfBirth struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtryOfBirth"`
}

type DateFormat4Choice struct {
	Dt         DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Dt"`
	NotSpcfdDt DateType6Code           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NotSpcfdDt"`
	Prtry      GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

// May be one of OPEN, UKWN, ONGO
type DateType6Code string

type DiscountOrChargeType1Choice struct {
	ChrgTp  ChargeTypeFormat3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ChrgTp"`
	DscntTp DiscountTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DscntTp"`
}

// May be one of QUAN, PROM, PRIC, SPAG, ENOR
type DiscountType1Code string

type DiscountTypeFormat1Choice struct {
	Cd    DiscountType1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type Document struct {
	FinInvc FinancialInvoiceV01 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 FinInvc"`
}

type DocumentAdjustment2 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CdtDbtInd"`
	Rsn       Max4Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Rsn,omitempty"`
	AddtlInf  Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AddtlInf,omitempty"`
}

type DocumentGeneralInformation2 struct {
	DocTp           ExternalDocumentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DocTp"`
	DocNb           Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DocNb"`
	SndrRcvrSeqId   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SndrRcvrSeqId,omitempty"`
	IsseDt          ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IsseDt,omitempty"`
	URL             Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 URL,omitempty"`
	AttchdBinryFile []BinaryFile1             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AttchdBinryFile,omitempty"`
}

type DocumentIdentification22 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DtOfIsse,omitempty"`
}

type DocumentIdentification23 struct {
	Id         Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	DtOfIsse   ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DtOfIsse,omitempty"`
	OrdrLineId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OrdrLineId,omitempty"`
}

type DocumentIdentification7 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DtOfIsse"`
}

// May be one of RADM, RPIN, FXDR, DISP, PUOR, SCOR
type DocumentType3Code string

type ExchangeRateInformation1 struct {
	XchgRate float64               `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 XchgRate,omitempty"`
	RateTp   ExchangeRateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 RateTp,omitempty"`
	CtrctId  Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtrctId,omitempty"`
}

// May be one of SPOT, SALE, AGRD
type ExchangeRateType1Code string

// Must be at least 1 items long
type ExternalAccountIdentification1Code string

// Must be at least 1 items long
type ExternalCategoryPurpose1Code string

// Must be at least 1 items long
type ExternalClearingSystemIdentification1Code string

// Must be at least 1 items long
type ExternalDocumentPurpose1Code string

// Must be at least 1 items long
type ExternalDocumentType1Code string

// Must be at least 1 items long
type ExternalFinancialInstitutionIdentification1Code string

// Must be at least 1 items long
type ExternalIncoterms1Code string

// Must be at least 1 items long
type ExternalInformationType1Code string

// Must be at least 1 items long
type ExternalLocalInstrument1Code string

// Must be at least 1 items long
type ExternalOrganisationIdentification1Code string

// Must be at least 1 items long
type ExternalPackagingType1Code string

// Must be at least 1 items long
type ExternalPersonIdentification1Code string

// Must be at least 1 items long
type ExternalServiceLevel1Code string

type FinancialCard1 struct {
	CdtLmtAmt     []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CdtLmtAmt,omitempty"`
	CdtAvlblAmt   []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CdtAvlblAmt,omitempty"`
	IntrstRatePct float64             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IntrstRatePct,omitempty"`
}

type FinancialIdentificationSchemeName1Choice struct {
	Cd    ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type FinancialInstitutionIdentification7 struct {
	BIC         BICIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BIC,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClrSysMmbId,omitempty"`
	Nm          Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
	PstlAdr     PostalAddress6                      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PstlAdr,omitempty"`
	Othr        GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Othr,omitempty"`
}

type FinancialInvoiceV01 struct {
	InvcHdr   InvoiceHeader1   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InvcHdr"`
	TradAgrmt TradeAgreement6  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TradAgrmt"`
	TradDlvry TradeDelivery1   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TradDlvry"`
	TradSttlm TradeSettlement1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TradSttlm"`
	LineItm   []LineItem10     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LineItm,omitempty"`
}

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr,omitempty"`
}

type GenericFinancialIdentification1 struct {
	Id      Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	SchmeNm FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr,omitempty"`
}

type GenericIdentification13 struct {
	Id      Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	SchmeNm Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SchmeNm,omitempty"`
	Issr    Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr"`
}

type GenericIdentification4 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	IdTp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IdTp"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Incoterms3 struct {
	IncotrmsCd Incoterms4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IncotrmsCd"`
	Lctn       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Lctn,omitempty"`
}

type Incoterms4Choice struct {
	Cd    ExternalIncoterms1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type InformationType1Choice struct {
	Cd    InformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

// May be one of INST, RELY
type InformationType1Code string

type InvoiceHeader1 struct {
	Id       Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id"`
	TpCd     ExternalDocumentType1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TpCd"`
	Nm       []Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
	IsseDtTm ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IsseDtTm"`
	Issr     TradeParty1                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Issr,omitempty"`
	LangCd   string                       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LangCd,omitempty"`
	CpyInd   bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CpyInd,omitempty"`
	DocPurp  ExternalDocumentPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DocPurp,omitempty"`
	InclNote []AdditionalInformation6     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InclNote,omitempty"`
}

type LegalOrganisation1 struct {
	Id Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id,omitempty"`
	Nm Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
}

type LineItem10 struct {
	Id                Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id,omitempty"`
	TradPdct          TradeProduct1              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TradPdct,omitempty"`
	BuyrOrdrId        DocumentIdentification23   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BuyrOrdrId,omitempty"`
	CtrctId           DocumentIdentification22   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtrctId,omitempty"`
	PurchsAcctgAcct   []AccountingAccount1       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PurchsAcctgAcct,omitempty"`
	NetPric           []CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NetPric,omitempty"`
	NetPricQty        Quantity4                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NetPricQty,omitempty"`
	NetPricAllwncChrg []LineItemAllowanceCharge1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NetPricAllwncChrg,omitempty"`
	NetWght           Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NetWght,omitempty"`
	GrssPric          []CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 GrssPric,omitempty"`
	GrssPricQty       Quantity4                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 GrssPricQty,omitempty"`
	GrssWght          Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 GrssWght,omitempty"`
	LogstcsChrg       []ChargesDetails2          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LogstcsChrg,omitempty"`
	Tax               []LineItemTax1             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tax,omitempty"`
	AllwncChrg        []LineItemAllowanceCharge1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AllwncChrg,omitempty"`
	FinAdjstmnt       []Adjustment4              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 FinAdjstmnt,omitempty"`
	BlldQty           Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BlldQty,omitempty"`
	PackgQty          float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PackgQty,omitempty"`
	PerPackgUnitQty   Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PerPackgUnitQty,omitempty"`
	Packgng           []Packaging1               `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Packgng,omitempty"`
	ChrgFreeQty       Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ChrgFreeQty,omitempty"`
	MeasrQtyStart     Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MeasrQtyStart,omitempty"`
	MeasrQtyEnd       Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MeasrQtyEnd,omitempty"`
	MeasrDtTmStart    ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MeasrDtTmStart,omitempty"`
	MeasrDtTmEnd      ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MeasrDtTmEnd,omitempty"`
	ShipTo            TradeParty1                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ShipTo,omitempty"`
	Incotrms          Incoterms3                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Incotrms,omitempty"`
	DlvryDtTm         ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DlvryDtTm,omitempty"`
	DlvryNoteId       DocumentIdentification22   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DlvryNoteId,omitempty"`
	MntrySummtn       LineItemMonetarySummation1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MntrySummtn,omitempty"`
	InclNote          []AdditionalInformation1   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InclNote,omitempty"`
}

type LineItemAllowanceCharge1 struct {
	ChrgInd  bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ChrgInd,omitempty"`
	ActlAmt  []CurrencyAndAmount         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ActlAmt,omitempty"`
	BsisQty  Quantity3                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BsisQty,omitempty"`
	ClctnPct float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClctnPct,omitempty"`
	SeqNb    float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SeqNb,omitempty"`
	Rsn      DiscountOrChargeType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Rsn,omitempty"`
}

type LineItemMonetarySummation1 struct {
	LineTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LineTtlAmt,omitempty"`
	AllwncTtlAmt  []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AllwncTtlAmt,omitempty"`
	ChrgTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ChrgTtlAmt,omitempty"`
	TaxTtlAmt     []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxTtlAmt,omitempty"`
	TaxBsisTtlAmt []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxBsisTtlAmt,omitempty"`
	InfAmt        []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InfAmt,omitempty"`
}

type LineItemTax1 struct {
	ClctdAmt  []CurrencyAndAmount  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClctdAmt,omitempty"`
	TpCd      TaxTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TpCd,omitempty"`
	TaxPtDt   ISODate              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxPtDt,omitempty"`
	ClctdRate float64              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClctdRate,omitempty"`
	CtgyCd    Max4Text             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtgyCd,omitempty"`
	CtgyNm    []Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtgyNm,omitempty"`
}

type LocalInstrument2Choice struct {
	Cd    ExternalLocalInstrument1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max4Text string

// Must be at least 1 items long
type Max70Text string

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type OrganisationIdentification6 struct {
	BIC  AnyBICIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BIC,omitempty"`
	Othr []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type Packaging1 struct {
	Tp ExternalPackagingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp,omitempty"`
	Nm Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
}

type Party8Choice struct {
	OrgId  OrganisationIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OrgId"`
	PrvtId PersonIdentification5       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PrvtId"`
}

type PartyIdentification45 struct {
	Id        Party8Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id,omitempty"`
	Nm        Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
	PstlAdr   PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PstlAdr,omitempty"`
	CtryOfRes CountryCode    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtryOfRes,omitempty"`
	CtctDtls  []Contacts3    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtctDtls,omitempty"`
}

type PaymentMeans1 struct {
	PmtTp        PaymentTypeInformation19                     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtTp"`
	PmtMtdCd     PaymentMethod4Code                           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtMtdCd"`
	PyeeCdtrAcct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PyeeCdtrAcct"`
	PyeeFI       BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PyeeFI"`
	PyerDbtrAcct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PyerDbtrAcct,omitempty"`
	PyerFI       BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PyerFI,omitempty"`
}

// May be one of CHK, TRF, DD, TRA
type PaymentMethod4Code string

type PaymentPeriod1 struct {
	Cd       PaymentTime1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	NbOfDays float64          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 NbOfDays,omitempty"`
}

type PaymentTerms3 struct {
	DueDt         ISODate           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DueDt,omitempty"`
	PmtPrd        PaymentPeriod1    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtPrd,omitempty"`
	Desc          []Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Desc,omitempty"`
	PrtlPmtPct    float64           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PrtlPmtPct,omitempty"`
	DrctDbtMndtId []Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DrctDbtMndtId,omitempty"`
	DscntAmt      CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DscntAmt,omitempty"`
	DscntPctRate  float64           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DscntPctRate,omitempty"`
	DscntBsisAmt  CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DscntBsisAmt,omitempty"`
	PnltyAmt      CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PnltyAmt,omitempty"`
	PnltyPctRate  float64           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PnltyPctRate,omitempty"`
	PnltyBsisAmt  CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PnltyBsisAmt,omitempty"`
}

// May be one of CASH, EMTD, EPRD, PRMD, IREC, PRMR, EPRR, EMTR
type PaymentTime1Code string

type PaymentTypeInformation19 struct {
	InstrPrty Priority2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InstrPrty,omitempty"`
	SvcLvl    ServiceLevel8Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SvcLvl,omitempty"`
	LclInstrm LocalInstrument2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LclInstrm,omitempty"`
	CtgyPurp  CategoryPurpose1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtgyPurp,omitempty"`
}

type Period1 struct {
	StartDt DateFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 StartDt"`
	EndDt   DateFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 EndDt"`
}

type PersonIdentification5 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AdrLine,omitempty"`
}

// May be one of HIGH, NORM
type Priority2Code string

type ProductCategory1 struct {
	Tp   ProductCategory1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp"`
	Ctgy Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Ctgy"`
}

type ProductCategory1Choice struct {
	StrdPdctCtgy ProductCategory1       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 StrdPdctCtgy"`
	OthrPdctCtgy GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrPdctCtgy"`
}

// May be one of HRTR, QOTA, PRGP, LOBU, GNDR
type ProductCategory1Code string

type ProductCharacteristics1 struct {
	Tp     ProductCharacteristics1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp"`
	Chrtcs Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Chrtcs"`
}

type ProductCharacteristics1Choice struct {
	StrdPdctChrtcs ProductCharacteristics1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 StrdPdctChrtcs"`
	OthrPdctChrtcs GenericIdentification4  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrPdctChrtcs"`
}

// May be one of BISP, CHNR, CLOR, EDSP, ENNR, OPTN, ORCR, PCTV, SISP, SIZE, SZRG, SPRM, STOR, VINR
type ProductCharacteristics1Code string

type ProductCharacteristics2 struct {
	Chrtc    ProductCharacteristics1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Chrtc,omitempty"`
	ValMeasr Quantity3                     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ValMeasr,omitempty"`
}

type ProductIdentifier2 struct {
	Tp  ProductIdentifier2Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tp"`
	Idr Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Idr"`
}

type ProductIdentifier2Choice struct {
	StrdPdctIdr ProductIdentifier2     `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 StrdPdctIdr"`
	OthrPdctIdr GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrPdctIdr"`
}

// May be one of BINR, COMD, EANC, HRTR, MANI, MODL, PART, QOTA, STYL, SUPI, UPCC
type ProductIdentifier2Code string

type Quantity3 struct {
	UnitOfMeasrCd   UnitOfMeasure4Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 UnitOfMeasrCd"`
	OthrUnitOfMeasr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrUnitOfMeasr"`
	Val             float64            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Val"`
}

type Quantity4 struct {
	UnitOfMeasrCd   UnitOfMeasure4Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 UnitOfMeasrCd"`
	OthrUnitOfMeasr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 OthrUnitOfMeasr"`
	Val             float64            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Val"`
	Fctr            Max15NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Fctr,omitempty"`
}

type ServiceLevel8Choice struct {
	Cd    ExternalServiceLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type SettlementAllowanceCharge1 struct {
	AllwncChrgInd bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AllwncChrgInd,omitempty"`
	ActlAmt       []CurrencyAndAmount         `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ActlAmt,omitempty"`
	Rsn           DiscountOrChargeType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Rsn,omitempty"`
}

type SettlementMonetarySummation1 struct {
	LineTtlAmt   []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LineTtlAmt,omitempty"`
	AllwncTtlAmt []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AllwncTtlAmt,omitempty"`
	TtlDscntAmt  []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TtlDscntAmt,omitempty"`
	ChrgTtlAmt   []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ChrgTtlAmt,omitempty"`
	TtlPrepdAmt  []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TtlPrepdAmt,omitempty"`
	TaxTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxTtlAmt,omitempty"`
	TaxBsisAmt   []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxBsisAmt,omitempty"`
	RndgAmt      []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 RndgAmt,omitempty"`
	GrdTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 GrdTtlAmt,omitempty"`
	InfAmt       []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InfAmt,omitempty"`
}

type SettlementSubTotalCalculatedTax1 struct {
	TpCd      Max4Text            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TpCd,omitempty"`
	CtgyCd    Max4Text            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtgyCd,omitempty"`
	ClctdAmt  []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClctdAmt,omitempty"`
	BsisAmt   []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BsisAmt,omitempty"`
	ClctdRate float64             `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClctdRate,omitempty"`
	XmptnRsn  TaxExemptionReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 XmptnRsn,omitempty"`
}

type SettlementTax1 struct {
	TpCd     TaxTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TpCd,omitempty"`
	ClctdAmt []CurrencyAndAmount  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ClctdAmt,omitempty"`
	BsisAmt  []CurrencyAndAmount  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BsisAmt,omitempty"`
	TaxPtDt  ISODate              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxPtDt,omitempty"`
}

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP
type TaxExemptReason1Code string

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP, OTHR
type TaxExemptReason2Code string

type TaxExemptionReason1 struct {
	Strd     TaxExemptReason2Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Strd"`
	AddtlInf Max350Text           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AddtlInf,omitempty"`
}

type TaxExemptionReasonFormatChoice struct {
	Ustrd Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Ustrd"`
	Strd  TaxExemptReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Strd"`
}

type TaxParty3 struct {
	TaxId       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxId,omitempty"`
	TaxTp       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxTp,omitempty"`
	RegnId      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 RegnId,omitempty"`
	TaxXmptnRsn []TaxExemptionReasonFormatChoice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxXmptnRsn,omitempty"`
}

// May be one of PROV, NATI, STAT, WITH, STAM, COAX, VATA, CUST, VATB
type TaxType15Code string

type TaxTypeFormat1Choice struct {
	Cd    TaxType15Code           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Prtry"`
}

type TradeAgreement6 struct {
	Buyr          TradeParty1                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Buyr"`
	Sellr         TradeParty1                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Sellr"`
	QtnDocId      DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 QtnDocId,omitempty"`
	CtrctDocId    DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtrctDocId,omitempty"`
	BuyrOrdrIdDoc DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BuyrOrdrIdDoc,omitempty"`
	AddtlRefDoc   []DocumentGeneralInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AddtlRefDoc,omitempty"`
	Incotrms      Incoterms3                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Incotrms,omitempty"`
}

type TradeDelivery1 struct {
	DlvryPrd    Period1                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DlvryPrd,omitempty"`
	DlvryDtTm   ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DlvryDtTm,omitempty"`
	ShipFr      TradeParty1              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ShipFr,omitempty"`
	ShipTo      TradeParty1              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ShipTo,omitempty"`
	UltmtShipTo TradeParty1              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 UltmtShipTo,omitempty"`
	DlvryNote   DocumentIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DlvryNote,omitempty"`
	Consgnmt    []Consignment2           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Consgnmt,omitempty"`
}

type TradeParty1 struct {
	PtyId  PartyIdentification45 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PtyId"`
	LglOrg LegalOrganisation1    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LglOrg,omitempty"`
	TaxPty []TaxParty3           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxPty,omitempty"`
}

type TradeProduct1 struct {
	Id         []ProductIdentifier2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id,omitempty"`
	Nm         Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
	Desc       Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Desc,omitempty"`
	CtryOfOrgn []CountryCodeAndName1      `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CtryOfOrgn,omitempty"`
	PdctChrtcs []ProductCharacteristics2  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PdctChrtcs,omitempty"`
	PdctCtgy   []ProductCategory1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PdctCtgy,omitempty"`
	GblSrlIdr  []Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 GblSrlIdr,omitempty"`
}

type TradeSettlement1 struct {
	DuePyblAmt        []CurrencyAndAmount                `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 DuePyblAmt,omitempty"`
	CdtrRef           []CreditorReferenceInformation2    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 CdtrRef,omitempty"`
	PmtRef            []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtRef,omitempty"`
	InvcCcyCd         CurrencyCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InvcCcyCd,omitempty"`
	Invcr             TradeParty1                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Invcr,omitempty"`
	Invcee            TradeParty1                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Invcee,omitempty"`
	Pyee              TradeParty1                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Pyee,omitempty"`
	Pyer              TradeParty1                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Pyer,omitempty"`
	TaxCcyXchg        CurrencyReference2                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 TaxCcyXchg,omitempty"`
	InvcCcyXchg       CurrencyReference2                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InvcCcyXchg,omitempty"`
	PmtCcyXchg        CurrencyReference2                 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtCcyXchg,omitempty"`
	PmtMeans          []PaymentMeans1                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtMeans,omitempty"`
	Tax               []SettlementTax1                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Tax,omitempty"`
	BllgPrd           Period1                            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 BllgPrd,omitempty"`
	AllwncChrg        []SettlementAllowanceCharge1       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AllwncChrg,omitempty"`
	SubTtlClctdTax    []SettlementSubTotalCalculatedTax1 `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 SubTtlClctdTax,omitempty"`
	LogstcsChrg       []ChargesDetails2                  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LogstcsChrg,omitempty"`
	PmtTerms          []PaymentTerms3                    `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PmtTerms,omitempty"`
	MntrySummtn       SettlementMonetarySummation1       `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MntrySummtn"`
	AdjstmntAmtAndRsn []DocumentAdjustment2              `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 AdjstmntAmtAndRsn,omitempty"`
	InvcRefdDoc       DocumentIdentification22           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 InvcRefdDoc,omitempty"`
	ProfrmInvcRefdDoc DocumentIdentification22           `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 ProfrmInvcRefdDoc,omitempty"`
	LttrOfCdtRefdDoc  DocumentIdentification7            `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 LttrOfCdtRefdDoc,omitempty"`
	FinCard           []FinancialCard1                   `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 FinCard,omitempty"`
	PurchsAcctgAcct   []AccountingAccount1               `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 PurchsAcctgAcct,omitempty"`
	IssrFactrgListId  []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IssrFactrgListId,omitempty"`
	IssrFactrgAgrmtId []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 IssrFactrgAgrmtId,omitempty"`
}

type TransportMeans3 struct {
	MdCd Max4Text  `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 MdCd,omitempty"`
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Id,omitempty"`
	Nm   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:tsin.004.001.01 Nm,omitempty"`
}

// May be one of KGM, EA, LTN, MTR, INH, LY, GLI, GRM, CMT, MTK, FOT, 1A, INK, FTK, MIK, ONZ, PTI, PT, QTI, QT, GLL, MMT, KTM, YDK, MMK, CMK, KMK, MMQ, CLT, LTR, LBR, STN, BLL, BX, BO, CT, CH, CR, INQ, MTQ, OZI, OZA, BG, BL, TNE
type UnitOfMeasure4Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
