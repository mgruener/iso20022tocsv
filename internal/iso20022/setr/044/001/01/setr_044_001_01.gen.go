// Code generated by main. DO NOT EDIT.

package setr_044_001_01

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AccountIdentification3Choice struct {
	IBAN      IBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IBAN"`
	BBAN      BBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BBAN"`
	UPIC      UPICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 UPIC"`
	PrtryAcct SimpleIdentificationInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtryAcct"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AffirmationReason1 struct {
	Cd          UnaffirmedReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type AffirmationReason1Choice struct {
	Rsn        []AffirmationReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
	NoSpcfdRsn NoReasonCode         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
}

type AffirmationStatus6Choice struct {
	Affrmd   ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Affrmd"`
	Uaffrmd  AffirmationReason1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Uaffrmd"`
	PrtrySts ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtrySts,omitempty"`
}

// May be one of ALG1
type AllegementReason1Code string

type AllegmentMatchingReason1 struct {
	Cd          AllegmentReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type AllegmentReason1Choice struct {
	Cd    AllegementReason1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type AlternatePartyIdentification5 struct {
	IdTp    IdentificationType40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Ctry"`
	AltrnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId"`
}

type AmountAndDirection29 struct {
	Amt                 ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Amt"`
	CdtDbtInd           CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CdtDbtInd,omitempty"`
	OrgnlCcyAndOrdrdAmt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OrgnlCcyAndOrdrdAmt,omitempty"`
	FXDtls              ForeignExchangeTerms18            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FXDtls,omitempty"`
}

type AmountOrRate2Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Amt"`
	Rate float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rate"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type AwaitingAffirmationReason1 struct {
	Cd          AwaitingAffirmationReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type AwaitingAffirmationReason1Choice struct {
	Cd    AwaitingAffirmationReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of WAFF
type AwaitingAffirmationReason1Code string

type AwaitingCancellationReason1 struct {
	Cd          AwaitingCancellationReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type AwaitingCancellationReason1Choice struct {
	Cd    AwaitingCancellationReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of WCAN
type AwaitingCancellationReason1Code string

// Must match the pattern [a-zA-Z0-9]{1,30}
type BBANIdentifier string

type BusinessProcessType1Choice struct {
	Cd    BusinessProcessType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of ISUP, NISP, PRAC, RSAL, PROP, THRU, IDEL, DPLX
type BusinessProcessType1Code string

// May be one of AFTX, ANNU, ISSU, AVMA, BOOK, YTNC, CHCL, CLOS, CMPD, CUYI, TRGR, GVEQ, FLAS, NVFL, LSCL, LSMT, LSQR, LSYR, LGAL, MARK, YTMA, NXRF, PNAV, NXPT, PRCL, PRYL, SEMI, SHLF, SPLL, TXQV, TTDT, TRYL, WRST
type CalculationType1Code string

// May be one of CFAV, CFST, CFCC
type CallIn1Code string

type CancellationProcessingStatus6Choice struct {
	CxlPdg    CancellationReason11Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CxlPdg"`
	CxlReqd   ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CxlReqd"`
	CxlCmpltd ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CxlCmpltd"`
	PrtrySts  ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtrySts,omitempty"`
}

type CancellationReason11Choice struct {
	NoSpcfdRsn NoReasonCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
	Rsn        []AwaitingCancellationReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
}

type CashAccountIdentification2Choice struct {
	IBAN  IBANIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IBAN"`
	Prtry Max34Text      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of CASH, MRGO, MRGC
type CashMarginOrder1Code string

// May be one of FLAT, PERU
type ChargeTaxBasis1Code string

type ChargeTaxBasisType1Choice struct {
	Cd    ChargeTaxBasis1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type Commission16 struct {
	Tp        CommissionType2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Tp"`
	Comssn    AmountOrRate2Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Comssn"`
	RcptId    PartyIdentification54   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RcptId,omitempty"`
	ClctnDt   ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ClctnDt,omitempty"`
	TtlComssn AmountAndDirection29    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TtlComssn,omitempty"`
	TtlVATAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TtlVATAmt,omitempty"`
	VATRate   float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 VATRate,omitempty"`
}

type CommissionType2Choice struct {
	Cd    CommissionType9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of CLDI, STEP, SOFT, PERN, FLAT, PERU, PWCD, PWEU, BRKR, DFDP, PBOC
type CommissionType9Code string

type ConfirmationParties4 struct {
	Invstr        []PartyIdentificationAndAccount79 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Invstr,omitempty"`
	Buyr          ConfirmationPartyDetails2         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Buyr,omitempty"`
	Brrwr         ConfirmationPartyDetails2         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Brrwr,omitempty"`
	Sellr         ConfirmationPartyDetails2         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Sellr,omitempty"`
	Lndr          ConfirmationPartyDetails2         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Lndr,omitempty"`
	BrkrOfCdt     ConfirmationPartyDetails3         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BrkrOfCdt,omitempty"`
	IntrdcgFirm   ConfirmationPartyDetails3         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IntrdcgFirm,omitempty"`
	StepInFirm    ConfirmationPartyDetails1         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 StepInFirm,omitempty"`
	StepOutFirm   ConfirmationPartyDetails1         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 StepOutFirm,omitempty"`
	ClrFirm       ConfirmationPartyDetails6         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ClrFirm,omitempty"`
	ExctgBrkr     ConfirmationPartyDetails6         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ExctgBrkr,omitempty"`
	AffrmgPty     ConfirmationPartyDetails3         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AffrmgPty,omitempty"`
	TradBnfcryPty ConfirmationPartyDetails3         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradBnfcryPty,omitempty"`
}

type ConfirmationPartyDetails1 struct {
	Id       PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	AltrnId  AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgId,omitempty"`
	AddtlInf PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
}

type ConfirmationPartyDetails2 struct {
	Id            PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	AltrnId       AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
	PrcgId        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgId,omitempty"`
	AddtlInf      PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
	InvstrCpcty   InvestorCapacity3Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 InvstrCpcty,omitempty"`
	TradgPtyCpcty TradingPartyCapacity1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradgPtyCpcty,omitempty"`
}

type ConfirmationPartyDetails3 struct {
	Id        PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	SfkpgAcct SecuritiesAccount3            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SfkpgAcct,omitempty"`
	CshDtls   AccountIdentification3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CshDtls,omitempty"`
	AltrnId   AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
	PtyCpcty  TradingPartyCapacity2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PtyCpcty,omitempty"`
}

type ConfirmationPartyDetails6 struct {
	Id                      PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	SfkpgAcct               SecuritiesAccount3            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SfkpgAcct,omitempty"`
	CshDtls                 AccountIdentification3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CshDtls,omitempty"`
	AltrnId                 AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
	PrcgId                  Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgId,omitempty"`
	AddtlInf                PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
	PtyCpcty                TradingPartyCapacity2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PtyCpcty,omitempty"`
	InvstrPrtcnAssoctnMmbsh bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 InvstrPrtcnAssoctnMmbsh,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type CurrencyToBuyOrSell1Choice struct {
	CcyToBuy  ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CcyToBuy"`
	CcyToSell ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CcyToSell"`
}

type DateAndDateTime1Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DtTm"`
}

type DateTimePeriodChoice struct {
	FrDtTm ISODateTime           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FrDtTm"`
	ToDtTm ISODateTime           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ToDtTm"`
	DtTmRg DateTimePeriodDetails `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DtTmRg"`
}

type DateTimePeriodDetails struct {
	FrDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FrDtTm"`
	ToDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ToDtTm"`
}

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	SctiesTradConfStsAdvc SecuritiesTradeConfirmationStatusAdviceV01 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SctiesTradConfStsAdvc"`
}

type DocumentNumber4Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 LngNb"`
	PrtryNb GenericIdentification38           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtryNb"`
}

// May be one of EUSI, EUSO, UKWN
type EUCapitalGain2Code string

type EUCapitalGainType2Choice struct {
	EUCptlGn EUCapitalGain2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 EUCptlGn"`
	Prtry    GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of ELIG, RETL, PROF
type Eligibility1Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

// Must be at least 1 items long
type ExternalTradeTransactionCondition1Code string

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AmtsdVal"`
}

type FinancialInstrumentQuantityChoice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AmtsdVal"`
}

type ForeignExchangeTerms18 struct {
	UnitCcy   ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 UnitCcy"`
	QtdCcy    ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 QtdCcy"`
	XchgRate  float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 XchgRate"`
	ConvtdAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ConvtdAmt"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SchmeNm,omitempty"`
}

type GenericIdentification29 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SchmeNm,omitempty"`
}

type GenericIdentification37 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Issr,omitempty"`
}

type GenericIdentification38 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SchmeNm,omitempty"`
}

// Must match the pattern [a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBANIdentifier string

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationReference11Choice struct {
	InstgPtyTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 InstgPtyTxId"`
	ExctgPtyTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ExctgPtyTxId"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MktInfrstrctrTxId"`
	ClntOrdrLkId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ClntOrdrLkId"`
	PoolId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PoolId"`
	BlckId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BlckId"`
	AllcnId           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AllcnId"`
	IndvAllcnId       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IndvAllcnId"`
	ScndryAllcnId     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ScndryAllcnId"`
	IndxId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IndxId"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CmonId"`
	CmplcId           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CmplcId"`
	CxlReqId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CxlReqId"`
	CollTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CollTxId"`
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type IdentificationType40Choice struct {
	Cd    TypeOfIdentification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification29   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type InstructionProcessingReason1Choice struct {
	Rsn        []RejectionReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
	NoSpcfdRsn NoReasonCode       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
}

type InstructionProcessingReason2Choice struct {
	Rsn        []RepairReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
	NoSpcfdRsn NoReasonCode    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
}

// May be one of CINT, XINT
type InterestType2Code string

type InvestorCapacity3Choice struct {
	Cd    Eligibility1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type Linkages18 struct {
	MsgNb DocumentNumber4Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MsgNb,omitempty"`
	Ref   IdentificationReference11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Ref"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MarketIdentification13 struct {
	Id MarketIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id,omitempty"`
	Tp MarketType12Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Tp,omitempty"`
}

type MarketIdentification3Choice struct {
	MktIdrCd MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MktIdrCd"`
	Desc     Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Desc"`
}

type MarketIdentification77 struct {
	Id MarketIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id,omitempty"`
	Tp MarketType11Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Tp,omitempty"`
}

type MarketType11Choice struct {
	Cd    MarketType6Code         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type MarketType12Choice struct {
	Cd    MarketType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of PRIM, SECM, OTCO, VARI, EXCH
type MarketType2Code string

// May be one of OTCO, VARI, EXCH
type MarketType6Code string

type MatchingReason1Choice struct {
	Rsn        []UnmatchedReason5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
	NoSpcfdRsn NoReasonCode       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
}

type MatchingReason3Choice struct {
	Rsn        []AllegmentMatchingReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
	NoSpcfdRsn NoReasonCode               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
}

// May be one of MACH, NMAT
type MatchingStatus1Code string

type MatchingStatus8Choice struct {
	Cd    MatchingStatus1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type MatchingStatus9Choice struct {
	Mtchd          ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Mtchd"`
	MtchdWthTlrnce ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MtchdWthTlrnce"`
	MtchgAllgd     MatchingReason3Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MtchgAllgd"`
	Umtchd         MatchingReason1Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Umtchd"`
	PrtrySts       ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtrySts,omitempty"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress13 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Nm"`
	Adr PostalAddress8 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Adr,omitempty"`
}

// May be one of NORE
type NoReasonCode string

type Order16 struct {
	BizPrcTp              BusinessProcessType1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BizPrcTp,omitempty"`
	OrdrId                []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OrdrId,omitempty"`
	ClntOrdrId            []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ClntOrdrId,omitempty"`
	ScndryClntOrdrId      []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ScndryClntOrdrId,omitempty"`
	ListId                []Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ListId,omitempty"`
	FinInstrmId           SecurityIdentification14           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FinInstrmId"`
	Sd                    Side3Code                          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Sd"`
	Pmt                   DeliveryReceiptType2Code           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pmt,omitempty"`
	TradTxTp              TradeType3Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradTxTp,omitempty"`
	TradTxCond            []TradeTransactionCondition4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradTxCond,omitempty"`
	PreAdvc               bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PreAdvc,omitempty"`
	PlcOfTrad             MarketIdentification77             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PlcOfTrad,omitempty"`
	OrdrBookgDt           ISODate                            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OrdrBookgDt,omitempty"`
	TradOrgtnDt           ISODateTime                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradOrgtnDt,omitempty"`
	TradDt                TradeDate4Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradDt"`
	PrcgDt                TradeDate4Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgDt,omitempty"`
	SttlmDt               SettlementDate8Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SttlmDt"`
	NAVDt                 DateAndDateTime1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NAVDt,omitempty"`
	PrtlFillDtls          []PartialFill1                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtlFillDtls,omitempty"`
	ConfQty               Quantity6Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ConfQty"`
	QtyBrkdwn             []QuantityBreakdown11              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 QtyBrkdwn,omitempty"`
	GrssTradAmt           AmountAndDirection29               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 GrssTradAmt,omitempty"`
	DealPric              Price4                             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DealPric"`
	TpOfPric              TypeOfPrice10Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TpOfPric,omitempty"`
	CshMrgn               CashMarginOrder1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CshMrgn,omitempty"`
	Comssn                Commission16                       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Comssn,omitempty"`
	NbOfDaysAcrd          float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NbOfDaysAcrd,omitempty"`
	GvUpNbOfDays          float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 GvUpNbOfDays,omitempty"`
	IntrstTp              InterestType2Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 IntrstTp,omitempty"`
	AcrdIntrstPctg        float64                            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AcrdIntrstPctg,omitempty"`
	TradRgltryCondsTp     TradeRegulatoryConditions1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradRgltryCondsTp,omitempty"`
	CcyToBuyOrSell        CurrencyToBuyOrSell1Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CcyToBuyOrSell,omitempty"`
	OrdrOrgtrElgblty      Eligibility1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OrdrOrgtrElgblty,omitempty"`
	PosFct                PositionEffect2Code                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PosFct,omitempty"`
	DerivCvrd             bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DerivCvrd,omitempty"`
	ChrgTaxBsisTp         ChargeTaxBasisType1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ChrgTaxBsisTp,omitempty"`
	CptlGnTp              EUCapitalGainType2Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CptlGnTp,omitempty"`
	MtchSts               MatchingStatus8Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MtchSts,omitempty"`
	CallInTp              CallIn1Code                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CallInTp,omitempty"`
	YldTp                 YieldCalculation2                  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 YldTp,omitempty"`
	Rptg                  []Reporting5Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rptg,omitempty"`
	AddtlPhysOrRegnDtls   RegistrationParameters3            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlPhysOrRegnDtls,omitempty"`
	AddtlTradInstrPrcgInf Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlTradInstrPrcgInf,omitempty"`
	AcrdIntrstAmt         AmountAndDirection29               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AcrdIntrstAmt,omitempty"`
}

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Tp"`
}

type PartialFill1 struct {
	ConfQty         Quantity6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ConfQty"`
	DealPric        Price4                  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DealPric"`
	TradDt          TradeDate4Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradDt,omitempty"`
	PlcOfTrad       MarketIdentification13  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PlcOfTrad,omitempty"`
	OrgnlOrdrdQty   QuantityOrAmount1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OrgnlOrdrdQty"`
	PrevslyExctdQty QuantityOrAmount1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrevslyExctdQty"`
	RmngQty         QuantityOrAmount1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RmngQty"`
	MtchIncrmtQty   QuantityOrAmount1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MtchIncrmtQty,omitempty"`
}

type PartyIdentification32Choice struct {
	BIC      AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BIC"`
	PrtryId  GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtryId"`
	NmAndAdr NameAndAddress13        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NmAndAdr"`
}

type PartyIdentification54 struct {
	BIC      AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BIC"`
	PrtryId  GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtryId"`
	NmAndAdr NameAndAddress13        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NmAndAdr,omitempty"`
}

type PartyIdentification55 struct {
	Id       PartyIdentification68Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	AltrnId  AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
}

type PartyIdentification68Choice struct {
	BIC      AnyBICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BIC"`
	NmAndAdr NameAndAddress13 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NmAndAdr"`
	Ctry     CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Ctry"`
}

type PartyIdentificationAndAccount34 struct {
	Id        PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	AddtlInf  Max350Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
	AltrnId   AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
	SfkpgAcct Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SfkpgAcct,omitempty"`
}

type PartyIdentificationAndAccount79 struct {
	Id        PartyIdentification32Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id,omitempty"`
	SfkpgAcct Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SfkpgAcct,omitempty"`
	CshAcct   CashAccountIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CshAcct,omitempty"`
	PrcgId    Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgId,omitempty"`
	CtryOfRes CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CtryOfRes,omitempty"`
	AddtlInf  PartyTextInformation1            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlInf,omitempty"`
	AltrnId   AlternatePartyIdentification5    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AltrnId,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RegnDtls,omitempty"`
}

type PartyTextInformation5 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PtyCtctDtls,omitempty"`
}

type PendingProcessing1Choice struct {
	NoSpcfdRsn NoReasonCode                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoSpcfdRsn"`
	Rsn        []AwaitingAffirmationReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn"`
}

// May be one of OPEN, CLOS, ROLL, FIFO, CLOA
type PositionEffect2Code string

type PostalAddress8 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Ctry"`
}

type Price4 struct {
	Val PriceRateOrAmountChoice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Val"`
	Tp  PriceValueType7Code     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Tp,omitempty"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Amt"`
}

// May be one of DISC, PREM, PARV, YIEL, SPRE, PEUN, ABSO, TEDP, TEDY, FICT, VACT, PRCT, ACTU
type PriceValueType7Code string

type ProcessingStatus17Choice struct {
	AckdAccptd           ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AckdAccptd"`
	AlrdyMtchdAndAffrmd  ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AlrdyMtchdAndAffrmd"`
	DfltActn             ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DfltActn"`
	Done                 ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Done"`
	ForcdRjctn           ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ForcdRjctn"`
	FullyExctdConfSnt    ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 FullyExctdConfSnt"`
	Futr                 ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Futr"`
	Gnrtd                ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Gnrtd"`
	InRpr                InstructionProcessingReason2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 InRpr"`
	NoInstr              ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 NoInstr"`
	OpnOrdr              ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OpnOrdr"`
	PdgPrcg              PendingProcessing1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PdgPrcg"`
	RcvdAtIntrmy         ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RcvdAtIntrmy"`
	Rjctd                InstructionProcessingReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rjctd"`
	SttlmInstrSnt        ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SttlmInstrSnt"`
	StgInstr             ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 StgInstr"`
	TradgSspdByStockXchg ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TradgSspdByStockXchg"`
	Trtd                 ProprietaryReason1                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Trtd"`
	PrtrySts             ProprietaryStatusAndReason1        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtrySts,omitempty"`
}

type ProprietaryReason1 struct {
	Rsn         GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rsn,omitempty"`
	AddtlRsnInf Max210Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason1 struct {
	PrtrySts GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtrySts"`
	PrtryRsn []ProprietaryReason1    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtryRsn,omitempty"`
}

type PurposeCode5Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OrgnlAndCurFace"`
}

type QuantityBreakdown11 struct {
	LotNb   GenericIdentification37            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 LotNb,omitempty"`
	LotQty  FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 LotQty,omitempty"`
	LotDtTm DateAndDateTime1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 LotDtTm,omitempty"`
	LotPric Price4                             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 LotPric,omitempty"`
}

type QuantityOrAmount1Choice struct {
	Qty FinancialInstrumentQuantityChoice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Qty"`
	Amt ActiveCurrencyAndAmount           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Amt"`
}

type RegistrationParameters3 struct {
	CertfctnId   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CertfctnId,omitempty"`
	CertfctnDtTm DateAndDateTime1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CertfctnDtTm,omitempty"`
	RegarAcct    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RegarAcct,omitempty"`
	CertNb       []SecuritiesCertificate3 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CertNb,omitempty"`
}

// May be one of ASTM, BUSE, CADE, COMC, DDAT, DDEA, DEPT, DMON, DQUA, DSEC, DTRD, FEEE, FORF, ICAG, ICUS, IEXE, IIND, INNA, NARR, NCRR, ODNP, PLCE, QUNP, REFE, CTRA, REPO, REPP, RERT, RSPR, SAFE, SETR, SETS, TERM, TNAR, TNIU, TQHI, TQNP, TXST, ULNK, VASU, INIR, OPNM, OPTY, UKWN, EXLI, INPR, PRIC, EQTY, SIDE, CADI, CPTY, DISC, DISE, RESU, XRAT, ACRU, GAMN, DFLT, FAIL, INDT, OTHR
type RejectionReason28Code string

type RejectionReason9 struct {
	Cd          RejectionReason9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type RejectionReason9Choice struct {
	Cd    RejectionReason28Code   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type RepairReason5 struct {
	Cd          RepairReason9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

// May be one of ADEA, BATC, BUSE, CADE, CASH, CASY, COMC, DDAT, DDEA, DEPT, DMON, DQUA, DSEC, DTRD, FEEE, FORF, ICAG, ICUS, IEXE, IIND, INNA, LEOG, NARR, NCRR, NRGM, NRGN, PHYS, PLCE, CTRA, REPO, REPP, RERT, RSPR, RTGS, SAFE, SETR, SETS, TERM, TXST, ULNK, VASU
type RepairReason7Code string

type RepairReason9Choice struct {
	Cd    RepairReason7Code       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type ReplacementProcessingStatus7Choice struct {
	Accptd            ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Accptd"`
	Cmpltd            ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cmpltd"`
	Dnd               ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Dnd"`
	InRpr             ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 InRpr"`
	PrtlRplcmntAccptd ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtlRplcmntAccptd"`
	Pdg               ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pdg"`
	RcvdAtIntrmy      ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RcvdAtIntrmy"`
	RcvdAtStockXchg   ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RcvdAtStockXchg"`
	Rjctd             ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Rjctd"`
	ModReqd           ProprietaryReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ModReqd"`
	PrtrySts          ProprietaryStatusAndReason1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrtrySts,omitempty"`
}

// May be one of STEX, REGU, DEFR
type Reporting2Code string

type Reporting5Choice struct {
	Cd    Reporting2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type SecuritiesAccount3 struct {
	Id Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Tp PurposeCode5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Tp,omitempty"`
	Nm Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Nm,omitempty"`
}

// May be one of MARG, SHOR, ABRD, CEND, DVPA, PHYS
type SecuritiesAccountPurposeType1Code string

type SecuritiesCertificate3 struct {
	Nb      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Nb"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Issr,omitempty"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SchmeNm,omitempty"`
}

type SecuritiesTradeConfirmationStatusAdviceV01 struct {
	Id              TransactiontIdentification4         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
	Refs            []Linkages18                        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Refs"`
	AffirmSts       AffirmationStatus6Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AffirmSts,omitempty"`
	PrcgSts         ProcessingStatus17Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PrcgSts,omitempty"`
	MtchgSts        MatchingStatus9Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 MtchgSts,omitempty"`
	RplcmntPrcgSts  ReplacementProcessingStatus7Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RplcmntPrcgSts,omitempty"`
	CxlPrcgSts      CancellationProcessingStatus6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CxlPrcgSts,omitempty"`
	PtyTradgDtls    Order16                             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PtyTradgDtls,omitempty"`
	CtrPtyTradgDtls Order16                             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 CtrPtyTradgDtls,omitempty"`
	ConfPties       []ConfirmationParties4              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ConfPties,omitempty"`
	DlvrgSttlmPties SettlementParties23                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 DlvrgSttlmPties,omitempty"`
	RcvgSttlmPties  SettlementParties23                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RcvgSttlmPties,omitempty"`
	SplmtryData     []SupplementaryData1                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 SplmtryData,omitempty"`
}

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Desc,omitempty"`
}

// May be one of REGU, CASH, NXTD, TONE, TTWO, TTRE, TFOR, TFIV, SELL, WDIS, WHID, TBAT, WISS
type SettlementDate5Code string

type SettlementDate8Choice struct {
	Dt DateAndDateTime1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Dt"`
	Cd SettlementDateCode5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
}

type SettlementDateCode5Choice struct {
	Cd    SettlementDate5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type SettlementParties23 struct {
	Dpstry PartyIdentification55           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Dpstry,omitempty"`
	Pty1   PartyIdentificationAndAccount34 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pty1,omitempty"`
	Pty2   PartyIdentificationAndAccount34 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pty2,omitempty"`
	Pty3   PartyIdentificationAndAccount34 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pty3,omitempty"`
	Pty4   PartyIdentificationAndAccount34 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pty4,omitempty"`
	Pty5   PartyIdentificationAndAccount34 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Pty5,omitempty"`
}

// May be one of BUYI, SELL, CROS, CRSH, CSHE, DEFI, OPPO, UNDI, TWOS, BUMI, SEPL, SESH, SSEX, LEND, BORW, OPEX
type Side3Code string

type SimpleIdentificationInformation2 struct {
	Id Max34Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Id"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TradeDate4Choice struct {
	Dt  DateAndDateTime1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Dt"`
	Val TradingDateCode1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Val"`
}

// May be one of SOLI, USOL
type TradeRegulatoryConditions1Code string

type TradeTransactionCondition4Choice struct {
	Cd    ExternalTradeTransactionCondition1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type TradeType3Choice struct {
	Cd    TradeType3Code          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of BSKT, INDX, IPOO, LIST, PRAL, PROG, TRAD, BRBR, RISK, VWAP, AGEN, GUAR, EMTR, ISSU, BOST, BOEN, LABO, BORE, OFIT, BOSU, FBBT, OPTN, FUOP, FUTR
type TradeType3Code string

// May be one of PRIN, CPRN, RISP, PROP, AGEN, CAGN, OAGN, PRAG, BAGN, INFI, MKTM, MLTF, RMKT, SINT, TAGT
type TradingCapacity4Code string

// May be one of AGEN, BAGN, CAGN, CPRN, OAGN, PRAG, PRIN
type TradingCapacity6Code string

// May be one of VARI
type TradingDate1Code string

type TradingDateCode1Choice struct {
	Cd    TradingDate1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type TradingPartyCapacity1Choice struct {
	Cd    TradingCapacity4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type TradingPartyCapacity2Choice struct {
	Cd    TradingCapacity6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type TransactiontIdentification4 struct {
	TxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 TxId"`
}

// May be one of ARNU, CHTY, CORP, FIIN, TXID
type TypeOfIdentification2Code string

type TypeOfPrice10Choice struct {
	Cd    TypeOfPrice3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of AVER, AVOV, GREX, NET2, NET1, PARV, RDAV
type TypeOfPrice3Code string

// Must match the pattern [0-9]{8,17}
type UPICIdentifier string

// May be one of NAFF
type UnaffirmedReason1Code string

type UnaffirmedReason2Choice struct {
	Cd    UnaffirmedReason1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

// May be one of ADEA, CADE, CHAR, CMIS, CPCA, DDAT, DDEA, DEAL, DELN, DEPT, DMON, DQUA, DSEC, DTRD, EXEC, FORF, LATE, LEOG, MCAN, NARR, PHYS, PLCE, PODU, REPA, REPO, REPP, RERT, RSPR, RTGS, SAFE, SETR, SETS, TERM, TXST, VASU, POSE, BORT, COAX, OTHI, BOFE, TACR, SDAT, COID, SCRA, ACRU, SHAI, ACRS, DEAS, CATI, TACS, DBNM, MADA, OLID, TRSA, TRTE, BOIA, OPLI, TRTR, LWCO, INTT, CUFC, LTME, ENFC, CLSE
type UnmatchedReason4Code string

type UnmatchedReason5 struct {
	Cd          UnmatchedReason7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	AddtlRsnInf Max210Text             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 AddtlRsnInf,omitempty"`
}

type UnmatchedReason7Choice struct {
	Cd    UnmatchedReason4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Prtry"`
}

type YieldCalculation2 struct {
	Val     float64              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 Val"`
	ClctnTp CalculationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ClctnTp"`
	RedPric Price4               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 RedPric,omitempty"`
	ValDt   ISODate              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ValDt,omitempty"`
	ValPrd  DateTimePeriodChoice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ValPrd,omitempty"`
	ClctnDt ISODate              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.044.001.01 ClctnDt,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
