// Code generated by main. DO NOT EDIT.

package setr_030_001_01

type AccountIdentification3Choice struct {
	IBAN      IBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 IBAN"`
	BBAN      BBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 BBAN"`
	UPIC      UPICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 UPIC"`
	PrtryAcct SimpleIdentificationInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrtryAcct"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// May be one of AFFI, NAFI
type AffirmationStatus1Code string

type AffirmationStatus7Choice struct {
	Cd    AffirmationStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}

type AlternatePartyIdentification5 struct {
	IdTp    IdentificationType40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 IdTp"`
	Ctry    CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Ctry"`
	AltrnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AltrnId"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern [a-zA-Z0-9]{1,30}
type BBANIdentifier string

type Clearing3 struct {
	ClrMmb  []PartyIdentificationAndAccount78 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ClrMmb"`
	ClrSgmt PartyIdentification35Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ClrSgmt,omitempty"`
}

// May be one of HOUS, CLIE, LIPR
type ClearingAccountType1Code string

// May be one of BUYI, SELL, LEND, BORW
type ClearingSide1Code string

type ConfirmationParties3 struct {
	AffrmgPty     ConfirmationPartyDetails4 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AffrmgPty"`
	Buyr          ConfirmationPartyDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Buyr,omitempty"`
	Brrwr         ConfirmationPartyDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Brrwr,omitempty"`
	Sellr         ConfirmationPartyDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Sellr,omitempty"`
	Lndr          ConfirmationPartyDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Lndr,omitempty"`
	TradBnfcryPty ConfirmationPartyDetails3 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 TradBnfcryPty,omitempty"`
}

type ConfirmationPartyDetails2 struct {
	Id            PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	AltrnId       AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AltrnId,omitempty"`
	PrcgId        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrcgId,omitempty"`
	AddtlInf      PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AddtlInf,omitempty"`
	InvstrCpcty   InvestorCapacity3Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 InvstrCpcty,omitempty"`
	TradgPtyCpcty TradingPartyCapacity1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 TradgPtyCpcty,omitempty"`
}

type ConfirmationPartyDetails3 struct {
	Id        PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	SfkpgAcct SecuritiesAccount3            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 SfkpgAcct,omitempty"`
	CshDtls   AccountIdentification3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 CshDtls,omitempty"`
	AltrnId   AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AltrnId,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AddtlInf,omitempty"`
	PtyCpcty  TradingPartyCapacity2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PtyCpcty,omitempty"`
}

type ConfirmationPartyDetails4 struct {
	Id        PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	SfkpgAcct SecuritiesAccount3            `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 SfkpgAcct,omitempty"`
	CshDtls   AccountIdentification3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 CshDtls,omitempty"`
	AltrnId   AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AltrnId,omitempty"`
	PrcgId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrcgId,omitempty"`
	AddtlInf  PartyTextInformation5         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AddtlInf,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type Document struct {
	SctiesTradConfRspn SecuritiesTradeConfirmationResponseV01 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 SctiesTradConfRspn"`
}

type DocumentNumber4Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 LngNb"`
	PrtryNb GenericIdentification38           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrtryNb"`
}

// May be one of ELIG, RETL, PROF
type Eligibility1Code string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type GenericIdentification29 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 SchmeNm,omitempty"`
}

type GenericIdentification38 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 SchmeNm,omitempty"`
}

// Must match the pattern [a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBANIdentifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type IdentificationReference8Choice struct {
	InstgPtyTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 InstgPtyTxId"`
	ExctgPtyTxId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ExctgPtyTxId"`
	MktInfrstrctrTxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 MktInfrstrctrTxId"`
	ClntOrdrLkId      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ClntOrdrLkId"`
	PoolId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PoolId"`
	BlckId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 BlckId"`
	AllcnId           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AllcnId"`
	IndvAllcnId       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 IndvAllcnId"`
	ScndryAllcnId     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ScndryAllcnId"`
	IndxId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 IndxId"`
	CmonId            Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 CmonId"`
	CmplcId           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 CmplcId"`
	CollTxId          Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 CollTxId"`
}

type IdentificationType40Choice struct {
	Cd    TypeOfIdentification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification29   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}

type InvestorCapacity3Choice struct {
	Cd    Eligibility1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}

type Linkages15 struct {
	MsgNb DocumentNumber4Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 MsgNb,omitempty"`
	Ref   IdentificationReference8Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Ref"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max210Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress13 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Nm"`
	Adr PostalAddress8 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Adr,omitempty"`
}

type PartyIdentification32Choice struct {
	BIC      AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 BIC"`
	PrtryId  GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrtryId"`
	NmAndAdr NameAndAddress13        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 NmAndAdr"`
}

type PartyIdentification35Choice struct {
	BIC     AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 BIC"`
	PrtryId GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrtryId"`
}

type PartyIdentificationAndAccount78 struct {
	Id       PartyIdentification32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	AltrnId  AlternatePartyIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AltrnId,omitempty"`
	Sd       ClearingSide1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Sd,omitempty"`
	ClrAcct  SecuritiesAccount20           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ClrAcct,omitempty"`
	PrcgId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PrcgId,omitempty"`
	AddtlInf PartyTextInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AddtlInf,omitempty"`
}

type PartyTextInformation1 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PtyCtctDtls,omitempty"`
	RegnDtls    Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 RegnDtls,omitempty"`
}

type PartyTextInformation5 struct {
	DclrtnDtls  Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 DclrtnDtls,omitempty"`
	PtyCtctDtls Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PtyCtctDtls,omitempty"`
}

type PostalAddress8 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Ctry"`
}

type PurposeCode5Choice struct {
	Cd    SecuritiesAccountPurposeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification38           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}

type SecuritiesAccount20 struct {
	Id Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	Tp ClearingAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Tp"`
	Nm Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Nm,omitempty"`
}

type SecuritiesAccount3 struct {
	Id Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	Tp PurposeCode5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Tp,omitempty"`
	Nm Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Nm,omitempty"`
}

// May be one of MARG, SHOR, ABRD, CEND, DVPA, PHYS
type SecuritiesAccountPurposeType1Code string

type SecuritiesTradeConfirmationResponseV01 struct {
	Id          TransactiontIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
	Refs        []Linkages15                `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Refs"`
	Sts         StatusAndReason10           `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Sts"`
	ClrDtls     Clearing3                   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ClrDtls,omitempty"`
	ConfPties   []ConfirmationParties3      `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 ConfPties,omitempty"`
	SplmtryData []SupplementaryData1        `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 SplmtryData,omitempty"`
}

type SimpleIdentificationInformation2 struct {
	Id Max34Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Id"`
}

type StatusAndReason10 struct {
	AffirmSts   AffirmationStatus7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AffirmSts"`
	UaffrmdRsn  UnaffirmedReason2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 UaffrmdRsn,omitempty"`
	AddtlRsnInf Max210Text               `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 AddtlRsnInf,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// May be one of PRIN, CPRN, RISP, PROP, AGEN, CAGN, OAGN, PRAG, BAGN, INFI, MKTM, MLTF, RMKT, SINT, TAGT
type TradingCapacity4Code string

// May be one of AGEN, BAGN, CAGN, CPRN, OAGN, PRAG, PRIN
type TradingCapacity6Code string

type TradingPartyCapacity1Choice struct {
	Cd    TradingCapacity4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}

type TradingPartyCapacity2Choice struct {
	Cd    TradingCapacity6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}

type TransactiontIdentification4 struct {
	TxId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 TxId"`
}

// May be one of ARNU, CHTY, CORP, FIIN, TXID
type TypeOfIdentification2Code string

// Must match the pattern [0-9]{8,17}
type UPICIdentifier string

// May be one of NAFF
type UnaffirmedReason1Code string

type UnaffirmedReason2Choice struct {
	Cd    UnaffirmedReason1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Cd"`
	Prtry GenericIdentification38 `xml:"urn:iso:std:iso:20022:tech:xsd:setr.030.001.01 Prtry"`
}
