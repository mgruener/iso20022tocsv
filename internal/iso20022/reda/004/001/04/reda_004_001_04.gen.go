// Code generated by main. DO NOT EDIT.

package reda_004_001_04

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 IBAN"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr"`
}

type AccountIdentificationAndName5 struct {
	Id AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	Nm Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Nm,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

type ActiveCurrencyAnd13DecimalAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AdditionalInformation15 struct {
	InfTp  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InfTp"`
	InfVal Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InfVal"`
}

type AdditionalReference10 struct {
	Ref     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Ref"`
	RefIssr PartyIdentification139 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RefIssr,omitempty"`
	MsgNm   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MsgNm,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// May be one of CAPL, INCO
type AnnualChargePaymentType1Code string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// May be one of FWNG, PREC
type BusinessDayConvention1Code string

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type CashAccount202 struct {
	Ccy        ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Ccy,omitempty"`
	PmryAcct   CashAccount203     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PmryAcct,omitempty"`
	ScndryAcct CashAccount203     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ScndryAcct,omitempty"`
}

type CashAccount203 struct {
	AcctId     AccountIdentificationAndName5 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AcctId"`
	Svcr       AnyBICDec2014Identifier       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Svcr,omitempty"`
	AcctTpDesc Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AcctTpDesc,omitempty"`
}

type ChargeType7Choice struct {
	Cd    InvestmentFundMiFIDFee1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

type ContactAttributes5 struct {
	Nm       Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Nm"`
	PstlAdr  PostalAddress1          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PstlAdr,omitempty"`
	PhneNb   PhoneNumber             `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PhneNb,omitempty"`
	FaxNb    PhoneNumber             `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FaxNb,omitempty"`
	EmailAdr Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 EmailAdr,omitempty"`
	URLAdr   Max2048Text             `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 URLAdr,omitempty"`
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AnyBIC,omitempty"`
	LEI      LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LEI,omitempty"`
}

type CostsAndCharges1 struct {
	ExAnteRefDt    ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ExAnteRefDt,omitempty"`
	ExPstRefDt     ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ExPstRefDt,omitempty"`
	IndvCostOrChrg []IndividualCostOrCharge1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 IndvCostOrChrg"`
	AddtlInf       AdditionalInformation15   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type DistributionStrategy1 struct {
	ExctnOnly                           DistributionStrategy1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ExctnOnly,omitempty"`
	ExctnWthApprprtnssTstOrNonAdvsdSvcs DistributionStrategy1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ExctnWthApprprtnssTstOrNonAdvsdSvcs,omitempty"`
	InvstmtAdvc                         DistributionStrategy1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstmtAdvc,omitempty"`
	PrtflMgmt                           DistributionStrategy1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PrtflMgmt,omitempty"`
	Othr                                OtherDistributionStrategy1  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

type DistributionStrategy1Choice struct {
	Cd    InvestorType3Code       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of CASH, UNIT, BOTH
type DividendPolicy1Code string

type Document struct {
	FndRefDataRpt FundReferenceDataReportV04 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FndRefDataRpt"`
}

// May be one of EUSI, EUSO, VARI
type EUSavingsDirective1Code string

// May be one of YEAR, SEMI, QUTR, MNTH, WEEK, DAIL, CLOS, TOMN, TOWK, TWMN
type EventFrequency5Code string

// May be one of ADHO, YEAR, DAIL, FOMN, TOMN, TOWK, TYEA, INDA, MNTH, ONDE, OVNG, QUTR, SEMI, TWMN, WEEK
type EventFrequency8Code string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

type ExtendedParty13 struct {
	PtyRole     GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PtyRole"`
	OthrPtyDtls ContactAttributes5      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrPtyDtls"`
}

type Extension1 struct {
	PlcAndNm Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PlcAndNm"`
	Txt      Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Txt"`
}

// Must be at least 1 items long
type ExternalAccountIdentification1Code string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrument66 struct {
	PhysBrScties       bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PhysBrScties,omitempty"`
	DmtrlsdBrScties    bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DmtrlsdBrScties,omitempty"`
	PhysRegdScties     bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PhysRegdScties,omitempty"`
	DmtrlsdRegdScties  bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DmtrlsdRegdScties,omitempty"`
	DstrbtnPlcy        DistributionPolicy1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DstrbtnPlcy,omitempty"`
	DvddPlcy           DividendPolicy1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DvddPlcy,omitempty"`
	DvddFrqcy          EventFrequency5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DvddFrqcy,omitempty"`
	RinvstmtFrqcy      EventFrequency5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RinvstmtFrqcy,omitempty"`
	FrntEndLd          bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FrntEndLd,omitempty"`
	BckEndLd           bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 BckEndLd,omitempty"`
	SwtchFee           bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SwtchFee,omitempty"`
	EUSvgsDrctv        EUSavingsDirective1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 EUSvgsDrctv,omitempty"`
	LnchDt             ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LnchDt,omitempty"`
	FndEndDt           ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FndEndDt,omitempty"`
	TermntnDt          ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TermntnDt,omitempty"`
	InitlOfferEndDt    ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InitlOfferEndDt,omitempty"`
	SspnsnStartDt      ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SspnsnStartDt,omitempty"`
	SspnsnEndDt        ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SspnsnEndDt,omitempty"`
	MtrtyDt            ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MtrtyDt,omitempty"`
	ClsdEndFnd         bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClsdEndFnd,omitempty"`
	Equlstn            bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Equlstn,omitempty"`
	TaxEffcntPdctElgbl bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TaxEffcntPdctElgbl,omitempty"`
	Authrsd            bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Authrsd,omitempty"`
	RDRCmplnt          bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RDRCmplnt,omitempty"`
	MgmtFeeSrc         AnnualChargePaymentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MgmtFeeSrc,omitempty"`
	PrfrmncFee         bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PrfrmncFee,omitempty"`
	AddtlInf           []AdditionalInformation15    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type Forms1 struct {
	ApplForm bool               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ApplForm"`
	SgntrTp  SignatureType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SgntrTp"`
}

type Frequency20Choice struct {
	Cd    EventFrequency8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of SUBS, RDIV, REDM, RGSV, WIDP
type FundOrderType10Code string

type FundOrderType5Choice struct {
	Cd    FundOrderType10Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

type FundParties1 struct {
	Guarntr ContactAttributes5 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Guarntr,omitempty"`
	Audtr   ContactAttributes5 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Audtr,omitempty"`
	Trstee  ContactAttributes5 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trstee,omitempty"`
	OthrPty []ExtendedParty13  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrPty,omitempty"`
}

type FundPaymentType1Choice struct {
	Cd    FundPaymentType1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of DRAF, CACC, CHEQ, CRDT, DDEB, CARD
type FundPaymentType1Code string

type FundReferenceDataReport2 struct {
	Id               Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id,omitempty"`
	Vrsn             MarketPracticeVersion1                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Vrsn,omitempty"`
	GnlRefDt         ISODate                                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 GnlRefDt"`
	SctyId           SecurityIdentification36                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SctyId"`
	FndPties         FundParties1                               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FndPties,omitempty"`
	MainFndOrdrDsk   OrderDesk1                                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MainFndOrdrDsk,omitempty"`
	FndMgmtCpny      ContactAttributes5                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FndMgmtCpny,omitempty"`
	FndDtls          FinancialInstrument66                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FndDtls,omitempty"`
	ValtnDealgChrtcs ValuationDealingProcessingCharacteristics3 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ValtnDealgChrtcs,omitempty"`
	InvstmtRstrctns  InvestmentRestrictions3                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstmtRstrctns,omitempty"`
	SbcptPrcgChrtcs  ProcessingCharacteristics4                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SbcptPrcgChrtcs,omitempty"`
	RedPrcgChrtcs    ProcessingCharacteristics7                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RedPrcgChrtcs,omitempty"`
	SwtchPrcgChrtcs  ProcessingCharacteristics6                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SwtchPrcgChrtcs,omitempty"`
	PlanChrtcs       []InvestmentPlanCharacteristics1           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PlanChrtcs,omitempty"`
	PmtInstrm        []PaymentInstrument16                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PmtInstrm,omitempty"`
	CshSttlmDtls     []CashAccount202                           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CshSttlmDtls,omitempty"`
	LclMktAnx        []LocalMarketAnnex3                        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LclMktAnx,omitempty"`
	TrgtMkt          TargetMarket1                              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TrgtMkt,omitempty"`
	DstrbtnStrtgy    DistributionStrategy1                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DstrbtnStrtgy,omitempty"`
	CostsAndChrgs    []CostsAndCharges1                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CostsAndChrgs,omitempty"`
	Xtnsn            []Extension1                               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Xtnsn,omitempty"`
}

type FundReferenceDataReportV04 struct {
	MsgId           MessageIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MsgId"`
	PrvsRef         []AdditionalReference10    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PrvsRef,omitempty"`
	RltdRef         AdditionalReference10      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RltdRef,omitempty"`
	FndRefDataRptId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 FndRefDataRptId,omitempty"`
	Rpt             []FundReferenceDataReport2 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Rpt"`
}

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Issr,omitempty"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Issr,omitempty"`
}

type GenericIdentification3 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Issr,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SchmeNm,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SchmeNm,omitempty"`
}

type GovernanceProcess1Choice struct {
	Cd    GovernanceProcessType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of BMIF, NINF, CMIF, AMIF
type GovernanceProcessType1Code string

// May be one of TRAL, TRNA, RFOD
type HoldingTransferable1Code string

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

type ISOYearMonth time.Time

func (t *ISOYearMonth) UnmarshalText(text []byte) error {
	return (*xsdGYearMonth)(t).UnmarshalText(text)
}
func (t ISOYearMonth) MarshalText() ([]byte, error) {
	return xsdGYearMonth(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

type IndividualCostOrCharge1 struct {
	CostTp        ChargeType7Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CostTp"`
	ExAnteOrExPst IntendedOrActual2Code            `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ExAnteOrExPst"`
	Amt           ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Amt,omitempty"`
	Rate          float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Rate,omitempty"`
	ClctnPrd      Period15                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClctnPrd,omitempty"`
	AddtlInf      AdditionalInformation15          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

// May be one of ANTE, POST
type IntendedOrActual2Code string

// May be one of FEND, DIST, GEAR, FES3, FES2, GOCF, GOCS, INCF, INCS, MANF, MANS, NETO, OOES, BENS, ENAC, ENFX, BEND, EXAC, ENBX, PENO, OTES, OCAS, PERF, PERS, REFV, TRSF
type InvestmentFundMiFIDFee1Code string

type InvestmentFundPlanType1Choice struct {
	Cd    InvestmentFundPlanType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification36     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of INVP, SWIP, WTHP
type InvestmentFundPlanType1Code string

type InvestmentNeed1Choice struct {
	Cd    InvestmentNeed1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of ESGO, ETHI, GRIN, ISLB, NSPE, OTHR, YSPE
type InvestmentNeed1Code string

type InvestmentPlanCharacteristics1 struct {
	PlanTp          InvestmentFundPlanType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PlanTp"`
	Frqcy           Frequency20Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Frqcy,omitempty"`
	TtlNbOfInstlmts float64                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TtlNbOfInstlmts,omitempty"`
	Qty             UnitsOrAmount1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Qty,omitempty"`
	PlanConttn      bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PlanConttn,omitempty"`
	AddtlSbcpt      bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlSbcpt,omitempty"`
	AddtlSbcptFctn  bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlSbcptFctn,omitempty"`
	AddtlInf        []AdditionalInformation15     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type InvestmentRestrictions3 struct {
	MinInitlSbcptAmt    ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinInitlSbcptAmt,omitempty"`
	MinInitlSbcptUnits  float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinInitlSbcptUnits,omitempty"`
	MinSbsqntSbcptAmt   ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinSbsqntSbcptAmt,omitempty"`
	MinSbsqntSbcptUnits float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinSbsqntSbcptUnits,omitempty"`
	MaxRedAmt           ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MaxRedAmt,omitempty"`
	MaxRedUnits         float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MaxRedUnits,omitempty"`
	MinRedPctg          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinRedPctg,omitempty"`
	OthrRedRstrctns     Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrRedRstrctns,omitempty"`
	MinSwtchSbcptAmt    ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinSwtchSbcptAmt,omitempty"`
	MinSwtchSbcptUnits  float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinSwtchSbcptUnits,omitempty"`
	MaxSwtchRedAmt      ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MaxSwtchRedAmt,omitempty"`
	MaxSwtchRedUnits    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MaxSwtchRedUnits,omitempty"`
	OthrSwtchRstrctns   Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrSwtchRstrctns,omitempty"`
	MinHldgAmt          ActiveCurrencyAndAmount   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinHldgAmt,omitempty"`
	MinHldgUnits        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinHldgUnits,omitempty"`
	MinHldgPrd          Max70Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinHldgPrd,omitempty"`
	HldgTrfbl           HoldingTransferable1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 HldgTrfbl,omitempty"`
	AddtlInf            []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type InvestorKnowledge1 struct {
	BsicInvstr    TargetMarket1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 BsicInvstr,omitempty"`
	InfrmdInvstr  TargetMarket1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InfrmdInvstr,omitempty"`
	AdvncdInvstr  TargetMarket1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AdvncdInvstr,omitempty"`
	ExprtInvstrDE TargetMarket1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ExprtInvstrDE,omitempty"`
	Othr          []OtherTargetMarketInvestorKnowledge1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

type InvestorRequirements1 struct {
	RtrPrflPrsrvtn     TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RtrPrflPrsrvtn,omitempty"`
	RtrPrflGrwth       TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RtrPrflGrwth,omitempty"`
	RtrPrflIncm        TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RtrPrflIncm,omitempty"`
	RtrPrflHdgg        TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RtrPrflHdgg,omitempty"`
	OptnOrLvrgdRtrPrfl TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OptnOrLvrgdRtrPrfl,omitempty"`
	RtrPrflOthr        TargetMarket2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RtrPrflOthr,omitempty"`
	RtrPrflPnsnSchmeDE TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RtrPrflPnsnSchmeDE,omitempty"`
	MinHldgPrd         TimeHorizon1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MinHldgPrd,omitempty"`
	MayBeTermntdEarly  TargetMarket1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MayBeTermntdEarly,omitempty"`
	SpcfcInvstmtNeed   InvestmentNeed1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SpcfcInvstmtNeed,omitempty"`
	Othr               []OtherInvestmentNeed1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

type InvestorType1 struct {
	InvstrTpRtl         TargetMarket1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstrTpRtl,omitempty"`
	InvstrTpPrfssnl     TargetMarket4Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstrTpPrfssnl,omitempty"`
	InvstrTpElgblCtrPty TargetMarket1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstrTpElgblCtrPty,omitempty"`
	Othr                []OtherTargetMarketInvestor1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

// May be one of BOT3, EPRO, PRF2
type InvestorType2Code string

// May be one of RETL, PRF2, NEI1, BOT2
type InvestorType3Code string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LegalStructure1Choice struct {
	Cd    LegalStructureFinancialInstrument1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of NUCI, SFUN, SSEC, UCIT, EXTC, UCMM, NUMM
type LegalStructureFinancialInstrument1Code string

type LocalMarketAnnex3 struct {
	Ctry            []CountryCode              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Ctry"`
	LclOrdrDsk      OrderDesk1                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LclOrdrDsk"`
	SbcptPrcgChrtcs ProcessingCharacteristics4 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SbcptPrcgChrtcs,omitempty"`
	RedPrcgChrtcs   ProcessingCharacteristics5 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RedPrcgChrtcs,omitempty"`
	SwtchPrcgChrtcs ProcessingCharacteristics6 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SwtchPrcgChrtcs,omitempty"`
	CshSttlmDtls    []CashAccount202           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CshSttlmDtls,omitempty"`
	AddtlInf        []AdditionalInformation15  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type LossBearing1 struct {
	NoCptlLoss     TargetMarket1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NoCptlLoss,omitempty"`
	LtdCptlLoss    TargetMarket1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LtdCptlLoss,omitempty"`
	LtdCptlLossLvl float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LtdCptlLossLvl,omitempty"`
	NoCptlGrnt     TargetMarket1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NoCptlGrnt,omitempty"`
	LossByndCptl   TargetMarket1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LossByndCptl,omitempty"`
	Othr           []OtherTargetMarketLossBearing1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

type MainFundOrderDeskLocation1 struct {
	Ctry         CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Ctry"`
	TmZoneOffSet UTCOffset1  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TmZoneOffSet"`
}

type MarketPracticeVersion1 struct {
	Nm Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Nm"`
	Dt ISOYearMonth `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Dt,omitempty"`
	Nb Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Nb,omitempty"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CreDtTm"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Adr,omitempty"`
}

type OrderDesk1 struct {
	OrdrDsk  ContactAttributes5        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OrdrDsk,omitempty"`
	ClsrDts  []ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClsrDts,omitempty"`
	AddtlInf []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherDistributionStrategy1 struct {
	DstrbtnStrtgyTp Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DstrbtnStrtgyTp,omitempty"`
	Trgt            DistributionStrategy1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trgt,omitempty"`
	AddtlInf        AdditionalInformation15     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Tp"`
}

type OtherInvestmentNeed1 struct {
	ClntObjctvsAndNeedsTp Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClntObjctvsAndNeedsTp,omitempty"`
	Trgt                  TargetMarket1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trgt,omitempty"`
	AddtlInf              AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherTargetMarket1 struct {
	TrgtMktTp Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TrgtMktTp"`
	AddtlInf  AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherTargetMarketInvestor1 struct {
	InvstrTp Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstrTp,omitempty"`
	Trgt     TargetMarket3Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trgt,omitempty"`
	AddtlInf AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherTargetMarketInvestorKnowledge1 struct {
	InvstrKnwldgTp Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstrKnwldgTp,omitempty"`
	Trgt           TargetMarket1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trgt,omitempty"`
	AddtlInf       AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherTargetMarketLossBearing1 struct {
	AbltyToBearLossesTp Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AbltyToBearLossesTp,omitempty"`
	Trgt                TargetMarket1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trgt,omitempty"`
	AddtlInf            AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type OtherTargetMarketRiskTolerance1 struct {
	RskTlrnceTp Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RskTlrnceTp,omitempty"`
	Trgt        TargetMarket1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Trgt,omitempty"`
	AddtlInf    AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type PartyIdentification125Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AnyBIC"`
	PrtryId  GenericIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NmAndAdr"`
}

type PartyIdentification139 struct {
	Pty PartyIdentification125Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Pty"`
	LEI LEIIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LEI,omitempty"`
}

type PaymentInstrument16 struct {
	OrdrTp   FundOrderType5Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OrdrTp"`
	InstrmTp FundPaymentType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InstrmTp"`
	AddtlInf []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type Period15 struct {
	StartDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 StartDt"`
	EndDt   ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 EndDt"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Ctry"`
}

// May be one of FORW, HIST
type PriceMethod1Code string

type ProcessingCharacteristics4 struct {
	DealgCcyAccptd     []ActiveCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCcyAccptd,omitempty"`
	InitlInvstmtAppl   Forms1                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InitlInvstmtAppl,omitempty"`
	SbsqntInvstmtAppl  Forms1                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SbsqntInvstmtAppl,omitempty"`
	AmtInd             bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AmtInd,omitempty"`
	UnitsInd           bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 UnitsInd,omitempty"`
	Rndg               RoundingDirection2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Rndg,omitempty"`
	MainFndOrdrDskLctn MainFundOrderDeskLocation1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MainFndOrdrDskLctn,omitempty"`
	DealgFrqcy         EventFrequency5Code        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcy,omitempty"`
	DealgFrqcyDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcyDesc,omitempty"`
	DealgCutOffTm      ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTm,omitempty"`
	DealgCutOffTmFrame TimeFrame4                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTmFrame,omitempty"`
	DealConfTm         ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTm,omitempty"`
	DealConfTmFrame    TimeFrame5                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTmFrame,omitempty"`
	LtdPrd             Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LtdPrd,omitempty"`
	SttlmCycl          TimeFrame7Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SttlmCycl,omitempty"`
	AddtlInf           []AdditionalInformation15  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type ProcessingCharacteristics5 struct {
	DealgCcyAccptd     []ActiveCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCcyAccptd,omitempty"`
	RedAuthstn         Forms1                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RedAuthstn,omitempty"`
	AmtInd             bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AmtInd,omitempty"`
	UnitsInd           bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 UnitsInd,omitempty"`
	Rndg               RoundingDirection2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Rndg,omitempty"`
	PctgInd            bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PctgInd,omitempty"`
	MainFndOrdrDskLctn MainFundOrderDeskLocation1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MainFndOrdrDskLctn,omitempty"`
	DealgFrqcy         EventFrequency5Code        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcy,omitempty"`
	DealgFrqcyDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcyDesc,omitempty"`
	DealgCutOffTm      ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTm,omitempty"`
	DealgCutOffTmFrame TimeFrame4                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTmFrame,omitempty"`
	DealConfTm         ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTm,omitempty"`
	DealConfTmFrame    TimeFrame5                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTmFrame,omitempty"`
	LtdPrd             Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LtdPrd,omitempty"`
	SttlmCycl          TimeFrame8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SttlmCycl,omitempty"`
	AddtlInf           []AdditionalInformation15  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type ProcessingCharacteristics6 struct {
	DealgCcyAccptd     []ActiveCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCcyAccptd,omitempty"`
	SwtchAuthstn       Forms1                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SwtchAuthstn,omitempty"`
	AmtInd             bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AmtInd,omitempty"`
	UnitsInd           bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 UnitsInd,omitempty"`
	Rndg               RoundingDirection2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Rndg,omitempty"`
	MainFndOrdrDskLctn MainFundOrderDeskLocation1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MainFndOrdrDskLctn,omitempty"`
	DealgFrqcy         EventFrequency5Code        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcy,omitempty"`
	DealgFrqcyDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcyDesc,omitempty"`
	DealgCutOffTm      ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTm,omitempty"`
	DealgCutOffTmFrame TimeFrame4                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTmFrame,omitempty"`
	DealConfTm         ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTm,omitempty"`
	DealConfTmFrame    TimeFrame5                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTmFrame,omitempty"`
	LtdPrd             Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LtdPrd,omitempty"`
	SttlmCycl          TimeFrame8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SttlmCycl,omitempty"`
	AddtlInf           []AdditionalInformation15  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type ProcessingCharacteristics7 struct {
	DealgCcyAccptd     []ActiveCurrencyCode       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCcyAccptd,omitempty"`
	RedAuthstn         Forms1                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RedAuthstn,omitempty"`
	AmtInd             bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AmtInd,omitempty"`
	UnitsInd           bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 UnitsInd,omitempty"`
	Rndg               RoundingDirection2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Rndg,omitempty"`
	PctgInd            bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PctgInd,omitempty"`
	MainFndOrdrDskLctn MainFundOrderDeskLocation1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 MainFndOrdrDskLctn,omitempty"`
	DealgFrqcy         EventFrequency5Code        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcy,omitempty"`
	DealgFrqcyDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgFrqcyDesc,omitempty"`
	DealgCutOffTm      ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTm,omitempty"`
	DealgCutOffTmFrame TimeFrame4                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealgCutOffTmFrame,omitempty"`
	DealConfTm         ISOTime                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTm,omitempty"`
	DealConfTmFrame    TimeFrame6                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DealConfTmFrame,omitempty"`
	LtdPrd             Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LtdPrd,omitempty"`
	SttlmCycl          TimeFrame8Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 SttlmCycl,omitempty"`
	AddtlInf           []AdditionalInformation15  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type QuotationType1Choice struct {
	Cd    QuotationType1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of ACTU, PRCT
type QuotationType1Code string

// May be one of RFOD
type ReferToFundOrderDesk1Code string

// May be one of HIGH, LOWW, MEDM
type RiskLevel1Code string

type RiskTolerance1 struct {
	RskTlrncePRIIPSMthdlgy             float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RskTlrncePRIIPSMthdlgy,omitempty"`
	RskTlrnceUCITSMthdlgy              float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RskTlrnceUCITSMthdlgy,omitempty"`
	RskTlrnceIntl                      RiskLevel1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RskTlrnceIntl,omitempty"`
	RskTlrnceForNonPRIIPSAndNonUCITSES float64                           `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RskTlrnceForNonPRIIPSAndNonUCITSES,omitempty"`
	NotForInvstrsWthTheLwstRskTlrnceDE TargetMarket2Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NotForInvstrsWthTheLwstRskTlrnceDE,omitempty"`
	Othr                               []OtherTargetMarketRiskTolerance1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

// May be one of RDUP, RDWN
type RoundingDirection2Code string

type SecurityClassificationType2Choice struct {
	CFI           CFIOct2015Identifier   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CFI"`
	AltrnClssfctn GenericIdentification3 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AltrnClssfctn"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Desc,omitempty"`
}

type SecurityIdentification36 struct {
	Id                 SecurityIdentification19          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Id"`
	Nm                 Max350Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Nm"`
	ShrtNm             Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ShrtNm,omitempty"`
	ClssTp             Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClssTp,omitempty"`
	UmbrllNm           Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 UmbrllNm,omitempty"`
	NewUmbrll          bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NewUmbrll,omitempty"`
	ClssfctnTp         SecurityClassificationType2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClssfctnTp,omitempty"`
	BaseCcy            ActiveCurrencyCode                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 BaseCcy,omitempty"`
	CtryOfDmcl         CountryCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 CtryOfDmcl,omitempty"`
	RegdDstrbtnCtry    []CountryCode                     `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RegdDstrbtnCtry,omitempty"`
	LglStr             LegalStructure1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LglStr,omitempty"`
	Issr               ContactAttributes5                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Issr,omitempty"`
	IssrPdctGovncPrc   GovernanceProcess1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 IssrPdctGovncPrc,omitempty"`
	PdctCtgy           Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PdctCtgy,omitempty"`
	QtnTp              QuotationType1Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 QtnTp,omitempty"`
	LvrgdOrCntgntLblty bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 LvrgdOrCntgntLblty,omitempty"`
	AddtlInf           []AdditionalInformation15         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

// May be one of ORIG, DIGI, ELEC, NONE
type SignatureType1Code string

type TargetMarket1 struct {
	InvstrTp            InvestorType1         `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 InvstrTp,omitempty"`
	KnwldgAndOrExprnc   InvestorKnowledge1    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 KnwldgAndOrExprnc,omitempty"`
	AbltyToBearLosses   LossBearing1          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AbltyToBearLosses,omitempty"`
	RskTlrnce           RiskTolerance1        `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RskTlrnce,omitempty"`
	ClntObjctvsAndNeeds InvestorRequirements1 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ClntObjctvsAndNeeds,omitempty"`
	Othr                []OtherTargetMarket1  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr,omitempty"`
}

type TargetMarket1Choice struct {
	Cd    TargetMarket1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

// May be one of YSCO, NEUT, NSCO
type TargetMarket1Code string

// May be one of NEUT, YSCO
type TargetMarket2Code string

type TargetMarket3Choice struct {
	Tp    InvestorType2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Tp"`
	Othr  TargetMarket1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

type TargetMarket4Choice struct {
	Tp   InvestorType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Tp"`
	Othr TargetMarket1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Othr"`
}

// May be one of LONG, MEDM, NEUT, SHOR, VSHT, HOLD
type TimeFrame1Code string

type TimeFrame4 struct {
	OthrTmFrameDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrTmFrameDesc,omitempty"`
	TMns                float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TMns,omitempty"`
	NonWorkgDayAdjstmnt BusinessDayConvention1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NonWorkgDayAdjstmnt,omitempty"`
	RefrToOrdrDsk       ReferToFundOrderDesk1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RefrToOrdrDsk,omitempty"`
}

type TimeFrame5 struct {
	OthrTmFrameDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrTmFrameDesc,omitempty"`
	TPlus               float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TPlus,omitempty"`
	NonWorkgDayAdjstmnt BusinessDayConvention1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NonWorkgDayAdjstmnt,omitempty"`
	RefrToOrdrDsk       ReferToFundOrderDesk1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RefrToOrdrDsk,omitempty"`
}

type TimeFrame6 struct {
	OthrTmFrameDesc     Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 OthrTmFrameDesc,omitempty"`
	TPlus               float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TPlus,omitempty"`
	NonWorkgDayAdjstmnt BusinessDayConvention1Code `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NonWorkgDayAdjstmnt,omitempty"`
	RefrToOrdrDsk       ReferToFundOrderDesk1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RefrToOrdrDsk,omitempty"`
}

type TimeFrame6Choice struct {
	Cd    TimeFrame1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prtry"`
}

type TimeFrame7Choice struct {
	TPlus  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TPlus"`
	Prepmt bool    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Prepmt"`
}

type TimeFrame8Choice struct {
	TPlus float64 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TPlus"`
	RPlus float64 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 RPlus"`
}

type TimeHorizon1Choice struct {
	NbOfYrs float64          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NbOfYrs"`
	TmFrame TimeFrame6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 TmFrame"`
}

type UTCOffset1 struct {
	Sgn     bool    `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Sgn"`
	NbOfHrs ISOTime `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 NbOfHrs"`
}

type UnitsOrAmount1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Amt"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 Unit"`
}

type ValuationDealingProcessingCharacteristics3 struct {
	ValtnFrqcy     EventFrequency5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ValtnFrqcy,omitempty"`
	ValtnFrqcyDesc Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ValtnFrqcyDesc,omitempty"`
	ValtnTm        ISOTime                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 ValtnTm,omitempty"`
	DcmlstnUnits   float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DcmlstnUnits,omitempty"`
	DcmlstnPric    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DcmlstnPric,omitempty"`
	DualFndInd     bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 DualFndInd,omitempty"`
	PricMtd        PriceMethod1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PricMtd,omitempty"`
	PricCcy        []ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 PricCcy,omitempty"`
	AddtlInf       []AdditionalInformation15 `xml:"urn:iso:std:iso:20022:tech:xsd:reda.004.001.04 AddtlInf,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYearMonth time.Time

func (t *xsdGYearMonth) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYearMonth) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
