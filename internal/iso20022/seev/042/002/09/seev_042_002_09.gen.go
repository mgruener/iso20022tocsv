// Code generated by main. DO NOT EDIT.

package seev_042_002_09

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AccountIdentification54 struct {
	SfkpgAcct         RestrictedFINXMax35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SfkpgAcct"`
	AcctOwnr          PartyIdentification136Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AcctOwnr,omitempty"`
	SfkpgPlc          SafekeepingPlaceFormat32Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SfkpgPlc,omitempty"`
	CorpActnEvtAndBal []CorporateActionEventAndBalance18 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CorpActnEvtAndBal,omitempty"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AmountPrice5 struct {
	AmtPricTp AmountPriceType1Code                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AmtPricTp"`
	PricVal   RestrictedFINActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PricVal"`
}

// May be one of ACTU, DISC, PLOT, PREM
type AmountPriceType1Code string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type BalanceFormat7Choice struct {
	Bal         SignedQuantityFormat8 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Bal"`
	ElgblBal    SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ElgblBal"`
	NotElgblBal SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NotElgblBal"`
}

type CancelledReason11Choice struct {
	Cd    CancelledStatusReason6Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type CancelledStatus15Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NoSpcfdRsn"`
	Rsn        []CancelledStatusReason14 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Rsn"`
}

type CancelledStatusReason14 struct {
	RsnCd       CancelledReason11Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RsnCd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AddtlRsnInf,omitempty"`
}

// May be one of CANI, CANO, CANS, CSUB, OTHR
type CancelledStatusReason6Code string

type CorporateActionBalance42 struct {
	TtlElgblBal      Quantity22Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlElgblBal"`
	UinstdBal        BalanceFormat7Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 UinstdBal"`
	TtlInstdBalDtls  InstructedBalance12   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlInstdBalDtls"`
	BlckdBal         SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 BlckdBal,omitempty"`
	BrrwdBal         SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 BrrwdBal,omitempty"`
	CollInBal        SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CollInBal,omitempty"`
	CollOutBal       SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CollOutBal,omitempty"`
	OnLnBal          SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OnLnBal,omitempty"`
	OutForRegnBal    SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OutForRegnBal,omitempty"`
	SttlmPosBal      SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SttlmPosBal,omitempty"`
	StrtPosBal       SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 StrtPosBal,omitempty"`
	TradDtPosBal     SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TradDtPosBal,omitempty"`
	InTrnsShipmntBal SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InTrnsShipmntBal,omitempty"`
	RegdBal          SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RegdBal,omitempty"`
	OblgtdBal        SignedQuantityFormat9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OblgtdBal,omitempty"`
	PdgDlvryBal      []PendingBalance6     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PdgDlvryBal,omitempty"`
	PdgRctBal        []PendingBalance6     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PdgRctBal,omitempty"`
}

type CorporateActionEventAndBalance18 struct {
	GnlInf      EventInformation14       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 GnlInf"`
	UndrlygScty SecurityIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 UndrlygScty"`
	Bal         CorporateActionBalance42 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Bal,omitempty"`
	SplmtryData []SupplementaryData1     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SplmtryData,omitempty"`
}

type CorporateActionEventDeadlines4 struct {
	EarlyRspnDdln  DateFormat49Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 EarlyRspnDdln,omitempty"`
	RspnDdln       DateFormat54Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RspnDdln,omitempty"`
	MktDdln        DateFormat49Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 MktDdln,omitempty"`
	PrtctDdln      DateFormat49Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PrtctDdln,omitempty"`
	CoverPrtctDdln DateFormat49Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CoverPrtctDdln,omitempty"`
}

// May be one of ACTV, ATTI, BRUP, DFLT, BONU, EXRI, CAPD, CAPG, CAPI, DRCA, DVCA, CHAN, COOP, CLSA, CONS, CONV, CREV, DECR, DETI, DSCL, DVOP, DRIP, DRAW, DTCH, EXOF, REDM, MCAL, INCR, PPMT, INTR, RHDI, LIQU, EXTM, MRGR, NOOF, CERT, ODLT, OTHR, PARI, PCAL, PRED, PINK, PLAC, PDEF, PRIO, BPUT, REDO, REMK, BIDS, SPLR, RHTS, DVSC, SHPR, SMAL, SOFF, DVSE, SPLF, TREC, TEND, DLST, SUSP, EXWA, WTRC, WRTH
type CorporateActionEventType29Code string

type CorporateActionEventType90Choice struct {
	Cd    CorporateActionEventType29Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type CorporateActionInstructionStatementReport002V09 struct {
	Pgntn           Pagination1               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Pgntn"`
	StmtGnlDtls     Statement75               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 StmtGnlDtls"`
	AcctAndStmtDtls []AccountIdentification54 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AcctAndStmtDtls"`
	SplmtryData     []SupplementaryData1      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SplmtryData,omitempty"`
}

// May be one of MAND, CHOS, VOLU
type CorporateActionMandatoryVoluntary1Code string

type CorporateActionMandatoryVoluntary4Choice struct {
	Cd    CorporateActionMandatoryVoluntary1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

// May be one of ABST, BSPL, BUYA, CASE, CASH, CEXC, CONN, CONY, CTEN, EXER, LAPS, MPUT, NOAC, NOQU, OFFR, OTHR, OVER, QINV, SECU, SLLE, PRUN
type CorporateActionOption11Code string

type CorporateActionOption36Choice struct {
	Cd    CorporateActionOption11Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

// May be one of MASE, SAME
type CorporateActionStatementReportingType1Code string

// May be one of MISS, ALLL, BALO, BALI
type CorporateActionStatementType2Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DtTm"`
}

type DateCode22Choice struct {
	Cd    DateType8Code           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type DateCode26Choice struct {
	Cd    DateType7Code           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type DateCodeAndTimeFormat4 struct {
	DtCd DateCode26Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DtCd"`
	Tm   ISOTime          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Tm"`
}

type DateFormat49Choice struct {
	Dt   DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Dt"`
	DtCd DateCode22Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DtCd"`
}

type DateFormat54Choice struct {
	Dt        DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Dt"`
	DtCdAndTm DateCodeAndTimeFormat4 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DtCdAndTm"`
	DtCd      DateCode22Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DtCd"`
}

type DateOrDateTimePeriod1Choice struct {
	Dt   DatePeriod2     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Dt"`
	DtTm DateTimePeriod1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DtTm"`
}

type DatePeriod2 struct {
	FrDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 FrDt"`
	ToDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ToDt"`
}

type DateTimePeriod1 struct {
	FrDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 FrDtTm"`
	ToDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ToDtTm"`
}

// May be one of ONGO
type DateType7Code string

// May be one of UKWN, ONGO
type DateType8Code string

type DefaultProcessingOrStandingInstruction1Choice struct {
	DfltOptnInd bool `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DfltOptnInd"`
	StgInstrInd bool `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 StgInstrInd"`
}

// May be one of FREE, APMT
type DeliveryReceiptType2Code string

type Document struct {
	CorpActnInstrStmtRpt CorporateActionInstructionStatementReport002V09 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CorpActnInstrStmtRpt"`
}

// May be one of YEAR, ADHO, MNTH, DAIL, INDA, WEEK
type EventFrequency4Code string

type EventInformation14 struct {
	CorpActnEvtId      RestrictedFINXMax16Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CorpActnEvtId"`
	OffclCorpActnEvtId RestrictedFINXMax16Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OffclCorpActnEvtId,omitempty"`
	EvtTp              CorporateActionEventType90Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 EvtTp"`
	MndtryVlntryEvtTp  CorporateActionMandatoryVoluntary4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 MndtryVlntryEvtTp"`
	LastNtfctnId       NotificationIdentification6              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 LastNtfctnId,omitempty"`
}

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AmtsdVal"`
}

type Frequency26Choice struct {
	Cd    EventFrequency4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SchmeNm,omitempty"`
}

type GenericIdentification85 struct {
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Tp"`
	Id RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type InstructedBalance12 struct {
	TtlInstdBal       BalanceFormat7Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlInstdBal"`
	TtlAccptdInstrBal SignedQuantityFormat9               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlAccptdInstrBal,omitempty"`
	TtlCancInstrBal   SignedQuantityFormat9               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlCancInstrBal,omitempty"`
	TtlPdgInstrBal    SignedQuantityFormat9               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlPdgInstrBal,omitempty"`
	TtlRjctdInstrBal  SignedQuantityFormat9               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlRjctdInstrBal,omitempty"`
	TtlPrtctInstrBal  SignedQuantityFormat9               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TtlPrtctInstrBal,omitempty"`
	OptnDtls          []InstructedCorporateActionOption13 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnDtls,omitempty"`
}

type InstructedCorporateActionOption13 struct {
	OptnNb             Exact3NumericText                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnNb,omitempty"`
	OptnTp             CorporateActionOption36Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnTp"`
	InstdBal           BalanceFormat7Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstdBal"`
	DfltActn           DefaultProcessingOrStandingInstruction1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 DfltActn,omitempty"`
	OptnAccptdInstdBal SignedQuantityFormat9                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnAccptdInstdBal,omitempty"`
	OptnCancInstrBal   SignedQuantityFormat9                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnCancInstrBal,omitempty"`
	OptnPdgInstrBal    SignedQuantityFormat9                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnPdgInstrBal,omitempty"`
	OptnRjctdInstrBal  SignedQuantityFormat9                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnRjctdInstrBal,omitempty"`
	OptnPrtctInstrBal  SignedQuantityFormat9                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnPrtctInstrBal,omitempty"`
	EvtDdlns           CorporateActionEventDeadlines4                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 EvtDdlns"`
	OptnInstrDtls      []OptionInstructionDetails4                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OptnInstrDtls,omitempty"`
}

type InstructionProcessingStatus36Choice struct {
	Accptd             NoSpecifiedReason1               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Accptd"`
	Canc               CancelledStatus15Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Canc"`
	AccptdForFrthrPrcg NoSpecifiedReason1               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AccptdForFrthrPrcg"`
	Rjctd              RejectedStatus28Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Rjctd"`
	Pdg                NoSpecifiedReason1               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Pdg"`
	PdgCxl             PendingCancellationStatus9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PdgCxl"`
	Cvrd               NoSpecifiedReason1               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cvrd"`
	Ucvrd              NoSpecifiedReason1               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Ucvrd"`
}

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// May be one of NORE
type NoReasonCode string

type NoSpecifiedReason1 struct {
	NoSpcfdRsn NoReasonCode `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NoSpcfdRsn"`
}

type NotificationIdentification6 struct {
	Id      RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id"`
	CreDtTm DateAndDateTime2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CreDtTm,omitempty"`
}

type OptionInstructionDetails4 struct {
	InstrId      RestrictedFINMax15Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrId"`
	InstrSeqNb   Max3NumericText                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrSeqNb,omitempty"`
	PrtctInd     ProtectTransactionType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PrtctInd,omitempty"`
	InstrQty     FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrQty"`
	InstrDt      ISODate                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrDt"`
	PrtctDt      ISODate                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PrtctDt,omitempty"`
	CoverPrtctDt ISODate                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CoverPrtctDt,omitempty"`
	BidPric      PriceFormat57Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 BidPric,omitempty"`
	CondlQty     FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CondlQty,omitempty"`
	CstmrRef     RestrictedFINMax30Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 CstmrRef,omitempty"`
	InstrNrrtv   RestrictedFINXMax350Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrNrrtv,omitempty"`
	InstrSts     InstructionProcessingStatus36Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrSts"`
}

type OriginalAndCurrentQuantities7 struct {
	ShrtLngPos ShortLong1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ShrtLngPos"`
	FaceAmt    float64        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 FaceAmt"`
	AmtsdVal   float64        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Tp"`
}

type Pagination1 struct {
	PgNb      Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PgNb"`
	LastPgInd bool            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 LastPgInd"`
}

type PartyIdentification136Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PrtryId"`
}

type PendingBalance6 struct {
	Bal    SignedQuantityFormat9               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Bal"`
	PdgTxs []SettlementTypeAndIdentification26 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PdgTxs,omitempty"`
}

// May be one of ADEA, DQUA, DQCS, LATE, OTHR
type PendingCancellationReason5Code string

type PendingCancellationReason6Choice struct {
	Cd    PendingCancellationReason5Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type PendingCancellationStatus9Choice struct {
	NotSpcfdRsn NoReasonCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NotSpcfdRsn"`
	Rsn         []PendingCancellationStatusReason9 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Rsn"`
}

type PendingCancellationStatusReason9 struct {
	RsnCd       PendingCancellationReason6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RsnCd"`
	AddtlRsnInf RestrictedFINMax210Text          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AddtlRsnInf,omitempty"`
}

type PercentagePrice1 struct {
	PctgPricTp PriceRateType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PctgPricTp"`
	PricVal    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PricVal"`
}

type PriceFormat57Choice struct {
	PctgPric     PercentagePrice1     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PctgPric"`
	AmtPric      AmountPrice5         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AmtPric"`
	NotSpcfdPric PriceValueType10Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NotSpcfdPric"`
}

// May be one of DISC, PREM, PRCT, YIEL
type PriceRateType3Code string

// May be one of UKWN
type PriceValueType10Code string

type ProprietaryQuantity10 struct {
	ShrtLngPos ShortLong1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ShrtLngPos,omitempty"`
	Qty        float64                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Qty"`
	QtyTp      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 QtyTp"`
	Issr       Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Issr"`
	SchmeNm    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SchmeNm,omitempty"`
}

type ProprietaryQuantity9 struct {
	Qty     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Qty"`
	QtyTp   Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 QtyTp"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SchmeNm,omitempty"`
}

// May be one of PROT, COVP, COVR
type ProtectTransactionType2Code string

type Quantity21Choice struct {
	Qty      FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Qty"`
	PrtryQty ProprietaryQuantity9                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PrtryQty"`
}

type Quantity22Choice struct {
	QtyChc   Quantity23Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 QtyChc"`
	PrtryQty ProprietaryQuantity10 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PrtryQty"`
}

type Quantity23Choice struct {
	OrgnlAndCurFaceAmt OriginalAndCurrentQuantities7 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OrgnlAndCurFaceAmt"`
	SgndQty            SignedQuantityFormat9         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SgndQty"`
}

type RejectedReason27Choice struct {
	Cd    RejectionReason49Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type RejectedStatus28Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NoSpcfdRsn"`
	Rsn        []RejectedStatusReason26 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Rsn"`
}

type RejectedStatusReason26 struct {
	RsnCd       RejectedReason27Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RsnCd"`
	AddtlRsnInf RestrictedFINMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 AddtlRsnInf,omitempty"`
}

// May be one of ADEA, CERT, INVA, OPTY, ULNK, DSEC, LACK, LATE, NMTY, FULL, CANC, INTV, OPNM, OTHR, DQUA, REFT, SAFE, EVNM, DQCS, DQCC, DQAM, IRDQ, DQBV, DQBI, DCAN, DPRG, INIR, SHAR
type RejectionReason49Code string

type RestrictedFINActiveCurrencyAnd13DecimalAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must be at least 1 items long
type RestrictedFINMax15Text string

// Must be at least 1 items long
type RestrictedFINMax210Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,350}
type RestrictedFINXMax350Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE, ALLP
type SafekeepingPlace2Code string

type SafekeepingPlaceFormat32Choice struct {
	Id      SafekeepingPlaceTypeAndText9           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TpAndId"`
	Prtry   GenericIdentification85                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id"`
}

type SafekeepingPlaceTypeAndText9 struct {
	SfkpgPlcTp SafekeepingPlace2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SfkpgPlcTp"`
	Id         RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Id,omitempty"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Desc,omitempty"`
}

type SettlementTypeAndIdentification26 struct {
	Pmt     DeliveryReceiptType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Pmt"`
	TxId    RestrictedFINXMax16Text  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 TxId"`
	SttlmDt DateAndDateTime2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 SttlmDt,omitempty"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SignedQuantityFormat8 struct {
	ShrtLngPos ShortLong1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ShrtLngPos"`
	QtyChc     Quantity21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 QtyChc"`
}

type SignedQuantityFormat9 struct {
	ShrtLngPos ShortLong1Code                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ShrtLngPos"`
	Qty        FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Qty"`
}

type Statement75 struct {
	StmtTp        CorporateActionStatementType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 StmtTp"`
	RptgTp        CorporateActionStatementReportingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RptgTp"`
	StmtId        RestrictedFINXMax16Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 StmtId"`
	InstrAggtnPrd DatePeriod2                                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 InstrAggtnPrd,omitempty"`
	RptNb         Max5NumericText                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 RptNb,omitempty"`
	StmtDtTm      DateAndDateTime2Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 StmtDtTm"`
	Frqcy         Frequency26Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Frqcy"`
	UpdTp         UpdateType16Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 UpdTp"`
	ActvtyInd     bool                                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 ActvtyInd"`
	NtfctnDdlnPrd DateOrDateTimePeriod1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 NtfctnDdlnPrd,omitempty"`
}

// May be one of COMP, DELT
type StatementUpdateType1Code string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type UpdateType16Choice struct {
	Cd    StatementUpdateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.042.002.09 Prtry"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
