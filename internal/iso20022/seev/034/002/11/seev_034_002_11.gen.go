// Code generated by main. DO NOT EDIT.

package seev_034_002_11

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AcceptedReason11Choice struct {
	Cd    AcknowledgementReason7Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type AcceptedStatus9Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 NoSpcfdRsn"`
	Rsn        []AcceptedStatusReason10 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Rsn"`
}

type AcceptedStatusReason10 struct {
	RsnCd       AcceptedReason11Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 RsnCd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlRsnInf,omitempty"`
}

// May be one of NSTP, OTHR
type AcknowledgementReason7Code string

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type CancelledReason11Choice struct {
	Cd    CancelledStatusReason6Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type CancelledStatus15Choice struct {
	NoSpcfdRsn NoReasonCode              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 NoSpcfdRsn"`
	Rsn        []CancelledStatusReason14 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Rsn"`
}

type CancelledStatusReason14 struct {
	RsnCd       CancelledReason11Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 RsnCd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlRsnInf,omitempty"`
}

// May be one of CANI, CANO, CANS, CSUB, OTHR
type CancelledStatusReason6Code string

type CashAccountIdentification6Choice struct {
	IBAN  IBAN2007Identifier       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 IBAN"`
	Prtry RestrictedFINX2Max34Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

// May be one of ACTV, ATTI, BRUP, DFLT, BONU, EXRI, CAPD, CAPG, CAPI, DRCA, DVCA, CHAN, COOP, CLSA, CONS, CONV, CREV, DECR, DETI, DSCL, DVOP, DRIP, DRAW, DTCH, EXOF, REDM, MCAL, INCR, PPMT, INTR, RHDI, LIQU, EXTM, MRGR, NOOF, CERT, ODLT, OTHR, PARI, PCAL, PRED, PINK, PLAC, PDEF, PRIO, BPUT, REDO, REMK, BIDS, SPLR, RHTS, DVSC, SHPR, SMAL, SOFF, DVSE, SPLF, TREC, TEND, DLST, SUSP, EXWA, WTRC, WRTH
type CorporateActionEventType29Code string

type CorporateActionEventType90Choice struct {
	Cd    CorporateActionEventType29Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type CorporateActionGeneralInformation144 struct {
	CorpActnEvtId      RestrictedFINXMax16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 CorpActnEvtId"`
	OffclCorpActnEvtId RestrictedFINXMax16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OffclCorpActnEvtId,omitempty"`
	ClssActnNb         RestrictedFINXMax16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 ClssActnNb,omitempty"`
	EvtTp              CorporateActionEventType90Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 EvtTp"`
}

type CorporateActionInstructionStatusAdvice002V11 struct {
	InstrId        DocumentIdentification17              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 InstrId,omitempty"`
	OthrDocId      []DocumentIdentification34            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OthrDocId,omitempty"`
	CorpActnGnlInf CorporateActionGeneralInformation144  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 CorpActnGnlInf"`
	InstrPrcgSts   []InstructionProcessingStatus39Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 InstrPrcgSts"`
	CorpActnInstr  CorporateActionOption169              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 CorpActnInstr,omitempty"`
	PrtctInstr     ProtectInstruction6                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtctInstr,omitempty"`
	AddtlInf       CorporateActionNarrative19            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlInf,omitempty"`
	SplmtryData    []SupplementaryData1                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SplmtryData,omitempty"`
}

type CorporateActionNarrative19 struct {
	AddtlTxt     []RestrictedFINXMax350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlTxt,omitempty"`
	PtyCtctNrrtv []RestrictedFINXMax350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PtyCtctNrrtv,omitempty"`
}

// May be one of ABST, BSPL, BUYA, CASE, CASH, CEXC, CONN, CONY, CTEN, EXER, LAPS, MKDW, MKUP, MPUT, NOAC, NOQU, OFFR, OTHR, OVER, QINV, SECU, SLLE, TAXI, PRUN
type CorporateActionOption14Code string

type CorporateActionOption169 struct {
	OptnNb      OptionNumber1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OptnNb"`
	OptnTp      CorporateActionOption34Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OptnTp"`
	OptnFeatrs  OptionFeaturesFormat27Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OptnFeatrs,omitempty"`
	AcctOwnr    PartyIdentification136Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AcctOwnr,omitempty"`
	SfkpgAcct   RestrictedFINXMax35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SfkpgAcct,omitempty"`
	CshAcct     CashAccountIdentification6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 CshAcct,omitempty"`
	SfkpgPlc    SafekeepingPlaceFormat32Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SfkpgPlc,omitempty"`
	FinInstrmId SecurityIdentification20             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 FinInstrmId,omitempty"`
	TtlElgblBal SignedQuantityFormat8                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 TtlElgblBal,omitempty"`
	InstdBal    SignedQuantityFormat8                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 InstdBal,omitempty"`
	UinstdBal   SignedQuantityFormat8                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 UinstdBal,omitempty"`
	StsQty      Quantity10Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 StsQty,omitempty"`
	StsCshAmt   RestrictedFINActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 StsCshAmt,omitempty"`
}

type CorporateActionOption34Choice struct {
	Cd    CorporateActionOption14Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type Document struct {
	CorpActnInstrStsAdvc CorporateActionInstructionStatusAdvice002V11 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 CorpActnInstrStsAdvc"`
}

type DocumentIdentification17 struct {
	Id RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
}

type DocumentIdentification34 struct {
	Id    DocumentIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
	DocNb DocumentNumber6Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 DocNb,omitempty"`
}

type DocumentIdentification4Choice struct {
	AcctSvcrDocId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AcctSvcrDocId"`
	AcctOwnrDocId RestrictedFINXMax16Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AcctOwnrDocId"`
}

type DocumentNumber6Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 LngNb"`
	PrtryNb GenericIdentification86           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtryNb"`
}

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity15Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AmtsdVal"`
}

type FinancialInstrumentQuantity31Choice struct {
	Unit    float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Unit"`
	FaceAmt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 FaceAmt"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SchmeNm,omitempty"`
}

type GenericIdentification84 struct {
	Id      RestrictedFINXMax34Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SchmeNm,omitempty"`
}

type GenericIdentification85 struct {
	Tp GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Tp"`
	Id RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id,omitempty"`
}

type GenericIdentification86 struct {
	Id      RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
	Issr    Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Issr"`
	SchmeNm Max4AlphaNumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type IdentificationSource4Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry RestrictedFINExact2Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type InstructionProcessingStatus39Choice struct {
	Canc               CancelledStatus15Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Canc"`
	AccptdForFrthrPrcg AcceptedStatus9Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AccptdForFrthrPrcg"`
	Rjctd              RejectedStatus33Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Rjctd"`
	Pdg                PendingStatus60Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Pdg"`
	DfltActn           NoSpecifiedReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 DfltActn"`
	StgInstr           NoSpecifiedReason1          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 StgInstr"`
	PrtrySts           ProprietaryStatusAndReason7 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtrySts"`
}

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max350Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// May be one of NORE
type NoReasonCode string

type NoSpecifiedReason1 struct {
	NoSpcfdRsn NoReasonCode `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 NoSpcfdRsn"`
}

// May be one of OPLF
type OptionFeatures12Code string

type OptionFeaturesFormat27Choice struct {
	Cd    OptionFeatures12Code    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type OptionNumber1Choice struct {
	Nb Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Nb"`
	Cd OptionNumber1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
}

// May be one of UNSO
type OptionNumber1Code string

type OriginalAndCurrentQuantities4 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AmtsdVal"`
}

type OtherIdentification2 struct {
	Id  RestrictedFINXMax31Text     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Sfx,omitempty"`
	Tp  IdentificationSource4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Tp"`
}

type PartyIdentification136Choice struct {
	AnyBIC  AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AnyBIC"`
	PrtryId GenericIdentification84 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtryId"`
}

// May be one of ADEA, OTHR, FULL, MCER, MONY, LACK, LATE, DQUA, PENR, CERT, DQCS, ITAX, NTAX, MTAX
type PendingReason18Code string

type PendingReason56Choice struct {
	Cd    PendingReason18Code     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type PendingStatus60Choice struct {
	NoSpcfdRsn NoReasonCode            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 NoSpcfdRsn"`
	Rsn        []PendingStatusReason20 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Rsn"`
}

type PendingStatusReason20 struct {
	RsnCd       PendingReason56Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 RsnCd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlRsnInf,omitempty"`
}

type ProprietaryQuantity9 struct {
	Qty     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Qty"`
	QtyTp   Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 QtyTp"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SchmeNm,omitempty"`
}

type ProprietaryReason5 struct {
	Rsn         GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Rsn,omitempty"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlRsnInf,omitempty"`
}

type ProprietaryStatusAndReason7 struct {
	PrtrySts GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtrySts"`
	PrtryRsn []ProprietaryReason5    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtryRsn,omitempty"`
}

type ProtectInstruction6 struct {
	TxTp           ProtectTransactionType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 TxTp"`
	PrtctTxSts     ProtectInstructionStatus3Code       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtctTxSts,omitempty"`
	TxId           RestrictedFINMax15Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 TxId,omitempty"`
	PrtctSfkpgAcct RestrictedFINMax35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtctSfkpgAcct,omitempty"`
	PrtctDt        ISODate                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtctDt,omitempty"`
	UcvrdPrtctQty  FinancialInstrumentQuantity31Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 UcvrdPrtctQty,omitempty"`
}

// May be one of OPEN, COVR, EXPI
type ProtectInstructionStatus3Code string

// May be one of PROT, COVP, COVR
type ProtectTransactionType2Code string

type Quantity10Choice struct {
	Qty             FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities4       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OrgnlAndCurFace"`
}

type Quantity21Choice struct {
	Qty      FinancialInstrumentQuantity15Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Qty"`
	PrtryQty ProprietaryQuantity9                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PrtryQty"`
}

type RejectedReason32Choice struct {
	Cd    RejectionReason54Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type RejectedStatus33Choice struct {
	NoSpcfdRsn NoReasonCode             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 NoSpcfdRsn"`
	Rsn        []RejectedStatusReason31 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Rsn"`
}

type RejectedStatusReason31 struct {
	RsnCd       RejectedReason32Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 RsnCd"`
	AddtlRsnInf RestrictedFINXMax210Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 AddtlRsnInf,omitempty"`
}

// May be one of ADEA, CERT, INVA, OPTY, ULNK, DSEC, LACK, LATE, NMTY, FULL, CANC, INTV, OPNM, OTHR, DQUA, REFT, SAFE, EVNM, DQCS, DQCC, DQAM, IRDQ, DQBV, DQBI, SHAR, ITAX, NTAX, MTAX
type RejectionReason54Code string

type RestrictedFINActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern XX|TS
type RestrictedFINExact2Text string

// Must be at least 1 items long
type RestrictedFINMax15Text string

// Must match the pattern ([^/]+/)+([^/]+)|([^/]*)
type RestrictedFINMax35Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,34}
type RestrictedFINX2Max34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,140}
type RestrictedFINXMax140Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax16Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,210}
type RestrictedFINXMax210Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax30Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,31}
type RestrictedFINXMax31Text string

// Must match the pattern ([0-9a-zA-Z\-\?:\(\)\.,'\+ ]([0-9a-zA-Z\-\?:\(\)\.,'\+ ]*(/[0-9a-zA-Z\-\?:\(\)\.,'\+ ])?)*)
type RestrictedFINXMax34Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.\n\r,'\+ ]{1,350}
type RestrictedFINXMax350Text string

// Must match the pattern [0-9a-zA-Z/\-\?:\(\)\.,'\+ ]{1,35}
type RestrictedFINXMax35Text string

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE, ALLP
type SafekeepingPlace2Code string

type SafekeepingPlaceFormat32Choice struct {
	Id      SafekeepingPlaceTypeAndText9           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 TpAndId"`
	Prtry   GenericIdentification85                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id"`
}

type SafekeepingPlaceTypeAndText9 struct {
	SfkpgPlcTp SafekeepingPlace2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 SfkpgPlcTp"`
	Id         RestrictedFINXMax30Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Id,omitempty"`
}

type SecurityIdentification20 struct {
	ISIN   ISINOct2015Identifier    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 ISIN,omitempty"`
	OthrId []OtherIdentification2   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 OthrId,omitempty"`
	Desc   RestrictedFINXMax140Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Desc,omitempty"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SignedQuantityFormat8 struct {
	ShrtLngPos ShortLong1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 ShrtLngPos"`
	QtyChc     Quantity21Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 QtyChc"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.034.002.11 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}
