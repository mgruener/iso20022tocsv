// Code generated by main. DO NOT EDIT.

package seev_037_001_08

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account8Choice struct {
	CshAcct   CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CshAcct"`
	ChrgsAcct CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ChrgsAcct"`
	TaxAcct   CashAccountIdentification5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 TaxAcct"`
}

type AccountAndBalance36 struct {
	SfkpgAcct Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SfkpgAcct"`
	ConfdBal  BalanceFormat5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ConfdBal"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// May be one of CLAI, TAXR, ACLA, ATXF, CNTR, CONS, NAMC, NPLE, SCHM, PPUT, PPRE, FPRE
type AdditionalBusinessProcess7Code string

type AdditionalBusinessProcessFormat11Choice struct {
	Cd    AdditionalBusinessProcess7Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type BalanceFormat5Choice struct {
	Bal         SignedQuantityFormat7 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Bal"`
	ElgblBal    SignedQuantityFormat6 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ElgblBal"`
	NotElgblBal SignedQuantityFormat6 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 NotElgblBal"`
}

type CashAccountIdentification5Choice struct {
	IBAN  IBAN2007Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 IBAN"`
	Prtry Max34Text          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

type CashOption45 struct {
	CdtDbtInd    CreditDebitCode         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CdtDbtInd"`
	Acct         Account8Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Acct,omitempty"`
	PstngDt      DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PstngDt"`
	OrgnlPstngDt DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OrgnlPstngDt,omitempty"`
	ValDt        DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ValDt,omitempty"`
	PstngAmt     ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PstngAmt"`
}

type CorporateAction33 struct {
	DtDtls         CorporateActionDate49                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 DtDtls,omitempty"`
	EvtStag        CorporateActionEventStageFormat14Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 EvtStag,omitempty"`
	AddtlBizPrcInd AdditionalBusinessProcessFormat11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AddtlBizPrcInd,omitempty"`
	LtryTp         LotteryTypeFormat4Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LtryTp,omitempty"`
}

type CorporateActionDate49 struct {
	RcrdDt   DateFormat31Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 RcrdDt,omitempty"`
	ExDvddDt DateFormat31Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ExDvddDt,omitempty"`
}

type CorporateActionEventReference3 struct {
	EvtId CorporateActionEventReference3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 EvtId"`
	LkgTp ProcessingPosition7Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LkgTp,omitempty"`
}

type CorporateActionEventReference3Choice struct {
	LkdOffclCorpActnEvtId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LkdOffclCorpActnEvtId"`
	LkdCorpActnId         Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LkdCorpActnId"`
}

// May be one of FULL, PART, RESC
type CorporateActionEventStage4Code string

type CorporateActionEventStageFormat14Choice struct {
	Cd    CorporateActionEventStage4Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

// May be one of ACTV, ATTI, BRUP, DFLT, BONU, EXRI, CAPD, CAPG, CAPI, DRCA, DVCA, CHAN, COOP, CLSA, CONS, CONV, CREV, DECR, DETI, DSCL, DVOP, DRIP, DRAW, DTCH, EXOF, REDM, MCAL, INCR, PPMT, INTR, PRII, RHDI, LIQU, EXTM, MRGR, NOOF, CERT, ODLT, OTHR, PARI, PCAL, PRED, PINK, PLAC, PDEF, PRIO, BPUT, REDO, REMK, BIDS, SPLR, RHTS, DVSC, SHPR, SMAL, SOFF, DVSE, SPLF, TREC, TEND, DLST, SUSP, EXWA, WTRC, WRTH, ACCU, MTNG
type CorporateActionEventType21Code string

type CorporateActionEventType53Choice struct {
	Cd    CorporateActionEventType21Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

type CorporateActionGeneralInformation111 struct {
	CorpActnEvtId          Max35Text                                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CorpActnEvtId"`
	OffclCorpActnEvtId     Max35Text                                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OffclCorpActnEvtId,omitempty"`
	ClssActnNb             Max35Text                                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ClssActnNb,omitempty"`
	EvtTp                  CorporateActionEventType53Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 EvtTp"`
	FinInstrmId            SecurityIdentification19                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 FinInstrmId"`
	IntrmdtSctiesDstrbtnTp IntermediateSecuritiesDistributionTypeFormat16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 IntrmdtSctiesDstrbtnTp,omitempty"`
	FrctnlQty              FinancialInstrumentQuantity1Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 FrctnlQty,omitempty"`
}

type CorporateActionMovementReversalAdviceV08 struct {
	MvmntConfId      DocumentIdentification31             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 MvmntConfId"`
	OthrDocId        []DocumentIdentification32           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OthrDocId,omitempty"`
	EvtsLkg          []CorporateActionEventReference3     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 EvtsLkg,omitempty"`
	RvslRsn          CorporateActionReversalReason3       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 RvslRsn,omitempty"`
	CorpActnGnlInf   CorporateActionGeneralInformation111 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CorpActnGnlInf"`
	AcctDtls         AccountAndBalance36                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AcctDtls"`
	CorpActnDtls     CorporateAction33                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CorpActnDtls,omitempty"`
	CorpActnConfDtls CorporateActionOption119             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CorpActnConfDtls"`
	AddtlInf         CorporateActionNarrative31           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AddtlInf,omitempty"`
	IssrAgt          []PartyIdentification71Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 IssrAgt,omitempty"`
	PngAgt           []PartyIdentification71Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PngAgt,omitempty"`
	SubPngAgt        []PartyIdentification71Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SubPngAgt,omitempty"`
	SplmtryData      []SupplementaryData1                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SplmtryData,omitempty"`
}

type CorporateActionNarrative31 struct {
	AddtlTxt     []Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AddtlTxt,omitempty"`
	NrrtvVrsn    []Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 NrrtvVrsn,omitempty"`
	PtyCtctNrrtv []Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PtyCtctNrrtv,omitempty"`
	TaxtnConds   []Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 TaxtnConds,omitempty"`
}

type CorporateActionOption119 struct {
	OptnNb          OptionNumber1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OptnNb"`
	OptnTp          CorporateActionOption19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OptnTp"`
	SctiesMvmntDtls []SecuritiesOption53          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SctiesMvmntDtls,omitempty"`
	CshMvmntDtls    []CashOption45                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CshMvmntDtls,omitempty"`
}

type CorporateActionOption19Choice struct {
	Cd    CorporateActionOption8Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

// May be one of ABST, AMGT, BSPL, BUYA, CASE, CASH, CEXC, CONN, CONY, CTEN, EXER, LAPS, MKDW, MKUP, MNGT, MPUT, NOAC, NOQU, OFFR, OTHR, OVER, PROX, QINV, SECU, SLLE, SPLI, PRUN
type CorporateActionOption8Code string

// May be one of DCBD, IVAD, IRED, IPRI, UPAY, IETR, FNRC, POCS, IPCU
type CorporateActionReversalReason1Code string

type CorporateActionReversalReason3 struct {
	Rsn         CorporateActionReversalReason3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Rsn"`
	AddtlRsnInf Max256Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AddtlRsnInf,omitempty"`
}

type CorporateActionReversalReason3Choice struct {
	Cd    CorporateActionReversalReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 DtTm"`
}

type DateCode19Choice struct {
	Cd    DateType8Code           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

type DateFormat31Choice struct {
	Dt   DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Dt"`
	DtCd DateCode19Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 DtCd"`
}

// May be one of UKWN, ONGO
type DateType8Code string

type Document struct {
	CorpActnMvmntRvslAdvc CorporateActionMovementReversalAdviceV08 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CorpActnMvmntRvslAdvc"`
}

type DocumentIdentification31 struct {
	Id    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Id"`
	LkgTp ProcessingPosition7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LkgTp,omitempty"`
}

type DocumentIdentification32 struct {
	Id    DocumentIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Id"`
	DocNb DocumentNumber5Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 DocNb,omitempty"`
	LkgTp ProcessingPosition7Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LkgTp,omitempty"`
}

type DocumentIdentification3Choice struct {
	AcctSvcrDocId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AcctSvcrDocId"`
	AcctOwnrDocId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AcctOwnrDocId"`
}

type DocumentNumber5Choice struct {
	ShrtNb  Exact3NumericText                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ShrtNb"`
	LngNb   ISO20022MessageIdentificationText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 LngNb"`
	PrtryNb GenericIdentification36           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PrtryNb"`
}

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity1Choice struct {
	Unit     float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Unit"`
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AmtsdVal"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SchmeNm,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

// Must match the pattern [a-z]{4}\.[0-9]{3}\.[0-9]{3}\.[0-9]{2}
type ISO20022MessageIdentificationText string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

type IntermediateSecuritiesDistributionTypeFormat16Choice struct {
	Cd    IntermediateSecurityDistributionType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

// May be one of BIDS, DRIP, DVCA, DVOP, EXRI, PRIO, DVSC, DVSE, INTR, LIQU, SOFF, SPLF, BONU, EXOF
type IntermediateSecurityDistributionType4Code string

// May be one of ORIG, SUPP
type LotteryType1Code string

type LotteryTypeFormat4Choice struct {
	Cd    LotteryType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Adr,omitempty"`
}

type OptionNumber1Choice struct {
	Nb Exact3NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Nb"`
	Cd OptionNumber1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
}

// May be one of UNSO
type OptionNumber1Code string

type OriginalAndCurrentQuantities1 struct {
	FaceAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 FaceAmt"`
	AmtsdVal float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AmtsdVal"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Tp"`
}

type PartyIdentification71Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 NmAndAdr"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Ctry"`
}

// May be one of AFTE, WITH, BEFO, INFO
type ProcessingPosition3Code string

type ProcessingPosition7Choice struct {
	Cd    ProcessingPosition3Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Cd"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Prtry"`
}

type ProprietaryQuantity8 struct {
	Qty     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Qty"`
	QtyTp   Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 QtyTp"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 SchmeNm,omitempty"`
}

type Quantity19Choice struct {
	Qty      FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Qty"`
	PrtryQty ProprietaryQuantity8               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PrtryQty"`
}

type Quantity6Choice struct {
	Qty             FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Qty"`
	OrgnlAndCurFace OriginalAndCurrentQuantities1      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OrgnlAndCurFace"`
}

type SecuritiesOption53 struct {
	FinInstrmId  SecurityIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 FinInstrmId"`
	CdtDbtInd    CreditDebitCode          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 CdtDbtInd"`
	PstngQty     Quantity6Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PstngQty"`
	PstngDt      DateAndDateTimeChoice    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PstngDt"`
	OrgnlPstngDt DateAndDateTimeChoice    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OrgnlPstngDt,omitempty"`
}

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Desc,omitempty"`
}

// May be one of SHOR, LONG
type ShortLong1Code string

type SignedQuantityFormat6 struct {
	ShrtLngPos ShortLong1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ShrtLngPos"`
	Qty        FinancialInstrumentQuantity1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Qty"`
}

type SignedQuantityFormat7 struct {
	ShrtLngPos ShortLong1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 ShrtLngPos"`
	QtyChc     Quantity19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 QtyChc"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.037.001.08 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
