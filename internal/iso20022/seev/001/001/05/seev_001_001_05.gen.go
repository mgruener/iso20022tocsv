// Code generated by main. DO NOT EDIT.

package seev_001_001_05

import (
	"bytes"
	"encoding/xml"
	"time"
)

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of WQPS, RSPS, AIPS
type AdditionalRight1Code string

type AdditionalRightCode1Choice struct {
	Cd    AdditionalRight1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Prtry"`
}

type AdditionalRightThreshold1Choice struct {
	AddtlRghtThrshld     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRghtThrshld"`
	AddtlRghtThrshldPctg float64   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRghtThrshldPctg"`
}

type AdditionalRights2 struct {
	AddtlRght          AdditionalRightCode1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRght"`
	AddtlRghtInfURLAdr Max256Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRghtInfURLAdr,omitempty"`
	AddtlRghtDdln      DateFormat29Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRghtDdln,omitempty"`
	AddtlRghtMktDdln   DateFormat29Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRghtMktDdln,omitempty"`
	AddtlRghtThrshld   AdditionalRightThreshold1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlRghtThrshld,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// May be one of PRIN, SUBA
type AgentRole1Code string

type AmendInformation1 struct {
	PrvsRef      MessageIdentification `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrvsRef"`
	RcnfrmInstrs bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RcnfrmInstrs"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type CommunicationAddress4 struct {
	EmailAdr Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EmailAdr,omitempty"`
	URLAdr   Max256Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 URLAdr,omitempty"`
}

type ContactIdentification1 struct {
	Nm       Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Nm"`
	NmPrfx   NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 NmPrfx,omitempty"`
	GvnNm    Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 GvnNm,omitempty"`
	Role     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Role,omitempty"`
	PhneNb   PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PhneNb,omitempty"`
	FaxNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 FaxNb,omitempty"`
	EmailAdr Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EmailAdr,omitempty"`
}

type CorporateEventNarrative2 struct {
	Dsclmr []Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Dsclmr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtTm"`
}

type DateFormat1 struct {
	Dt   DateFormat3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Dt"`
	DtMd DateMode1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtMd,omitempty"`
}

type DateFormat29Choice struct {
	DtOrDtTm DateAndDateTimeChoice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtOrDtTm"`
	DtCd     DateType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtCd"`
}

type DateFormat3Choice struct {
	Dt   ISODate       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Dt"`
	DtCd DateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtCd"`
}

// May be one of BODY, EODY
type DateMode1Code string

// May be one of UKWN
type DateType1Code string

type Document struct {
	MtgNtfctn MeetingNotificationV05 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 MtgNtfctn"`
}

type EligiblePosition5 struct {
	AcctId    Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AcctId,omitempty"`
	AcctOwnr  PartyIdentification40Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AcctOwnr,omitempty"`
	HldgBal   []HoldingBalance7             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 HldgBal,omitempty"`
	RghtsHldr []PartyIdentification40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RghtsHldr,omitempty"`
}

type Entitlement1Choice struct {
	EntitlmntRatio float64   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EntitlmntRatio"`
	EntitlmntDesc  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EntitlmntDesc"`
}

type EntitlementAssessment3 struct {
	SctiesBlckgDdln     DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SctiesBlckgDdln,omitempty"`
	SctiesBlckgSTPDdln  DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SctiesBlckgSTPDdln,omitempty"`
	SctiesBlckgMktDdln  DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SctiesBlckgMktDdln,omitempty"`
	SctiesBlckgPrdEndDt ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SctiesBlckgPrdEndDt,omitempty"`
	EntitlmntFxgDt      DateFormat1        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EntitlmntFxgDt,omitempty"`
	RegnSctiesDdln      DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnSctiesDdln,omitempty"`
	RegnSctiesSTPDdln   DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnSctiesSTPDdln,omitempty"`
	RegnSctiesMktDdln   DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnSctiesMktDdln,omitempty"`
	RegnPrtcptnDdln     DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnPrtcptnDdln,omitempty"`
	RegnPrtcptnSTPDdln  DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnPrtcptnSTPDdln,omitempty"`
	RegnPrtcptnMktDdln  DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnPrtcptnMktDdln,omitempty"`
	Entitlmnt           Entitlement1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Entitlmnt,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type GenericIdentification13 struct {
	Id      Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	SchmeNm Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SchmeNm,omitempty"`
	Issr    Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Issr"`
}

type GenericIdentification19 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SchmeNm,omitempty"`
}

type GenericIdentification20 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SchmeNm,omitempty"`
}

type GenericIdentification21 struct {
	Tp GenericIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id,omitempty"`
}

type GenericIdentification4 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	IdTp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 IdTp"`
}

type HoldingBalance7 struct {
	Bal      UnitOrFaceAmount1Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Bal,omitempty"`
	BalTp    SecuritiesEntryType2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 BalTp,omitempty"`
	SfkpgPlc SafekeepingPlaceFormat2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SfkpgPlc,omitempty"`
	Dt       ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Dt,omitempty"`
}

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Prtry"`
}

type IncentivePremium3 struct {
	Desc  Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Desc,omitempty"`
	Amt   PriceRateOrAmountChoice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Amt"`
	Tp    IncentivePremiumType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Tp"`
	PmtDt DateFormat3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PmtDt,omitempty"`
}

type IncentivePremiumType1Choice struct {
	PerScty    float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PerScty"`
	PerVote    float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PerVote"`
	PerAttndee bool    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PerAttndee"`
}

type IndividualPerson25 struct {
	BirthNm   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 BirthNm"`
	GvnNm     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 GvnNm,omitempty"`
	Id        PersonIdentification6       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id,omitempty"`
	Adr       LongPostalAddress2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Adr,omitempty"`
	EmplngPty PartyIdentification40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EmplngPty,omitempty"`
}

type IssuerAgent2 struct {
	Id   PartyIdentification40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	Role AgentRole1Code              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Role,omitempty"`
}

type IssuerInformation2 struct {
	Id     PartyIdentification40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	URLAdr Max256Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 URLAdr,omitempty"`
}

type LocationFormat1Choice struct {
	Adr    PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Adr"`
	LctnCd PlaceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 LctnCd"`
}

type LongPostalAddress2Choice struct {
	Ustrd Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Ustrd"`
	Strd  PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Strd"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

// Must be at least 1 items long
type Max1025Text string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type Meeting4 struct {
	DtAndTm  DateFormat29Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtAndTm"`
	DtSts    MeetingDateStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DtSts,omitempty"`
	QrmReqrd bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 QrmReqrd"`
	Lctn     []LocationFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Lctn"`
	QrmQty   QuorumQuantity1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 QrmQty,omitempty"`
}

type MeetingContactPerson2 struct {
	CtctPrsn   ContactIdentification1      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 CtctPrsn,omitempty"`
	EmplngPty  PartyIdentification40Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EmplngPty,omitempty"`
	PlcOfListg MICIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PlcOfListg,omitempty"`
}

// May be one of TNTA, CNFR, CANC, NOQO
type MeetingDateStatus1Code string

type MeetingNotice4 struct {
	MtgId                 Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 MtgId,omitempty"`
	IssrMtgId             Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 IssrMtgId,omitempty"`
	Tp                    MeetingType3Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Tp"`
	Clssfctn              MeetingTypeClassification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Clssfctn,omitempty"`
	AnncmntDt             ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AnncmntDt,omitempty"`
	AttndncReqrd          bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AttndncReqrd,omitempty"`
	AttndncConfInf        Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AttndncConfInf,omitempty"`
	AttndncConfDdln       DateFormat29Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AttndncConfDdln,omitempty"`
	AttndncConfSTPDdln    DateFormat29Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AttndncConfSTPDdln,omitempty"`
	AttndncConfMktDdln    DateFormat29Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AttndncConfMktDdln,omitempty"`
	AddtlDcmnttnURLAdr    Max256Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlDcmnttnURLAdr,omitempty"`
	AddtlPrcdrDtls        []AdditionalRights2              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlPrcdrDtls,omitempty"`
	TtlNbOfSctiesOutsdng  UnitOrFaceAmount1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 TtlNbOfSctiesOutsdng,omitempty"`
	TtlNbOfVtngRghts      float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 TtlNbOfVtngRghts,omitempty"`
	PrxyAppntmntNtfctnAdr PostalAddress1                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrxyAppntmntNtfctnAdr,omitempty"`
	PrxyChc               Proxy2Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrxyChc,omitempty"`
	CtctPrsnDtls          []MeetingContactPerson2          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 CtctPrsnDtls,omitempty"`
	RsltPblctnDt          DateFormat3Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RsltPblctnDt,omitempty"`
}

type MeetingNotificationV05 struct {
	Amdmnt            AmendInformation1            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Amdmnt,omitempty"`
	NtfctnSts         NotificationStatus2          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 NtfctnSts"`
	Mtg               MeetingNotice4               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Mtg"`
	MtgDtls           []Meeting4                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 MtgDtls"`
	Issr              IssuerInformation2           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Issr"`
	IssrAgt           []IssuerAgent2               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 IssrAgt,omitempty"`
	Scty              []SecurityPosition8          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Scty"`
	Rsltn             []Resolution3                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Rsltn,omitempty"`
	Vote              VoteParameters4              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Vote,omitempty"`
	EntitlmntSpcfctn  EntitlementAssessment3       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EntitlmntSpcfctn,omitempty"`
	PwrOfAttnyRqrmnts PowerOfAttorneyRequirements3 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PwrOfAttnyRqrmnts,omitempty"`
	AddtlInf          CorporateEventNarrative2     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlInf,omitempty"`
	SplmtryData       []SupplementaryData1         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SplmtryData,omitempty"`
}

// May be one of XMET, GMET, MIXD, SPCL, BMET
type MeetingType3Code string

type MeetingTypeClassification1Choice struct {
	Cd    MeetingTypeClassification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Cd"`
	Prtry GenericIdentification13        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Prtry"`
}

// May be one of AMET, OMET, CLAS, ISSU, VRHI, CORT
type MeetingTypeClassification1Code string

type MessageIdentification struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Adr,omitempty"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type NotificationStatus2 struct {
	Sts NotificationStatus2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Sts"`
}

// May be one of ECON, EUNC
type NotificationStatus2Code string

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Tp"`
}

type PartyIdentification40Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AnyBIC"`
	PrtryId  GenericIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 NmAndAdr"`
}

type PersonIdentification6 struct {
	Issr     Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Issr,omitempty"`
	PrsnIdTp PersonIdentificationType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrsnIdTp"`
}

type PersonIdentificationType1Choice struct {
	PsptNb      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PsptNb"`
	TaxIdNb     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 TaxIdNb"`
	SclSctyNb   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SclSctyNb"`
	MplyrIdNb   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 MplyrIdNb"`
	DrvrsLicNb  Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DrvrsLicNb"`
	AlnRegnNb   Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AlnRegnNb"`
	IdntyCardNb Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 IdntyCardNb"`
	OthrId      GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 OthrId"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// May be one of UKWN
type PlaceType1Code string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Ctry"`
}

// May be one of NOTA, LOCA, APOS, COUN
type PowerOfAttorneyLegalisation1Code string

type PowerOfAttorneyRequirements3 struct {
	LglRqrmnt       []PowerOfAttorneyLegalisation1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 LglRqrmnt,omitempty"`
	OthrDcmnttn     Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 OthrDcmnttn,omitempty"`
	DocSubmissnDdln DateFormat29Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 DocSubmissnDdln,omitempty"`
}

type PriceRateOrAmountChoice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Amt"`
}

type Proxy2Choice struct {
	Prxy         ProxyAppointmentInformation3 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Prxy"`
	PrxyNotAllwd ProxyNotAllowedCode          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrxyNotAllwd"`
}

type Proxy5 struct {
	PrxyTp      []ProxyType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrxyTp"`
	PrssgndPrxy IndividualPerson25 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrssgndPrxy,omitempty"`
}

type ProxyAppointmentInformation3 struct {
	RegnMtd     Max350Text         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RegnMtd,omitempty"`
	Ddln        DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Ddln,omitempty"`
	STPDdln     DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 STPDdln,omitempty"`
	MktDdln     DateFormat29Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 MktDdln,omitempty"`
	AuthrsdPrxy []Proxy5           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AuthrsdPrxy,omitempty"`
}

// May be one of NPRO
type ProxyNotAllowedCode string

// May be one of CHRM, DISC, HLDR
type ProxyType2Code string

type QuorumQuantity1Choice struct {
	QrmQty     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 QrmQty"`
	QrmQtyPctg float64   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 QrmQtyPctg"`
}

type Resolution3 struct {
	IssrLabl           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 IssrLabl"`
	Desc               Max1025Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Desc,omitempty"`
	Titl               Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Titl,omitempty"`
	Tp                 ResolutionType2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Tp,omitempty"`
	ForInfOnly         bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 ForInfOnly"`
	Sts                ResolutionStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Sts"`
	SubmittdBySctyHldr bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SubmittdBySctyHldr,omitempty"`
	VoteInstrTp        []VoteInstruction2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteInstrTp,omitempty"`
	MgmtRcmmndtn       VoteInstruction1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 MgmtRcmmndtn,omitempty"`
	NtifngPtyRcmmndtn  VoteInstruction1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 NtifngPtyRcmmndtn,omitempty"`
	Entitlmnt          Entitlement1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Entitlmnt,omitempty"`
}

// May be one of ACTV, WDRA
type ResolutionStatus1Code string

// May be one of EXTR, SPCL
type ResolutionType2Code string

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE, ALLP
type SafekeepingPlace2Code string

type SafekeepingPlaceFormat2Choice struct {
	Id      SafekeepingPlaceTypeAndText2             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
	Ctry    CountryCode                              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Ctry"`
	TpAndId SafekeepingPlaceTypeAndAnyBICIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 TpAndId"`
	Prtry   GenericIdentification21                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Prtry"`
}

type SafekeepingPlaceTypeAndAnyBICIdentifier1 struct {
	SfkpgPlcTp SafekeepingPlace1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SfkpgPlcTp"`
	Id         AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id"`
}

type SafekeepingPlaceTypeAndText2 struct {
	SfkpgPlcTp SafekeepingPlace2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Id,omitempty"`
}

// May be one of BLOK, ELIG, PEND, PENR, NOMI, SETD, BORR, LOAN, SPOS, TRAD, COLI, COLO, UNBA, INBA, REGO
type SecuritiesEntryType2Code string

type SecurityIdentification14 struct {
	ISIN   ISINIdentifier         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Desc,omitempty"`
}

type SecurityPosition8 struct {
	FinInstrmId SecurityIdentification14 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 FinInstrmId"`
	Pos         []EligiblePosition5      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Pos,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type UnitOrFaceAmount1Choice struct {
	Unit    float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 Unit"`
	FaceAmt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 FaceAmt"`
}

// May be one of CFOR, CAGS, ABST, WTHH, NOAC
type VoteInstruction1Code string

// May be one of CFOR, CAGS, ABST, WTHH, WMGT, AMGT, NOAC, DISC
type VoteInstruction2Code string

type VoteMethods2 struct {
	VoteThrghNtwk []AnyBICIdentifier      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteThrghNtwk,omitempty"`
	VoteByMail    []PostalAddress1        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteByMail,omitempty"`
	ElctrncVote   []CommunicationAddress4 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 ElctrncVote,omitempty"`
	VoteByTel     []Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteByTel,omitempty"`
}

type VoteParameters4 struct {
	SctiesQtyReqrdToVote float64                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SctiesQtyReqrdToVote,omitempty"`
	PrtlVoteAllwd        bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrtlVoteAllwd"`
	SpltVoteAllwd        bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 SpltVoteAllwd"`
	VoteDdln             DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteDdln,omitempty"`
	VoteSTPDdln          DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteSTPDdln,omitempty"`
	VoteMktDdln          DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteMktDdln,omitempty"`
	VoteMthds            VoteMethods2           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteMthds,omitempty"`
	VtngBlltElctrncAdr   CommunicationAddress4  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VtngBlltElctrncAdr,omitempty"`
	VtngBlltReqAdr       PostalAddress1         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VtngBlltReqAdr,omitempty"`
	RvcbltyDdln          DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RvcbltyDdln,omitempty"`
	RvcbltySTPDdln       DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RvcbltySTPDdln,omitempty"`
	RvcbltyMktDdln       DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 RvcbltyMktDdln,omitempty"`
	BnfclOwnrDsclsr      bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 BnfclOwnrDsclsr"`
	VoteInstrTp          []VoteInstruction2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteInstrTp,omitempty"`
	EarlyIncntivPrm      IncentivePremium3      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EarlyIncntivPrm,omitempty"`
	IncntivPrm           IncentivePremium3      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 IncntivPrm,omitempty"`
	EarlyVoteWthPrmDdln  DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 EarlyVoteWthPrmDdln,omitempty"`
	VoteWthPrmDdln       DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteWthPrmDdln,omitempty"`
	VoteWthPrmSTPDdln    DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteWthPrmSTPDdln,omitempty"`
	VoteWthPrmMktDdln    DateFormat29Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 VoteWthPrmMktDdln,omitempty"`
	AddtlVtngRqrmnts     Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 AddtlVtngRqrmnts,omitempty"`
	PrvsInstrInvldtyInd  bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.05 PrvsInstrInvldtyInd,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
