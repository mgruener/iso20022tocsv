// Code generated by main. DO NOT EDIT.

package seev_001_001_06

import (
	"bytes"
	"encoding/xml"
	"time"
)

type ActiveOrHistoricCurrencyAnd13DecimalAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of WQPS, RSPS, AIPS
type AdditionalRight1Code string

type AdditionalRightCode1Choice struct {
	Cd    AdditionalRight1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

type AdditionalRightThreshold1Choice struct {
	AddtlRghtThrshld     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRghtThrshld"`
	AddtlRghtThrshldPctg float64   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRghtThrshldPctg"`
}

type AdditionalRights3 struct {
	AddtlRght          AdditionalRightCode1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRght"`
	AddtlRghtInfURLAdr Max2048Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRghtInfURLAdr,omitempty"`
	AddtlRghtDdln      DateFormat58Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRghtDdln,omitempty"`
	AddtlRghtMktDdln   DateFormat58Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRghtMktDdln,omitempty"`
	AddtlRghtThrshld   AdditionalRightThreshold1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlRghtThrshld,omitempty"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// May be one of PRIN, SUBA
type AgentRole1Code string

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type Attendance1 struct {
	AdmssnConds []AttendanceAdmissionConditions1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AdmssnConds,omitempty"`
	ConfInf     Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ConfInf,omitempty"`
	ConfDdln    DateFormat58Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ConfDdln,omitempty"`
	ConfMktDdln DateFormat58Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ConfMktDdln,omitempty"`
}

type AttendanceAdmissionConditions1 struct {
	Cd       AttendanceAdmissionConditions1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Cd"`
	AddtlInf Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlInf,omitempty"`
}

// May be one of MASH, MAPO, MAAL, MALR, MAHI, MATK, MANP
type AttendanceAdmissionConditions1Code string

type CommunicationAddress11 struct {
	EmailAdr Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmailAdr,omitempty"`
	URLAdr   Max2048Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 URLAdr,omitempty"`
}

type ContactIdentification1 struct {
	Nm       Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Nm"`
	NmPrfx   NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NmPrfx,omitempty"`
	GvnNm    Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 GvnNm,omitempty"`
	Role     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Role,omitempty"`
	PhneNb   PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PhneNb,omitempty"`
	FaxNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 FaxNb,omitempty"`
	EmailAdr Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmailAdr,omitempty"`
}

type CorporateEventNarrative2 struct {
	Dsclmr []Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Dsclmr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type DateAndDateTime2Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtTm"`
}

type DateFormat1 struct {
	Dt   DateFormat3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Dt"`
	DtMd DateMode1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtMd,omitempty"`
}

type DateFormat3Choice struct {
	Dt   ISODate       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Dt"`
	DtCd DateType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtCd"`
}

type DateFormat58Choice struct {
	DtOrDtTm DateAndDateTime2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtOrDtTm"`
	DtCd     DateType1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtCd"`
}

// May be one of BODY, EODY
type DateMode1Code string

// May be one of UKWN
type DateType1Code string

type Document struct {
	MtgNtfctn MeetingNotificationV06 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 MtgNtfctn"`
}

type EligiblePosition7 struct {
	AcctId    Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AcctId"`
	AcctOwnr  PartyIdentification228Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AcctOwnr,omitempty"`
	HldgBal   []HoldingBalance9              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 HldgBal,omitempty"`
	RghtsHldr []PartyIdentification227Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RghtsHldr,omitempty"`
}

type Entitlement1Choice struct {
	EntitlmntRatio float64   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EntitlmntRatio"`
	EntitlmntDesc  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EntitlmntDesc"`
}

// May be one of COMP, INCO
type EventCompletenessStatus1Code string

// May be one of CONF, UCON
type EventConfirmationStatus1Code string

type EventStatus1 struct {
	EvtCmpltnsSts EventCompletenessStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EvtCmpltnsSts"`
	EvtConfSts    EventConfirmationStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EvtConfSts"`
}

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type ExternalFinancialInstrumentIdentificationType1Code string

type FinancialInstrumentQuantity18Choice struct {
	Unit    float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Unit"`
	FaceAmt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 FaceAmt"`
}

type GenericIdentification13 struct {
	Id      Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	SchmeNm Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SchmeNm,omitempty"`
	Issr    Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Issr"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Issr"`
	SchmeNm Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SchmeNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SchmeNm,omitempty"`
}

type GenericIdentification78 struct {
	Tp GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Tp"`
	Id Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id,omitempty"`
}

type HoldingBalance9 struct {
	Bal      FinancialInstrumentQuantity18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Bal"`
	BalTp    SecuritiesEntryType2Code            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 BalTp"`
	SfkpgPlc SafekeepingPlaceFormat28Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SfkpgPlc,omitempty"`
	Dt       ISODate                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Dt,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IdentificationSource3Choice struct {
	Cd    ExternalFinancialInstrumentIdentificationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Cd"`
	Prtry Max35Text                                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

type IdentificationType45Choice struct {
	Cd    TypeOfIdentification4Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Cd"`
	Prtry GenericIdentification30   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

type IncentivePremium4 struct {
	Desc  Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Desc,omitempty"`
	Amt   PriceRateOrAmount3Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Amt"`
	Tp    IncentivePremiumType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Tp"`
	PmtDt DateFormat3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PmtDt,omitempty"`
}

type IncentivePremiumType1Choice struct {
	PerScty    float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PerScty"`
	PerVote    float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PerVote"`
	PerAttndee bool    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PerAttndee"`
}

type IndividualPerson40 struct {
	PrssgndPrxy PartyIdentification223Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrssgndPrxy,omitempty"`
	EmplngPty   PartyIdentification129Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmplngPty,omitempty"`
}

type IssuerAgent3 struct {
	Id   PartyIdentification129Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	Role AgentRole1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Role,omitempty"`
}

type IssuerInformation3 struct {
	Id     PartyIdentification129Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	URLAdr Max2048Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 URLAdr,omitempty"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LocationFormat1Choice struct {
	Adr    PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Adr"`
	LctnCd PlaceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LctnCd"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

// Must be at least 1 items long
type Max1025Text string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max50Text string

// Must be at least 1 items long
type Max70Text string

type Meeting5 struct {
	DtAndTm  DateFormat58Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtAndTm"`
	DtSts    MeetingDateStatus2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DtSts,omitempty"`
	QrmReqrd bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 QrmReqrd"`
	Lctn     []LocationFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Lctn"`
	QrmQty   QuorumQuantity1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 QrmQty,omitempty"`
	URLAdr   Max2048Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 URLAdr,omitempty"`
}

type MeetingContactPerson3 struct {
	CtctPrsn   ContactIdentification1       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 CtctPrsn,omitempty"`
	EmplngPty  PartyIdentification129Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmplngPty,omitempty"`
	PlcOfListg MICIdentifier                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PlcOfListg,omitempty"`
}

// May be one of CNFR, TNTA
type MeetingDateStatus2Code string

type MeetingEventReference1 struct {
	EvtId MeetingEventReference1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EvtId"`
	LkgTp ProcessingPosition3Code      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LkgTp,omitempty"`
}

type MeetingEventReference1Choice struct {
	LkdIssrMtgId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LkdIssrMtgId"`
	LkdMtgId     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LkdMtgId"`
}

type MeetingNotice5 struct {
	MtgId                 Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 MtgId,omitempty"`
	IssrMtgId             Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 IssrMtgId,omitempty"`
	Tp                    MeetingType4Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Tp"`
	Clssfctn              MeetingTypeClassification2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Clssfctn,omitempty"`
	AnncmntDt             ISODate                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AnncmntDt,omitempty"`
	Prtcptn               []ParticipationMethod1              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtcptn,omitempty"`
	Attndnc               Attendance1                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Attndnc,omitempty"`
	AddtlDcmnttnURLAdr    []Max2048Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlDcmnttnURLAdr,omitempty"`
	AddtlPrcdrDtls        []AdditionalRights3                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlPrcdrDtls,omitempty"`
	TtlNbOfSctiesOutsdng  FinancialInstrumentQuantity18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 TtlNbOfSctiesOutsdng,omitempty"`
	TtlNbOfVtngRghts      float64                             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 TtlNbOfVtngRghts,omitempty"`
	PrxyAppntmntNtfctnAdr PostalAddress1                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrxyAppntmntNtfctnAdr,omitempty"`
	PrxyChc               Proxy3Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrxyChc,omitempty"`
	CtctPrsnDtls          []MeetingContactPerson3             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 CtctPrsnDtls,omitempty"`
	RsltPblctnDt          DateFormat3Choice                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RsltPblctnDt,omitempty"`
	SctiesBlckgPrdEndDt   ISODateTime                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SctiesBlckgPrdEndDt,omitempty"`
	EntitlmntFxgDt        DateFormat1                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EntitlmntFxgDt,omitempty"`
	RegnSctiesDdln        DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RegnSctiesDdln,omitempty"`
	RegnSctiesMktDdln     DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RegnSctiesMktDdln,omitempty"`
	RegnPrtcptnDdln       DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RegnPrtcptnDdln,omitempty"`
	RegnPrtcptnMktDdln    DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RegnPrtcptnMktDdln,omitempty"`
}

type MeetingNotificationV06 struct {
	NtfctnGnlInf      NotificationGeneralInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtfctnGnlInf"`
	NtfctnUpd         NotificationUpdate1             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtfctnUpd,omitempty"`
	EvtsLkg           []MeetingEventReference1        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EvtsLkg,omitempty"`
	Mtg               MeetingNotice5                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Mtg"`
	MtgDtls           []Meeting5                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 MtgDtls"`
	Issr              IssuerInformation3              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Issr"`
	IssrAgt           []IssuerAgent3                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 IssrAgt,omitempty"`
	Scty              []SecurityPosition10            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Scty"`
	Rsltn             []Resolution4                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Rsltn,omitempty"`
	Vote              VoteParameters5                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Vote,omitempty"`
	PwrOfAttnyRqrmnts PowerOfAttorneyRequirements4    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PwrOfAttnyRqrmnts,omitempty"`
	AddtlInf          CorporateEventNarrative2        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlInf,omitempty"`
	SplmtryData       []SupplementaryData1            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SplmtryData,omitempty"`
}

// May be one of XMET, GMET, MIXD, SPCL, BMET, CMET
type MeetingType4Code string

type MeetingTypeClassification2Choice struct {
	Cd    MeetingTypeClassification2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Cd"`
	Prtry GenericIdentification13        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

// May be one of AMET, CLAS, ISSU, OMET, VRHI
type MeetingTypeClassification2Code string

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Adr,omitempty"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type NaturalPersonIdentification1 struct {
	Id   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	IdTp IdentificationType45Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 IdTp,omitempty"`
}

type NotificationGeneralInformation1 struct {
	NtfctnTp  NotificationType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtfctnTp"`
	NtfctnSts EventStatus1          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtfctnSts"`
}

// May be one of NEWM, REPL, RMDR
type NotificationType3Code string

type NotificationUpdate1 struct {
	PrvsNtfctnId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrvsNtfctnId"`
	RcnfrmInstrs bool      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RcnfrmInstrs"`
}

type NumberOrPercentage1Choice struct {
	ThrshldPctg float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ThrshldPctg"`
	ThrshldNb   float64 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ThrshldNb"`
}

type OtherIdentification1 struct {
	Id  Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	Sfx Max16Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Sfx,omitempty"`
	Tp  IdentificationSource3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Tp"`
}

type ParticipationMethod1 struct {
	PrtcptnMtd      ParticipationMethod1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrtcptnMtd"`
	IssrDdlnForVtng DateFormat58Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 IssrDdlnForVtng"`
}

type ParticipationMethod1Choice struct {
	Cd    VotingParticipationMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Cd"`
	Prtry GenericIdentification30        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

type PartyIdentification129Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrtryId"`
	NmAndAdr NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NmAndAdr"`
	LEI      LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LEI"`
}

type PartyIdentification198Choice struct {
	NtlRegnNb Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtlRegnNb"`
	LEI       LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LEI"`
	AnyBIC    AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AnyBIC"`
	ClntId    Max50Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ClntId"`
	PrtryId   GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrtryId"`
}

type PartyIdentification221 struct {
	NmAndAdr PersonName2                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NmAndAdr"`
	EmailAdr Max256Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmailAdr,omitempty"`
	Id       PartyIdentification198Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
}

type PartyIdentification222 struct {
	NmAndAdr PersonName1                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NmAndAdr"`
	EmailAdr Max256Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmailAdr,omitempty"`
	Id       NaturalPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
}

type PartyIdentification223Choice struct {
	LglPrsn  PartyIdentification221 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LglPrsn"`
	NtrlPrsn PartyIdentification222 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtrlPrsn"`
}

type PartyIdentification224 struct {
	NmAndAdr PersonName2                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NmAndAdr"`
	EmailAdr Max256Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmailAdr,omitempty"`
	Id       PartyIdentification198Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id,omitempty"`
}

type PartyIdentification225 struct {
	NmAndAdr PersonName1                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NmAndAdr"`
	EmailAdr Max256Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EmailAdr,omitempty"`
	Id       NaturalPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id,omitempty"`
}

type PartyIdentification227Choice struct {
	LglPrsn  PartyIdentification224   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LglPrsn"`
	NtrlPrsn []PartyIdentification225 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtrlPrsn"`
}

type PartyIdentification228Choice struct {
	LglPrsn  PartyIdentification221   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LglPrsn"`
	NtrlPrsn []PartyIdentification222 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtrlPrsn"`
}

type PersonName1 struct {
	FrstNm Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 FrstNm"`
	Srnm   Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Srnm"`
	Adr    PostalAddress26 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Adr,omitempty"`
}

type PersonName2 struct {
	Nm  Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Nm"`
	Adr PostalAddress26 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Adr,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// May be one of UKWN
type PlaceType1Code string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Ctry"`
}

type PostalAddress26 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 BldgNb,omitempty"`
	PstBx       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PstBx,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Ctry"`
}

// May be one of NOTA, LOCA, APOS, COUN
type PowerOfAttorneyLegalisation1Code string

type PowerOfAttorneyRequirements4 struct {
	LglRqrmnt       []PowerOfAttorneyLegalisation1Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 LglRqrmnt,omitempty"`
	OthrDcmnttn     Max350Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 OthrDcmnttn,omitempty"`
	DocSubmissnDdln DateFormat58Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 DocSubmissnDdln,omitempty"`
}

type PriceRateOrAmount3Choice struct {
	Rate float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Rate"`
	Amt  ActiveOrHistoricCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Amt"`
}

// May be one of AFTE, WITH, BEFO, INFO
type ProcessingPosition3Code string

type Proxy3Choice struct {
	Prxy         ProxyAppointmentInformation4 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prxy"`
	PrxyNotAllwd ProxyNotAllowed1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrxyNotAllwd"`
}

type Proxy8 struct {
	PrxyTp   ProxyType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrxyTp"`
	PrsnDtls IndividualPerson40 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrsnDtls,omitempty"`
}

type ProxyAppointmentInformation4 struct {
	RegnMtd     Max350Text         `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RegnMtd,omitempty"`
	Ddln        DateFormat58Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Ddln,omitempty"`
	MktDdln     DateFormat58Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 MktDdln,omitempty"`
	AuthrsdPrxy []Proxy8           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AuthrsdPrxy,omitempty"`
}

// May be one of NPRO
type ProxyNotAllowed1Code string

// May be one of CHRM, DISC, HLDR
type ProxyType2Code string

type QuorumQuantity1Choice struct {
	QrmQty     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 QrmQty"`
	QrmQtyPctg float64   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 QrmQtyPctg"`
}

type Resolution4 struct {
	IssrLabl                  Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 IssrLabl"`
	Desc                      Max1025Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Desc,omitempty"`
	Titl                      Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Titl,omitempty"`
	Tp                        ResolutionType2Code       `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Tp,omitempty"`
	ForInfOnly                bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ForInfOnly"`
	VoteTp                    VoteType1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteTp,omitempty"`
	Sts                       ResolutionStatus1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Sts"`
	SubmittdBySctyHldr        bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SubmittdBySctyHldr,omitempty"`
	VoteInstrTp               []VoteInstructionType1    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteInstrTp,omitempty"`
	MgmtRcmmndtn              VoteInstruction5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 MgmtRcmmndtn,omitempty"`
	NtifngPtyRcmmndtn         VoteInstruction5Code      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 NtifngPtyRcmmndtn,omitempty"`
	Entitlmnt                 Entitlement1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Entitlmnt,omitempty"`
	VtngRghtsThrshldForApprvl NumberOrPercentage1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VtngRghtsThrshldForApprvl,omitempty"`
	URLAdr                    Max2048Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 URLAdr,omitempty"`
}

// May be one of ACTV, WDRA
type ResolutionStatus1Code string

// May be one of EXTR, SPCL
type ResolutionType2Code string

// May be one of CUST, ICSD, NCSD, SHHE
type SafekeepingPlace1Code string

// May be one of SHHE, ALLP
type SafekeepingPlace2Code string

type SafekeepingPlaceFormat28Choice struct {
	Id      SafekeepingPlaceTypeAndText6           `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
	Ctry    CountryCode                            `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Ctry"`
	TpAndId SafekeepingPlaceTypeAndIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 TpAndId"`
	Prtry   GenericIdentification78                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

type SafekeepingPlaceTypeAndIdentification1 struct {
	SfkpgPlcTp SafekeepingPlace1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SfkpgPlcTp"`
	Id         AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id"`
}

type SafekeepingPlaceTypeAndText6 struct {
	SfkpgPlcTp SafekeepingPlace2Code `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SfkpgPlcTp"`
	Id         Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Id,omitempty"`
}

// May be one of BLOK, ELIG, PEND, PENR, NOMI, SETD, BORR, LOAN, SPOS, TRAD, COLI, COLO, UNBA, INBA, REGO
type SecuritiesEntryType2Code string

type SecurityIdentification19 struct {
	ISIN   ISINOct2015Identifier  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ISIN,omitempty"`
	OthrId []OtherIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 OthrId,omitempty"`
	Desc   Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Desc,omitempty"`
}

type SecurityPosition10 struct {
	FinInstrmId SecurityIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 FinInstrmId"`
	Pos         []EligiblePosition7      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Pos,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// May be one of ARNU, CUST, CORP, DRLC, IDCD, NRIN, CCPT, SOCS, TXID
type TypeOfIdentification4Code string

// May be one of ABST, CAGS, CHRM, CFOR, NOAC, WTHH, ONEY, THRY, TWOY, BLNK, NREC
type VoteInstruction5Code string

// May be one of ABST, CAGS, AMGT, BLNK, CHRM, DISC, CFOR, NOAC, ONEY, THRY, TWOY, WTHH, WMGT
type VoteInstruction6Code string

type VoteInstructionType1 struct {
	VoteInstrTpCd VoteInstructionType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteInstrTpCd"`
	AddtlInf      Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlInf,omitempty"`
}

type VoteInstructionType1Choice struct {
	Tp    VoteInstruction6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Tp"`
	Prtry GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 Prtry"`
}

type VoteMethods3 struct {
	VoteThrghNtwk []AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteThrghNtwk,omitempty"`
	VoteByMail    []PostalAddress1          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteByMail,omitempty"`
	ElctrncVote   []CommunicationAddress11  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 ElctrncVote,omitempty"`
	VoteByTel     []Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteByTel,omitempty"`
}

type VoteParameters5 struct {
	SctiesQtyReqrdToVote FinancialInstrumentQuantity18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SctiesQtyReqrdToVote,omitempty"`
	PrtlVoteAllwd        bool                                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrtlVoteAllwd"`
	SpltVoteAllwd        bool                                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 SpltVoteAllwd"`
	VoteDdln             DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteDdln,omitempty"`
	VoteMktDdln          DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteMktDdln,omitempty"`
	VoteMthds            VoteMethods3                        `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteMthds,omitempty"`
	VtngBlltElctrncAdr   CommunicationAddress11              `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VtngBlltElctrncAdr,omitempty"`
	VtngBlltReqAdr       PostalAddress1                      `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VtngBlltReqAdr,omitempty"`
	RvcbltyDdln          DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RvcbltyDdln,omitempty"`
	RvcbltyMktDdln       DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 RvcbltyMktDdln,omitempty"`
	BnfclOwnrDsclsr      bool                                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 BnfclOwnrDsclsr"`
	EarlyIncntivPrm      IncentivePremium4                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EarlyIncntivPrm,omitempty"`
	IncntivPrm           IncentivePremium4                   `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 IncntivPrm,omitempty"`
	EarlyVoteWthPrmDdln  DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 EarlyVoteWthPrmDdln,omitempty"`
	VoteWthPrmDdln       DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteWthPrmDdln,omitempty"`
	VoteWthPrmMktDdln    DateFormat58Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 VoteWthPrmMktDdln,omitempty"`
	AddtlVtngRqrmnts     Max350Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 AddtlVtngRqrmnts,omitempty"`
	PrvsInstrInvldtyInd  bool                                `xml:"urn:iso:std:iso:20022:tech:xsd:seev.001.001.06 PrvsInstrInvldtyInd,omitempty"`
}

// May be one of ADVI, BNDG
type VoteType1Code string

// May be one of MAIL, PHYS, PHNV, PRXY, VIRT, EVOT
type VotingParticipationMethod1Code string

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
