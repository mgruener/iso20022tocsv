// Code generated by main. DO NOT EDIT.

package pacs_003_001_02

import (
	"bytes"
	"encoding/xml"
	"time"
)

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IBAN"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Othr"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AmendmentInformationDetails6 struct {
	OrgnlMndtId      Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlMndtId,omitempty"`
	OrgnlCdtrSchmeId PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlCdtrSchmeId,omitempty"`
	OrgnlCdtrAgt     BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlCdtrAgt,omitempty"`
	OrgnlCdtrAgtAcct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlCdtrAgtAcct,omitempty"`
	OrgnlDbtr        PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlDbtr,omitempty"`
	OrgnlDbtrAcct    CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlDbtrAcct,omitempty"`
	OrgnlDbtrAgt     BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlDbtrAgt,omitempty"`
	OrgnlDbtrAgtAcct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlDbtrAgtAcct,omitempty"`
	OrgnlFnlColltnDt ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlFnlColltnDt,omitempty"`
	OrgnlFrqcy       Frequency1Code                               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgnlFrqcy,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

type Authorisation1Choice struct {
	Cd    Authorisation1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max128Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

// May be one of AUTH, FDET, FSUM, ILEV
type Authorisation1Code string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICIdentifier string

type BranchAndFinancialInstitutionIdentification4 struct {
	FinInstnId FinancialInstitutionIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 FinInstnId"`
	BrnchId    BranchData2                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 BrnchId,omitempty"`
}

type BranchData2 struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id,omitempty"`
	Nm      Max140Text     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm,omitempty"`
	PstlAdr PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PstlAdr,omitempty"`
}

type CashAccount16 struct {
	Id  AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id"`
	Tp  CashAccountType2             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Tp,omitempty"`
	Ccy ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Ccy,omitempty"`
	Nm  Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm,omitempty"`
}

type CashAccountType2 struct {
	Cd    CashAccountType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

// May be one of CASH, CHAR, COMM, TAXE, CISH, TRAS, SACC, CACC, SVGS, ONDP, MGLD, NREX, MOMA, LOAN, SLRY, ODFT
type CashAccountType4Code string

type CategoryPurpose1Choice struct {
	Cd    ExternalCategoryPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

// May be one of DEBT, CRED, SHAR, SLEV
type ChargeBearerType1Code string

type ChargesInformation5 struct {
	Amt ActiveOrHistoricCurrencyAndAmount            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Amt"`
	Pty BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Pty"`
}

// May be one of RTGS, RTNS, MPNS, BOOK
type ClearingChannel2Code string

type ClearingSystemIdentification2Choice struct {
	Cd    ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type ClearingSystemIdentification3Choice struct {
	Cd    ExternalCashClearingSystem1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type ClearingSystemMemberIdentification2 struct {
	ClrSysId ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ClrSysId,omitempty"`
	MmbId    Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 MmbId"`
}

type ContactDetails2 struct {
	NmPrfx   NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 NmPrfx,omitempty"`
	Nm       Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm,omitempty"`
	PhneNb   PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PhneNb,omitempty"`
	MobNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 MobNb,omitempty"`
	FaxNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 FaxNb,omitempty"`
	EmailAdr Max2048Text     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 EmailAdr,omitempty"`
	Othr     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Othr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebitCode string

type CreditorReferenceInformation2 struct {
	Tp  CreditorReferenceType2 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Tp,omitempty"`
	Ref Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Ref,omitempty"`
}

type CreditorReferenceType1Choice struct {
	Cd    DocumentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type CreditorReferenceType2 struct {
	CdOrPrtry CreditorReferenceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdOrPrtry"`
	Issr      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Issr,omitempty"`
}

type DateAndPlaceOfBirth struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CtryOfBirth"`
}

type DirectDebitTransaction6 struct {
	MndtRltdInf MandateRelatedInformation6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 MndtRltdInf,omitempty"`
	CdtrSchmeId PartyIdentification32      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtrSchmeId,omitempty"`
	PreNtfctnId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PreNtfctnId,omitempty"`
	PreNtfctnDt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PreNtfctnDt,omitempty"`
}

type DirectDebitTransactionInformation10 struct {
	PmtId          PaymentIdentification3                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PmtId"`
	PmtTpInf       PaymentTypeInformation22                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PmtTpInf,omitempty"`
	IntrBkSttlmAmt ActiveCurrencyAndAmount                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrBkSttlmAmt"`
	IntrBkSttlmDt  ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrBkSttlmDt,omitempty"`
	InstdAmt       ActiveOrHistoricCurrencyAndAmount            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstdAmt,omitempty"`
	XchgRate       float64                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 XchgRate,omitempty"`
	ChrgBr         ChargeBearerType1Code                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ChrgBr"`
	ChrgsInf       []ChargesInformation5                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ChrgsInf,omitempty"`
	ReqdColltnDt   ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ReqdColltnDt,omitempty"`
	DrctDbtTx      DirectDebitTransaction6                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DrctDbtTx,omitempty"`
	Cdtr           PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cdtr"`
	CdtrAcct       CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtrAcct,omitempty"`
	CdtrAgt        BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtrAgt"`
	CdtrAgtAcct    CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtrAgtAcct,omitempty"`
	UltmtCdtr      PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 UltmtCdtr,omitempty"`
	InitgPty       PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InitgPty,omitempty"`
	InstgAgt       BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstgAgt,omitempty"`
	InstdAgt       BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstdAgt,omitempty"`
	IntrmyAgt1     BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrmyAgt1,omitempty"`
	IntrmyAgt1Acct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrmyAgt1Acct,omitempty"`
	IntrmyAgt2     BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrmyAgt2,omitempty"`
	IntrmyAgt2Acct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrmyAgt2Acct,omitempty"`
	IntrmyAgt3     BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrmyAgt3,omitempty"`
	IntrmyAgt3Acct CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrmyAgt3Acct,omitempty"`
	Dbtr           PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Dbtr"`
	DbtrAcct       CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DbtrAcct"`
	DbtrAgt        BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DbtrAgt"`
	DbtrAgtAcct    CashAccount16                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DbtrAgtAcct,omitempty"`
	UltmtDbtr      PartyIdentification32                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 UltmtDbtr,omitempty"`
	Purp           Purpose2Choice                               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Purp,omitempty"`
	RgltryRptg     []RegulatoryReporting3                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RgltryRptg,omitempty"`
	RltdRmtInf     []RemittanceLocation2                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RltdRmtInf,omitempty"`
	RmtInf         RemittanceInformation5                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RmtInf,omitempty"`
}

type Document struct {
	FIToFICstmrDrctDbt FIToFICustomerDirectDebitV02 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 FIToFICstmrDrctDbt"`
}

type DocumentAdjustment1 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Amt"`
	CdtDbtInd CreditDebitCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtDbtInd,omitempty"`
	Rsn       Max4Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Rsn,omitempty"`
	AddtlInf  Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AddtlInf,omitempty"`
}

// May be one of RADM, RPIN, FXDR, DISP, PUOR, SCOR
type DocumentType3Code string

// May be one of MSIN, CNFA, DNFA, CINV, CREN, DEBN, HIRI, SBIN, CMCN, SOAC, DISP, BOLD, VCHR, AROI, TSUT
type DocumentType5Code string

// Must be at least 1 items long
type ExternalAccountIdentification1Code string

// Must be at least 1 items long
type ExternalCashClearingSystem1Code string

// Must be at least 1 items long
type ExternalCategoryPurpose1Code string

// Must be at least 1 items long
type ExternalClearingSystemIdentification1Code string

// Must be at least 1 items long
type ExternalFinancialInstitutionIdentification1Code string

// Must be at least 1 items long
type ExternalLocalInstrument1Code string

// Must be at least 1 items long
type ExternalOrganisationIdentification1Code string

// Must be at least 1 items long
type ExternalPersonIdentification1Code string

// Must be at least 1 items long
type ExternalPurpose1Code string

// Must be at least 1 items long
type ExternalServiceLevel1Code string

type FIToFICustomerDirectDebitV02 struct {
	GrpHdr       GroupHeader34                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 GrpHdr"`
	DrctDbtTxInf []DirectDebitTransactionInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DrctDbtTxInf"`
}

type FinancialIdentificationSchemeName1Choice struct {
	Cd    ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type FinancialInstitutionIdentification7 struct {
	BIC         BICIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 BIC,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ClrSysMmbId,omitempty"`
	Nm          Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm,omitempty"`
	PstlAdr     PostalAddress6                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PstlAdr,omitempty"`
	Othr        GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Othr,omitempty"`
}

// May be one of YEAR, MNTH, QURT, MIAN, WEEK, DAIL, ADHO, INDA
type Frequency1Code string

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Issr,omitempty"`
}

type GenericFinancialIdentification1 struct {
	Id      Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id"`
	SchmeNm FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SchmeNm,omitempty"`
	Issr    Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Issr,omitempty"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Issr,omitempty"`
}

type GroupHeader34 struct {
	MsgId             Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 MsgId"`
	CreDtTm           ISODateTime                                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CreDtTm"`
	Authstn           []Authorisation1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Authstn,omitempty"`
	BtchBookg         bool                                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 BtchBookg,omitempty"`
	NbOfTxs           Max15NumericText                             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 NbOfTxs"`
	CtrlSum           float64                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CtrlSum,omitempty"`
	TtlIntrBkSttlmAmt ActiveCurrencyAndAmount                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 TtlIntrBkSttlmAmt,omitempty"`
	IntrBkSttlmDt     ISODate                                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 IntrBkSttlmDt,omitempty"`
	SttlmInf          SettlementInformation14                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SttlmInf"`
	PmtTpInf          PaymentTypeInformation22                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PmtTpInf,omitempty"`
	InstgAgt          BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstgAgt,omitempty"`
	InstdAgt          BranchAndFinancialInstitutionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstdAgt,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type LocalInstrument2Choice struct {
	Cd    ExternalLocalInstrument1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type MandateRelatedInformation6 struct {
	MndtId        Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 MndtId,omitempty"`
	DtOfSgntr     ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DtOfSgntr,omitempty"`
	AmdmntInd     bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AmdmntInd,omitempty"`
	AmdmntInfDtls AmendmentInformationDetails6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AmdmntInfDtls,omitempty"`
	ElctrncSgntr  Max1025Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ElctrncSgntr,omitempty"`
	FrstColltnDt  ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 FrstColltnDt,omitempty"`
	FnlColltnDt   ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 FnlColltnDt,omitempty"`
	Frqcy         Frequency1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Frqcy,omitempty"`
}

// Must be at least 1 items long
type Max1025Text string

// Must be at least 1 items long
type Max10Text string

// Must be at least 1 items long
type Max128Text string

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max4Text string

// Must be at least 1 items long
type Max70Text string

type NameAndAddress10 struct {
	Nm  Max140Text     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm"`
	Adr PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Adr"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type OrganisationIdentification4 struct {
	BICOrBEI AnyBICIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 BICOrBEI,omitempty"`
	Othr     []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type Party6Choice struct {
	OrgId  OrganisationIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 OrgId"`
	PrvtId PersonIdentification5       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PrvtId"`
}

type PartyIdentification32 struct {
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm,omitempty"`
	PstlAdr   PostalAddress6  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PstlAdr,omitempty"`
	Id        Party6Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Id,omitempty"`
	CtryOfRes CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CtryOfRes,omitempty"`
	CtctDtls  ContactDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CtctDtls,omitempty"`
}

type PaymentIdentification3 struct {
	InstrId    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstrId,omitempty"`
	EndToEndId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 EndToEndId"`
	TxId       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 TxId"`
	ClrSysRef  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ClrSysRef,omitempty"`
}

type PaymentTypeInformation22 struct {
	InstrPrty Priority2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 InstrPrty,omitempty"`
	ClrChanl  ClearingChannel2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ClrChanl,omitempty"`
	SvcLvl    ServiceLevel8Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SvcLvl,omitempty"`
	LclInstrm LocalInstrument2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 LclInstrm,omitempty"`
	SeqTp     SequenceType1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SeqTp,omitempty"`
	CtgyPurp  CategoryPurpose1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CtgyPurp,omitempty"`
}

type PersonIdentification5 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AdrLine,omitempty"`
}

// May be one of HIGH, NORM
type Priority2Code string

type Purpose2Choice struct {
	Cd    ExternalPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type ReferredDocumentInformation3 struct {
	Tp     ReferredDocumentType2 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Tp,omitempty"`
	Nb     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nb,omitempty"`
	RltdDt ISODate               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RltdDt,omitempty"`
}

type ReferredDocumentType1Choice struct {
	Cd    DocumentType5Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type ReferredDocumentType2 struct {
	CdOrPrtry ReferredDocumentType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdOrPrtry"`
	Issr      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Issr,omitempty"`
}

type RegulatoryAuthority2 struct {
	Nm   Max140Text  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Nm,omitempty"`
	Ctry CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Ctry,omitempty"`
}

type RegulatoryReporting3 struct {
	DbtCdtRptgInd RegulatoryReportingType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DbtCdtRptgInd,omitempty"`
	Authrty       RegulatoryAuthority2             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Authrty,omitempty"`
	Dtls          []StructuredRegulatoryReporting3 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Dtls,omitempty"`
}

// May be one of CRED, DEBT, BOTH
type RegulatoryReportingType1Code string

type RemittanceAmount1 struct {
	DuePyblAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DuePyblAmt,omitempty"`
	DscntApldAmt      ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 DscntApldAmt,omitempty"`
	CdtNoteAmt        ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtNoteAmt,omitempty"`
	TaxAmt            ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RmtdAmt,omitempty"`
}

type RemittanceInformation5 struct {
	Ustrd []Max140Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Ustrd,omitempty"`
	Strd  []StructuredRemittanceInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Strd,omitempty"`
}

type RemittanceLocation2 struct {
	RmtId             Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RmtId,omitempty"`
	RmtLctnMtd        RemittanceLocationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RmtLctnMtd,omitempty"`
	RmtLctnElctrncAdr Max2048Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RmtLctnElctrncAdr,omitempty"`
	RmtLctnPstlAdr    NameAndAddress10              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RmtLctnPstlAdr,omitempty"`
}

// May be one of FAXI, EDIC, URID, EMAL, POST, SMSM
type RemittanceLocationMethod2Code string

// May be one of FRST, RCUR, FNAL, OOFF
type SequenceType1Code string

type ServiceLevel8Choice struct {
	Cd    ExternalServiceLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd"`
	Prtry Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Prtry"`
}

type SettlementInformation14 struct {
	SttlmMtd  SettlementMethod2Code               `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SttlmMtd"`
	SttlmAcct CashAccount16                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 SttlmAcct,omitempty"`
	ClrSys    ClearingSystemIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 ClrSys,omitempty"`
}

// May be one of INDA, INGA, CLRG
type SettlementMethod2Code string

type StructuredRegulatoryReporting3 struct {
	Tp   Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Tp,omitempty"`
	Dt   ISODate                           `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Dt,omitempty"`
	Ctry CountryCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Ctry,omitempty"`
	Cd   Max10Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Cd,omitempty"`
	Amt  ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Amt,omitempty"`
	Inf  []Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Inf,omitempty"`
}

type StructuredRemittanceInformation7 struct {
	RfrdDocInf  []ReferredDocumentInformation3 `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RfrdDocInf,omitempty"`
	RfrdDocAmt  RemittanceAmount1              `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 RfrdDocAmt,omitempty"`
	CdtrRefInf  CreditorReferenceInformation2  `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 CdtrRefInf,omitempty"`
	Invcr       PartyIdentification32          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Invcr,omitempty"`
	Invcee      PartyIdentification32          `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 Invcee,omitempty"`
	AddtlRmtInf []Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:pacs.003.001.02 AddtlRmtInf,omitempty"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
