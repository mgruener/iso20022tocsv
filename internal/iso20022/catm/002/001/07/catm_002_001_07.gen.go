// Code generated by main. DO NOT EDIT.

package catm_002_001_07

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C
type Algorithm18Code string

// May be one of ERS2, ERS1, RPSS, ECC5, ECC1, ECC4, ECC2, ECC3, ERS3, ECP2, ECP3, ECP5
type Algorithm19Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

type AlgorithmIdentification20 struct {
	Algo  Algorithm19Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter11     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

type AlgorithmIdentification23 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

type AlgorithmIdentification24 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Param,omitempty"`
}

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	Rcpt        []Recipient6Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MAC"`
}

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 RltvDstngshdNm"`
}

type ContentInformationType18 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CnttTp"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SgndData,omitempty"`
}

type ContentInformationType19 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CnttTp"`
	EnvlpdData   EnvelopedData5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

// May be one of AQPR, APPR, TXCP, AKCP, DLGT, MGTP, MRPR, SCPR, SWPK, STRP, TRPR, VDPR, PARA, TMSP, CRTF, LOGF, CMRQ
type DataSetCategory12Code string

type DataSetIdentification7 struct {
	Nm      Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Nm,omitempty"`
	Tp      DataSetCategory12Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Tp"`
	Vrsn    Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	CreDtTm ISODateTime           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CreDtTm,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Dgst"`
}

type Document struct {
	MgmtPlanRplcmnt ManagementPlanReplacementV07 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MgmtPlanRplcmnt"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Cntt,omitempty"`
}

type EncryptedContent4 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification24 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcrptdData"`
}

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

type EnvelopedData5 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 OrgtrInf,omitempty"`
	Rcpt       []Recipient6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Rcpt"`
	NcrptdCntt EncryptedContent4      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcrptdCntt,omitempty"`
}

type ErrorAction4 struct {
	ActnRslt  []TerminalManagementActionResult4Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ActnRslt"`
	ActnToPrc TerminalManagementErrorAction2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ActnToPrc"`
}

type GenericIdentification71 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Id"`
	Tp     PartyType5Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Tp,omitempty"`
	Issr   PartyType6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ShrtNm,omitempty"`
}

type GenericIdentification92 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Id"`
	Tp       PartyType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Tp,omitempty"`
	Issr     PartyType6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ShrtNm,omitempty"`
	RmotAccs NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 RmotAccs,omitempty"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Val,omitempty"`
}

type Header27 struct {
	DwnldTrf bool                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DwnldTrf"`
	FrmtVrsn Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 FrmtVrsn"`
	XchgId   float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 XchgId"`
	CreDtTm  ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CreDtTm"`
	InitgPty GenericIdentification71 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 InitgPty"`
	RcptPty  GenericIdentification92 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 RcptPty,omitempty"`
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SrlNb"`
}

type KEK5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification23 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DerivtnId,omitempty"`
}

type KEKIdentifier5 struct {
	KeyId     Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyId"`
	KeyVrsn   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyVrsn"`
	SeqNb     float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DerivtnId,omitempty"`
	Tp        CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Tp,omitempty"`
	Fctn      []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Fctn,omitempty"`
}

type KeyTransport5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

type ManagementPlan7 struct {
	POIId       GenericIdentification71     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 POIId,omitempty"`
	TermnlMgrId GenericIdentification71     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TermnlMgrId"`
	DataSet     TerminalManagementDataSet24 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DataSet"`
}

type ManagementPlanContent7 struct {
	TMChllng        Max140Binary   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TMChllng,omitempty"`
	KeyNcphrmntCert []Max10KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyNcphrmntCert,omitempty"`
	Actn            []TMSAction7   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Actn"`
}

type ManagementPlanReplacementV07 struct {
	Hdr      Header27                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Hdr"`
	MgmtPlan ManagementPlan7          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MgmtPlan"`
	SctyTrlr ContentInformationType18 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SctyTrlr,omitempty"`
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max256Text string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max35Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must match the pattern [0-9]{1,9}
type Max9NumericText string

type MessageItemCondition1 struct {
	ItmId Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ItmId"`
	Cond  MessageItemCondition1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Cond"`
	Val   []Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Val,omitempty"`
}

// May be one of MNDT, CFVL, DFLT, ALWV, IFAV, COPY, UNSP
type MessageItemCondition1Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type NetworkParameters4 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NtwkTp"`
	AdrVal Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AdrVal"`
}

type NetworkParameters5 struct {
	Adr        []NetworkParameters4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SctyPrfl,omitempty"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Cert,omitempty"`
}

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MskGnrtrAlgo,omitempty"`
}

type Parameter11 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TrlrFld,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 BPddg,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo,omitempty"`
}

// May be one of OPOI, ACCP, MERC, ACQR, ITAG, MTMG, TMGT
type PartyType5Code string

// May be one of ACCP, MERC, ACQR, ITAG, MTMG, TMGT
type PartyType6Code string

type ProcessRetry2 struct {
	Dely  Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Dely"`
	MaxNb float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MaxNb,omitempty"`
}

type ProcessTiming3 struct {
	WtgTm   Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 WtgTm,omitempty"`
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Prd,omitempty"`
	MaxNb   float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MaxNb,omitempty"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyIdr"`
}

type Recipient6Choice struct {
	KeyTrnsprt KeyTransport5  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyTrnsprt"`
	KEK        KEK5           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyIdr"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AttrVal"`
}

type SignedData5 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Cert,omitempty"`
	Sgnr        []Signer4                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Sgnr,omitempty"`
}

type Signer4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Vrsn,omitempty"`
	SgnrId      Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Sgntr"`
}

type TMSAction7 struct {
	Tp               TerminalManagementAction4Code              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Tp"`
	RmotAccs         NetworkParameters5                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 RmotAccs,omitempty"`
	Key              []KEKIdentifier5                           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Key,omitempty"`
	TermnlMgrId      GenericIdentification71                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TermnlMgrId,omitempty"`
	TMSPrtcol        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn    Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TMSPrtcolVrsn,omitempty"`
	DataSetId        DataSetIdentification7                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DataSetId,omitempty"`
	CmpntTp          []DataSetCategory12Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 CmpntTp,omitempty"`
	DlgtnScpId       Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DlgtnScpId,omitempty"`
	DlgtnScpDef      Max3000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DlgtnScpDef,omitempty"`
	DlgtnProof       Max5000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 DlgtnProof,omitempty"`
	PrtctdDlgtnProof ContentInformationType19                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 PrtctdDlgtnProof,omitempty"`
	Trggr            TerminalManagementActionTrigger1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Trggr"`
	AddtlPrc         []TerminalManagementAdditionalProcess1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AddtlPrc,omitempty"`
	ReTry            ProcessRetry2                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ReTry,omitempty"`
	TmCond           ProcessTiming3                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TmCond,omitempty"`
	TMChllng         Max140Binary                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 TMChllng,omitempty"`
	KeyNcphrmntCert  []Max10KBinary                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 KeyNcphrmntCert,omitempty"`
	ErrActn          []ErrorAction4                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 ErrActn,omitempty"`
	AddtlInf         []Max3000Binary                            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 AddtlInf,omitempty"`
	MsgItm           []MessageItemCondition1                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 MsgItm,omitempty"`
}

// May be one of DCTV, DELT, DWNL, INST, RSTR, UPLD, UPDT, BIND, RBND, UBND, ACTV
type TerminalManagementAction4Code string

// May be one of ACCD, CNTE, FMTE, INVC, LENE, OVER, MISS, NSUP, SIGE, SUCC, SYNE, TIMO, UKDT, UKRF, INDP, IDMP, DPRU, AERR, CMER, ULER
type TerminalManagementActionResult4Code string

// May be one of DATE, HOST, MANU, SALE
type TerminalManagementActionTrigger1Code string

// May be one of MANC, RCNC, RSRT
type TerminalManagementAdditionalProcess1Code string

type TerminalManagementDataSet24 struct {
	Id      DataSetIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Id"`
	SeqCntr Max9NumericText        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 SeqCntr,omitempty"`
	Cntt    ManagementPlanContent7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.002.001.07 Cntt,omitempty"`
}

// May be one of SDSR, STOP
type TerminalManagementErrorAction2Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}
