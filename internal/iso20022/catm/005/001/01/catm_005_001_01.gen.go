// Code generated by main. DO NOT EDIT.

package catm_005_001_01

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorConfigurationContent4 struct {
	TMSPrtcolParams   []TMSProtocolParameters1           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMSPrtcolParams,omitempty"`
	AcqrrPrtcolParams []AcquirerProtocolParameters7      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AcqrrPrtcolParams,omitempty"`
	MrchntParams      []MerchantConfigurationParameters1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MrchntParams,omitempty"`
	TermnlParams      []PaymentTerminalParameters2       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TermnlParams,omitempty"`
	ApplParams        []ApplicationParameters4           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ApplParams,omitempty"`
	HstComParams      []HostCommunicationParameter3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 HstComParams,omitempty"`
	SctyParams        []SecurityParameters3              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SctyParams,omitempty"`
}

type AcquirerHostConfiguration3 struct {
	HstId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 HstId"`
	MsgToSnd []MessageFunction5Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MsgToSnd,omitempty"`
}

type AcquirerProtocolParameters7 struct {
	AcqrrId        []GenericIdentification53    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AcqrrId"`
	Vrsn           Max256Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	ApplId         []Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ApplId,omitempty"`
	Hst            []AcquirerHostConfiguration3 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Hst,omitempty"`
	OnLineTx       AcquirerProtocolParameters8  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 OnLineTx,omitempty"`
	OffLineTx      AcquirerProtocolParameters8  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 OffLineTx,omitempty"`
	RcncltnXchg    ExchangeConfiguration6       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RcncltnXchg,omitempty"`
	RcncltnByAcqrr bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RcncltnByAcqrr,omitempty"`
	TtlsPerCcy     bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TtlsPerCcy,omitempty"`
	SpltTtls       bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SpltTtls,omitempty"`
	CardDataVrfctn bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CardDataVrfctn,omitempty"`
	NtfyOffLineCxl bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NtfyOffLineCxl,omitempty"`
	BtchTrfCntt    []BatchTransactionType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 BtchTrfCntt,omitempty"`
	FileTrfBtch    bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 FileTrfBtch,omitempty"`
	BtchDgtlSgntr  bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 BtchDgtlSgntr,omitempty"`
	MsgItm         []MessageItemCondition1      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MsgItm,omitempty"`
	PrtctCardData  bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 PrtctCardData"`
}

type AcquirerProtocolParameters8 struct {
	FinCaptr   FinancialCapture1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 FinCaptr"`
	BtchTrf    ExchangeConfiguration6   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 BtchTrf,omitempty"`
	CmpltnXchg ExchangeConfiguration7   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CmpltnXchg,omitempty"`
	CxlXchg    CancellationProcess1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CxlXchg,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5
type Algorithm12Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C
type Algorithm13Code string

// May be one of ERS2, ERS1, RPSS
type Algorithm14Code string

// May be one of EA2C, E3DC, EA9C, EA5C
type Algorithm15Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification11 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
	Param Parameter4     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Param,omitempty"`
}

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Param,omitempty"`
}

type AlgorithmIdentification13 struct {
	Algo  Algorithm13Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
	Param Parameter6      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Param,omitempty"`
}

type AlgorithmIdentification14 struct {
	Algo  Algorithm15Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
	Param Parameter6      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Param,omitempty"`
}

type AlgorithmIdentification15 struct {
	Algo  Algorithm12Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Param,omitempty"`
}

type AlgorithmIdentification16 struct {
	Algo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
}

type AlgorithmIdentification17 struct {
	Algo  Algorithm14Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Algo"`
	Param Parameter8      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Param,omitempty"`
}

type ApplicationParameters4 struct {
	ApplId       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ApplId"`
	Vrsn         Max256Text               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	Params       []Max100KBinary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Params,omitempty"`
	NcrptdParams ContentInformationType10 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptdParams,omitempty"`
}

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	Rcpt        []Recipient4Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Rcpt"`
	MACAlgo     AlgorithmIdentification15 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MAC"`
}

// May be one of DTCT, CNCL, FAIL, DCLN
type BatchTransactionType1Code string

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

// May be one of ADVC, NALW, REQU
type CancellationProcess1Code string

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RltvDstngshdNm"`
}

type ClockSynchronisation1 struct {
	POITmZone Max70Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 POITmZone"`
	SynctnSvr []NetworkParameters2 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SynctnSvr,omitempty"`
}

type ContentInformationType10 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CnttTp"`
	EnvlpdData EnvelopedData4   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 EnvlpdData"`
}

type ContentInformationType12 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CnttTp"`
	EnvlpdData   EnvelopedData4     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AuthntcdData,omitempty"`
	SgndData     SignedData4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SgndData,omitempty"`
	DgstdData    DigestedData4      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

type CryptographicKey5 struct {
	Id         Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Id"`
	AddtlId    Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AddtlId,omitempty"`
	Vrsn       Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	Tp         CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Tp"`
	Fctn       []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Fctn"`
	ActvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ActvtnDt,omitempty"`
	DeactvtnDt ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DeactvtnDt,omitempty"`
	KeyVal     ContentInformationType10  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyVal"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

// May be one of AQPR, APPR, TXCP, AKCP, DLGT, MGTP, MRPR, SCPR, SWPK, STRP, TRPR, VDPR, PARA
type DataSetCategory4Code string

// May be one of AQPR, APPR, MTMG, MRPR, MTOR, SCPR, SWPK, TRPR
type DataSetCategory5Code string

// May be one of ACQP, APPR, APSB, KDWL, KMGT, RPRT, SWPK, TMSP, MRPR, TRPR
type DataSetCategory6Code string

type DataSetIdentification4 struct {
	Nm      Max256Text           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Nm,omitempty"`
	Tp      DataSetCategory4Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Tp"`
	Vrsn    Max256Text           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	CreDtTm ISODateTime          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CreDtTm,omitempty"`
}

type DigestedData4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Dgst"`
}

type Document struct {
	MntncDlgtnReq MaintenanceDelegationRequestV01 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MntncDlgtnReq"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Cntt,omitempty"`
}

type EncryptedContent3 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification14 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CnttNcrptnAlgo"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptdData"`
}

// May be one of TR31, TR34
type EncryptionFormat1Code string

type EnvelopedData4 struct {
	Vrsn       float64            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	Rcpt       []Recipient4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Rcpt"`
	NcrptdCntt EncryptedContent3  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptdCntt,omitempty"`
}

type ErrorAction2 struct {
	ActnRslt  []TerminalManagementActionResult1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ActnRslt"`
	ActnToPrc TerminalManagementErrorAction2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ActnToPrc"`
}

type ExchangeConfiguration6 struct {
	XchgPlcy []ExchangePolicy1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 XchgPlcy"`
	MaxNb    float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MaxNb,omitempty"`
	MaxAmt   float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MaxAmt,omitempty"`
	ReTry    ProcessRetry2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ReTry,omitempty"`
	TmCond   ProcessTiming4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TmCond,omitempty"`
}

type ExchangeConfiguration7 struct {
	XchgPlcy  []ExchangePolicy1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 XchgPlcy"`
	MaxNb     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MaxNb,omitempty"`
	MaxAmt    float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MaxAmt,omitempty"`
	ReTry     ProcessRetry2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ReTry,omitempty"`
	TmCond    ProcessTiming4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TmCond,omitempty"`
	XchgFaild bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 XchgFaild,omitempty"`
	XchgDclnd bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 XchgDclnd,omitempty"`
}

// May be one of ONDM, IMMD, ASAP, AGRP, NBLT, TTLT, CYCL, NONE
type ExchangePolicy1Code string

// May be one of AUTH, COMP, BTCH
type FinancialCapture1Code string

type GenericIdentification53 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Tp,omitempty"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ShrtNm,omitempty"`
}

type GenericIdentification71 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Id"`
	Tp     PartyType5Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Tp,omitempty"`
	Issr   PartyType6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ShrtNm,omitempty"`
}

type GenericIdentification72 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Id"`
	Issr   PartyType6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ShrtNm,omitempty"`
}

type Header16 struct {
	PrtcolVrsn Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 PrtcolVrsn"`
	XchgId     Max3NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 XchgId,omitempty"`
	CreDtTm    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CreDtTm"`
	InitgPty   GenericIdentification72 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 InitgPty"`
	RcptPty    GenericIdentification72 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RcptPty,omitempty"`
}

type HostCommunicationParameter3 struct {
	HstId Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 HstId"`
	Adr   NetworkParameters3 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Adr,omitempty"`
	Key   []KEKIdentifier2   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Key,omitempty"`
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SrlNb"`
}

type KEK4 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DerivtnId,omitempty"`
}

type KeyTransport4 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification11 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

type LocalDateTime1 struct {
	FrDtTm    ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 FrDtTm,omitempty"`
	ToDtTm    ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ToDtTm,omitempty"`
	UTCOffset float64     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 UTCOffset"`
}

type MaintenanceDelegateAction1 struct {
	PrdcActn      bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 PrdcActn,omitempty"`
	TMRmotAccs    NetworkParameters3     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMRmotAccs,omitempty"`
	TMSPrtcol     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMSPrtcolVrsn,omitempty"`
	DataSetId     DataSetIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DataSetId,omitempty"`
	ReTry         ProcessRetry2          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ReTry,omitempty"`
	AddtlInf      []Max3000Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AddtlInf,omitempty"`
	Actn          []TMSAction4           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Actn,omitempty"`
}

type MaintenanceDelegation1 struct {
	MntncSvc        []DataSetCategory6Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MntncSvc"`
	PrtlDlgtn       bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 PrtlDlgtn,omitempty"`
	POISubset       []Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 POISubset,omitempty"`
	DlgtdActn       MaintenanceDelegateAction1              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DlgtdActn,omitempty"`
	ParamsSubsetId  Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ParamsSubsetId,omitempty"`
	ParamsSubsetDef Max3000Binary                           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ParamsSubsetDef,omitempty"`
	Cert            []Max5000Binary                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Cert,omitempty"`
	POIIdAssoctn    []MaintenanceIdentificationAssociation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 POIIdAssoctn,omitempty"`
	SmmtrcKey       []KEKIdentifier2                        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SmmtrcKey,omitempty"`
	ParamDataSet    TerminalManagementDataSet14             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ParamDataSet,omitempty"`
}

type MaintenanceDelegationRequest1 struct {
	TMId      GenericIdentification72  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMId"`
	MstrTMId  GenericIdentification72  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MstrTMId,omitempty"`
	ReqdDlgtn []MaintenanceDelegation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ReqdDlgtn"`
}

type MaintenanceDelegationRequestV01 struct {
	Hdr           Header16                      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Hdr"`
	MntncDlgtnReq MaintenanceDelegationRequest1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MntncDlgtnReq"`
	SctyTrlr      ContentInformationType12      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SctyTrlr"`
}

type MaintenanceIdentificationAssociation1 struct {
	MstrTMId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MstrTMId"`
	TMId     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMId"`
}

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max256Text string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must match the pattern [0-9]{1,9}
type Max9NumericText string

type MerchantConfigurationParameters1 struct {
	MrchntId Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MrchntId,omitempty"`
	Vrsn     Max256Text     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	Params   Max10000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Params"`
}

// May be one of FAUQ, CCAQ, CMPV, DGNP, RCLQ, CCAV, BTCH, FRVA, AUTQ, FCMV, REVV, DCCQ
type MessageFunction5Code string

type MessageItemCondition1 struct {
	ItmId Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ItmId"`
	Cond  MessageItemCondition1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Cond"`
	Val   []Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Val,omitempty"`
}

// May be one of MNDT, CFVL, DFLT, ALWV, IFAV, COPY, UNSP
type MessageItemCondition1Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type NetworkParameters2 struct {
	Adr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Adr"`
	PortNb float64   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 PortNb,omitempty"`
	Dely   ISOTime   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Dely,omitempty"`
}

type NetworkParameters3 struct {
	Adr        []NetworkParameters4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AccsCd,omitempty"`
	SvrCert    []Max3000Binary      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SvrCertIdr,omitempty"`
}

type NetworkParameters4 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NtwkTp"`
	AdrVal Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AdrVal"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

type Parameter4 struct {
	NcrptnFrmt   EncryptionFormat1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm11Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MskGnrtrAlgo,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstAlgo,omitempty"`
}

type Parameter6 struct {
	NcrptnFrmt   EncryptionFormat1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 BPddg,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 BPddg,omitempty"`
}

type Parameter8 struct {
	DgstAlgo     Algorithm11Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TrlrFld,omitempty"`
}

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of OPOI, ACCP, MERC, ACQR, ITAG, MTMG, TMGT
type PartyType5Code string

// May be one of ACCP, MERC, ACQR, ITAG, MTMG, TMGT
type PartyType6Code string

type PaymentTerminalParameters2 struct {
	VndrId     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 VndrId,omitempty"`
	Vrsn       Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	ClckSynctn ClockSynchronisation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ClckSynctn,omitempty"`
	TmZoneLine []Max70Text           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TmZoneLine,omitempty"`
	LclDtTm    []LocalDateTime1      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 LclDtTm,omitempty"`
	OthrParams Max10000Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 OthrParams,omitempty"`
}

type ProcessRetry2 struct {
	Dely  Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Dely"`
	MaxNb float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MaxNb,omitempty"`
}

type ProcessTiming3 struct {
	WtgTm   Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 WtgTm,omitempty"`
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Prd,omitempty"`
	MaxNb   float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MaxNb,omitempty"`
}

type ProcessTiming4 struct {
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Prd,omitempty"`
}

type Recipient4Choice struct {
	KeyTrnsprt KeyTransport4  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyTrnsprt"`
	KEK        KEK4           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyIdr"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyIdr"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AttrVal"`
}

type SecurityParameters3 struct {
	Vrsn      Max256Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	POIChllng Max140Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 POIChllng,omitempty"`
	TMChllng  Max140Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMChllng,omitempty"`
	SmmtrcKey []CryptographicKey5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SmmtrcKey,omitempty"`
}

type SignedData4 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 NcpsltdCntt"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Cert,omitempty"`
	Sgnr        []Signer3                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Sgnr"`
}

type Signer3 struct {
	Vrsn      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn,omitempty"`
	SgnrId    Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SgnrId,omitempty"`
	DgstAlgo  AlgorithmIdentification16 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DgstAlgo"`
	SgntrAlgo AlgorithmIdentification17 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SgntrAlgo"`
	Sgntr     Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Sgntr"`
}

type TMSAction4 struct {
	Tp               TerminalManagementAction1Code              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Tp"`
	RmotAccs         NetworkParameters3                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RmotAccs,omitempty"`
	TermnlMgrId      GenericIdentification71                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TermnlMgrId,omitempty"`
	TMSPrtcol        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn    Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMSPrtcolVrsn,omitempty"`
	DataSetId        DataSetIdentification4                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DataSetId,omitempty"`
	CmpntTp          []DataSetCategory4Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 CmpntTp,omitempty"`
	ParamsSubsetId   Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ParamsSubsetId,omitempty"`
	ParamsSubsetDef  Max3000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ParamsSubsetDef,omitempty"`
	DlgtnProof       Max5000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 DlgtnProof,omitempty"`
	PrtctdDlgtnProof ContentInformationType12                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 PrtctdDlgtnProof,omitempty"`
	Trggr            TerminalManagementActionTrigger1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Trggr"`
	AddtlPrc         []TerminalManagementAdditionalProcess1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AddtlPrc,omitempty"`
	ReTry            ProcessRetry2                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ReTry,omitempty"`
	TmCond           ProcessTiming3                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TmCond,omitempty"`
	TMChllng         Max140Binary                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TMChllng,omitempty"`
	KeyNcphrmntCert  []Max10KBinary                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 KeyNcphrmntCert,omitempty"`
	ErrActn          []ErrorAction2                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ErrActn,omitempty"`
	AddtlInf         []Max3000Binary                            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 AddtlInf,omitempty"`
}

type TMSProtocolParameters1 struct {
	TermnlMgrId GenericIdentification71 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 TermnlMgrId"`
	MntncSvc    []DataSetCategory5Code  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 MntncSvc"`
	Vrsn        Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Vrsn"`
	ApplId      []Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 ApplId,omitempty"`
	HstAdr      NetworkParameters3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 HstAdr,omitempty"`
	HstKey      []KEKIdentifier2        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 HstKey,omitempty"`
	POIId       Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 POIId,omitempty"`
	InitgPtyId  Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 InitgPtyId,omitempty"`
	RcptPtyId   Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 RcptPtyId,omitempty"`
}

// May be one of ACTV, DCTV, DELT, DWNL, INST, RSTR, UPLD
type TerminalManagementAction1Code string

// May be one of ACCD, CNTE, FMTE, INVC, LENE, OVER, MISS, NSUP, SIGE, SUCC, SYNE, TIMO, UKDT, UKRF
type TerminalManagementActionResult1Code string

// May be one of DATE, HOST, MANU, SALE
type TerminalManagementActionTrigger1Code string

// May be one of MANC, RCNC, RSRT
type TerminalManagementAdditionalProcess1Code string

type TerminalManagementDataSet14 struct {
	Id      DataSetIdentification4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Id"`
	SeqCntr Max9NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 SeqCntr,omitempty"`
	Cntt    AcceptorConfigurationContent4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.01 Cntt"`
}

// May be one of SDSR, STOP
type TerminalManagementErrorAction2Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
