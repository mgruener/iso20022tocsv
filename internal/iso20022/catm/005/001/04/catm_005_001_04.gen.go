// Code generated by main. DO NOT EDIT.

package catm_005_001_04

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorConfigurationContent7 struct {
	RplcCfgtn         bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RplcCfgtn,omitempty"`
	TMSPrtcolParams   []TMSProtocolParameters3           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMSPrtcolParams,omitempty"`
	AcqrrPrtcolParams []AcquirerProtocolParameters11     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AcqrrPrtcolParams,omitempty"`
	MrchntParams      []MerchantConfigurationParameters3 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MrchntParams,omitempty"`
	TermnlParams      []PaymentTerminalParameters5       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TermnlParams,omitempty"`
	ApplParams        []ApplicationParameters7           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ApplParams,omitempty"`
	HstComParams      []HostCommunicationParameter5      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 HstComParams,omitempty"`
	SctyParams        []SecurityParameters11             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SctyParams,omitempty"`
	SaleToPOIParams   []SaleToPOIProtocolParameter1      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SaleToPOIParams,omitempty"`
}

type AcquirerHostConfiguration5 struct {
	HstId    Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 HstId"`
	MsgToSnd []MessageFunction15Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MsgToSnd,omitempty"`
}

type AcquirerProtocolParameters11 struct {
	ActnTp         TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	AcqrrId        []GenericIdentification53     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AcqrrId"`
	Vrsn           Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn"`
	ApplId         []Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ApplId,omitempty"`
	Hst            []AcquirerHostConfiguration5  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Hst,omitempty"`
	OnLineTx       AcquirerProtocolParameters8   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 OnLineTx,omitempty"`
	OffLineTx      AcquirerProtocolParameters8   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 OffLineTx,omitempty"`
	RcncltnXchg    ExchangeConfiguration6        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RcncltnXchg,omitempty"`
	RcncltnByAcqrr bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RcncltnByAcqrr,omitempty"`
	TtlsPerCcy     bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TtlsPerCcy,omitempty"`
	SpltTtls       bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SpltTtls,omitempty"`
	RcncltnErr     bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RcncltnErr,omitempty"`
	CardDataVrfctn bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CardDataVrfctn,omitempty"`
	NtfyOffLineCxl bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NtfyOffLineCxl,omitempty"`
	BtchTrfCntt    []BatchTransactionType1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 BtchTrfCntt,omitempty"`
	FileTrfBtch    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 FileTrfBtch,omitempty"`
	BtchDgtlSgntr  bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 BtchDgtlSgntr,omitempty"`
	MsgItm         []MessageItemCondition1       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MsgItm,omitempty"`
	PrtctCardData  bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PrtctCardData"`
	PrvtCardData   bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PrvtCardData,omitempty"`
	MndtrySctyTrlr bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MndtrySctyTrlr,omitempty"`
}

type AcquirerProtocolParameters8 struct {
	FinCaptr   FinancialCapture1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 FinCaptr"`
	BtchTrf    ExchangeConfiguration6   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 BtchTrf,omitempty"`
	CmpltnXchg ExchangeConfiguration7   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CmpltnXchg,omitempty"`
	CxlXchg    CancellationProcess1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CxlXchg,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C
type Algorithm18Code string

// May be one of ERS2, ERS1, RPSS, ECC5, ECC1, ECC4, ECC2, ECC3, ERS3, ECP2, ECP3, ECP5
type Algorithm19Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type AlgorithmIdentification20 struct {
	Algo  Algorithm19Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter11     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type AlgorithmIdentification23 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type AlgorithmIdentification24 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Param,omitempty"`
}

type ApplicationParameters7 struct {
	ActnTp       TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	ApplId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ApplId"`
	Vrsn         Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	Params       []Max100KBinary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Params,omitempty"`
	NcrptdParams ContentInformationType17      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptdParams,omitempty"`
}

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	Rcpt        []Recipient6Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MAC"`
}

// May be one of DTCT, CNCL, FAIL, DCLN
type BatchTransactionType1Code string

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

// May be one of ADVC, NALW, REQU
type CancellationProcess1Code string

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RltvDstngshdNm"`
}

type ClockSynchronisation2 struct {
	POITmZone Max70Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 POITmZone"`
	SynctnSvr []NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SynctnSvr,omitempty"`
	Dely      ISOTime              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Dely,omitempty"`
}

type ContentInformationType17 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CnttTp"`
	EnvlpdData EnvelopedData5   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 EnvlpdData"`
}

type ContentInformationType18 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CnttTp"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SgndData,omitempty"`
}

type ContentInformationType19 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CnttTp"`
	EnvlpdData   EnvelopedData5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

type CryptographicKey13 struct {
	Id           Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Id"`
	AddtlId      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AddtlId,omitempty"`
	Vrsn         Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn"`
	Tp           CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp,omitempty"`
	Fctn         []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Fctn,omitempty"`
	ActvtnDt     ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActvtnDt,omitempty"`
	DeactvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DeactvtnDt,omitempty"`
	KeyVal       ContentInformationType19  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyVal,omitempty"`
	KeyChckVal   Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyChckVal,omitempty"`
	AddtlMgmtInf []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AddtlMgmtInf,omitempty"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

// May be one of AQPR, APPR, MTMG, MRPR, MTOR, SCPR, SWPK, TRPR, CRTF, TMSP
type DataSetCategory10Code string

// May be one of AQPR, APPR, TXCP, AKCP, DLGT, MGTP, MRPR, SCPR, SWPK, STRP, TRPR, VDPR, PARA, TMSP, CRTF, LOGF, CMRQ
type DataSetCategory12Code string

// May be one of ACQP, APPR, APSB, KDWL, KMGT, RPRT, SWPK, TMSP, MRPR, TRPR, CRTF, SACP, SAPR
type DataSetCategory13Code string

type DataSetIdentification7 struct {
	Nm      Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Nm,omitempty"`
	Tp      DataSetCategory12Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp"`
	Vrsn    Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	CreDtTm ISODateTime           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CreDtTm,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Dgst"`
}

type Document struct {
	MntncDlgtnReq MaintenanceDelegationRequestV04 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MntncDlgtnReq"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Cntt,omitempty"`
}

type EncryptedContent4 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification24 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptdData"`
}

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

type EnvelopedData5 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 OrgtrInf,omitempty"`
	Rcpt       []Recipient6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Rcpt"`
	NcrptdCntt EncryptedContent4      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptdCntt,omitempty"`
}

type ErrorAction4 struct {
	ActnRslt  []TerminalManagementActionResult4Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnRslt"`
	ActnToPrc TerminalManagementErrorAction2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnToPrc"`
}

type ExchangeConfiguration6 struct {
	XchgPlcy []ExchangePolicy1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 XchgPlcy"`
	MaxNb    float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MaxNb,omitempty"`
	MaxAmt   float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MaxAmt,omitempty"`
	ReTry    ProcessRetry2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ReTry,omitempty"`
	TmCond   ProcessTiming4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TmCond,omitempty"`
}

type ExchangeConfiguration7 struct {
	XchgPlcy  []ExchangePolicy1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 XchgPlcy"`
	MaxNb     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MaxNb,omitempty"`
	MaxAmt    float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MaxAmt,omitempty"`
	ReTry     ProcessRetry2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ReTry,omitempty"`
	TmCond    ProcessTiming4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TmCond,omitempty"`
	XchgFaild bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 XchgFaild,omitempty"`
	XchgDclnd bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 XchgDclnd,omitempty"`
}

// May be one of ONDM, IMMD, ASAP, AGRP, NBLT, TTLT, CYCL, NONE
type ExchangePolicy1Code string

// May be one of AUTH, COMP, BTCH
type FinancialCapture1Code string

type GenericIdentification53 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp,omitempty"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ShrtNm,omitempty"`
}

type GenericIdentification71 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Id"`
	Tp     PartyType5Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp,omitempty"`
	Issr   PartyType6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ShrtNm,omitempty"`
}

type GenericIdentification72 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Id"`
	Issr   PartyType6Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ShrtNm,omitempty"`
}

type GenericIdentification93 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Id"`
	Issr     PartyType6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ShrtNm,omitempty"`
	RmotAccs NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RmotAccs,omitempty"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Val,omitempty"`
}

type Header29 struct {
	PrtcolVrsn Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PrtcolVrsn"`
	XchgId     float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 XchgId,omitempty"`
	CreDtTm    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CreDtTm"`
	InitgPty   GenericIdentification72 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 InitgPty"`
	RcptPty    GenericIdentification93 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RcptPty,omitempty"`
}

type HostCommunicationParameter5 struct {
	ActnTp       TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	HstId        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 HstId"`
	Adr          NetworkParameters5            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Adr,omitempty"`
	Key          []KEKIdentifier5              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Key,omitempty"`
	NtwkSvcPrvdr NetworkParameters5            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NtwkSvcPrvdr,omitempty"`
	PhysIntrfc   PhysicalInterfaceParameter1   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PhysIntrfc,omitempty"`
}

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SrlNb"`
}

type KEK5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification23 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DerivtnId,omitempty"`
}

type KEKIdentifier5 struct {
	KeyId     Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyId"`
	KeyVrsn   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyVrsn"`
	SeqNb     float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DerivtnId,omitempty"`
	Tp        CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp,omitempty"`
	Fctn      []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Fctn,omitempty"`
}

type KeyTransport5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

type LocalDateTime1 struct {
	FrDtTm    ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 FrDtTm,omitempty"`
	ToDtTm    ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ToDtTm,omitempty"`
	UTCOffset float64     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 UTCOffset"`
}

type MaintenanceDelegateAction4 struct {
	PrdcActn      bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PrdcActn,omitempty"`
	TMRmotAccs    NetworkParameters5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMRmotAccs,omitempty"`
	TMSPrtcol     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMSPrtcolVrsn,omitempty"`
	DataSetId     DataSetIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DataSetId,omitempty"`
	ReTry         ProcessRetry2          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ReTry,omitempty"`
	AddtlInf      []Max3000Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AddtlInf,omitempty"`
	Actn          []TMSAction7           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Actn,omitempty"`
}

type MaintenanceDelegation7 struct {
	DlgtnTp      TerminalManagementAction3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtnTp"`
	MntncSvc     []DataSetCategory13Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MntncSvc"`
	PrtlDlgtn    bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PrtlDlgtn,omitempty"`
	POISubset    []Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 POISubset,omitempty"`
	DlgtdActn    MaintenanceDelegateAction4              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtdActn,omitempty"`
	DlgtnScpId   Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtnScpId,omitempty"`
	DlgtnScpDef  Max3000Binary                           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtnScpDef,omitempty"`
	Cert         []Max10KBinary                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Cert,omitempty"`
	POIIdAssoctn []MaintenanceIdentificationAssociation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 POIIdAssoctn,omitempty"`
	SmmtrcKey    []KEKIdentifier5                        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SmmtrcKey,omitempty"`
	ParamDataSet TerminalManagementDataSet23             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ParamDataSet,omitempty"`
}

type MaintenanceDelegationRequest4 struct {
	TMId      GenericIdentification72  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMId"`
	MstrTMId  GenericIdentification72  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MstrTMId,omitempty"`
	ReqdDlgtn []MaintenanceDelegation7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ReqdDlgtn"`
}

type MaintenanceDelegationRequestV04 struct {
	Hdr           Header29                      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Hdr,omitempty"`
	MntncDlgtnReq MaintenanceDelegationRequest4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MntncDlgtnReq"`
	SctyTrlr      ContentInformationType18      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SctyTrlr"`
}

type MaintenanceIdentificationAssociation1 struct {
	MstrTMId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MstrTMId"`
	TMId     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMId"`
}

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max256Text string

type Max2KBinary []byte

func (t *Max2KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max2KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max35Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must match the pattern [0-9]{1,9}
type Max9NumericText string

type MerchantConfigurationParameters3 struct {
	ActnTp     TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	MrchntId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MrchntId,omitempty"`
	Vrsn       Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	Prxy       NetworkParameters6            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Prxy,omitempty"`
	OthrParams Max10000Binary                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 OthrParams,omitempty"`
}

// May be one of FAUQ, CCAQ, CMPV, DGNP, RCLQ, CCAV, BTCH, FRVA, AUTQ, FCMV, DCCQ, RVRA, DCAV
type MessageFunction15Code string

type MessageItemCondition1 struct {
	ItmId Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ItmId"`
	Cond  MessageItemCondition1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Cond"`
	Val   []Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Val,omitempty"`
}

// May be one of MNDT, CFVL, DFLT, ALWV, IFAV, COPY, UNSP
type MessageItemCondition1Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must be at least 3 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type NetworkParameters4 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NtwkTp"`
	AdrVal Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AdrVal"`
}

type NetworkParameters5 struct {
	Adr        []NetworkParameters4 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SctyPrfl,omitempty"`
}

type NetworkParameters6 struct {
	Tp   NetworkType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp"`
	Accs NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Accs"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

// May be one of SCK5, SCK4, HTTP
type NetworkType2Code string

type Organisation26 struct {
	CmonNm       Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CmonNm"`
	Adr          Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Adr,omitempty"`
	CtryCd       ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CtryCd"`
	MrchntCtgyCd Min3Max4Text           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MrchntCtgyCd"`
	RegdIdr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RegdIdr"`
}

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Cert,omitempty"`
}

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MskGnrtrAlgo,omitempty"`
}

type Parameter11 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TrlrFld,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 BPddg,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo,omitempty"`
}

// May be one of PGRP, PSYS, PSNG
type PartyType15Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of OPOI, ACCP, MERC, ACQR, ITAG, MTMG, TMGT
type PartyType5Code string

// May be one of ACCP, MERC, ACQR, ITAG, MTMG, TMGT
type PartyType6Code string

type PaymentTerminalParameters5 struct {
	ActnTp     TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	VndrId     Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 VndrId,omitempty"`
	Vrsn       Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	ClckSynctn ClockSynchronisation2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ClckSynctn,omitempty"`
	TmZoneLine []Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TmZoneLine,omitempty"`
	LclDtTm    []LocalDateTime1              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 LclDtTm,omitempty"`
	OthrParams Max10000Binary                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 OthrParams,omitempty"`
}

type PhysicalInterfaceParameter1 struct {
	IntrfcNm    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 IntrfcNm"`
	IntrfcTp    POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 IntrfcTp,omitempty"`
	UsrNm       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 UsrNm,omitempty"`
	AccsCd      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AccsCd,omitempty"`
	SctyPrfl    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SctyPrfl,omitempty"`
	AddtlParams Max2KBinary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AddtlParams,omitempty"`
}

type ProcessRetry2 struct {
	Dely  Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Dely"`
	MaxNb float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MaxNb,omitempty"`
}

type ProcessTiming3 struct {
	WtgTm   Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 WtgTm,omitempty"`
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Prd,omitempty"`
	MaxNb   float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MaxNb,omitempty"`
}

type ProcessTiming4 struct {
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Prd,omitempty"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyIdr"`
}

type Recipient6Choice struct {
	KeyTrnsprt KeyTransport5  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyTrnsprt"`
	KEK        KEK5           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyIdr"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AttrVal"`
}

type SaleToPOIProtocolParameter1 struct {
	ActnTp      TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	MrchntId    Organisation26                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MrchntId,omitempty"`
	Vrsn        Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn"`
	HstId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 HstId"`
	MrchntPOIId Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MrchntPOIId,omitempty"`
	SaleId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SaleId,omitempty"`
}

type SecurityParameters11 struct {
	ActnTp    TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	Vrsn      Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn"`
	POIChllng Max140Binary                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 POIChllng,omitempty"`
	TMChllng  Max140Binary                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMChllng,omitempty"`
	SctyElmt  []CryptographicKey13          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SctyElmt,omitempty"`
}

type SignedData5 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Cert,omitempty"`
	Sgnr        []Signer4                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Sgnr,omitempty"`
}

type Signer4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn,omitempty"`
	SgnrId      Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Sgntr"`
}

type TMSAction7 struct {
	Tp               TerminalManagementAction4Code              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Tp"`
	RmotAccs         NetworkParameters5                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RmotAccs,omitempty"`
	Key              []KEKIdentifier5                           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Key,omitempty"`
	TermnlMgrId      GenericIdentification71                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TermnlMgrId,omitempty"`
	TMSPrtcol        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn    Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMSPrtcolVrsn,omitempty"`
	DataSetId        DataSetIdentification7                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DataSetId,omitempty"`
	CmpntTp          []DataSetCategory12Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CmpntTp,omitempty"`
	DlgtnScpId       Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtnScpId,omitempty"`
	DlgtnScpDef      Max3000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtnScpDef,omitempty"`
	DlgtnProof       Max5000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 DlgtnProof,omitempty"`
	PrtctdDlgtnProof ContentInformationType19                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 PrtctdDlgtnProof,omitempty"`
	Trggr            TerminalManagementActionTrigger1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Trggr"`
	AddtlPrc         []TerminalManagementAdditionalProcess1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AddtlPrc,omitempty"`
	ReTry            ProcessRetry2                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ReTry,omitempty"`
	TmCond           ProcessTiming3                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TmCond,omitempty"`
	TMChllng         Max140Binary                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TMChllng,omitempty"`
	KeyNcphrmntCert  []Max10KBinary                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 KeyNcphrmntCert,omitempty"`
	ErrActn          []ErrorAction4                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ErrActn,omitempty"`
	AddtlInf         []Max3000Binary                            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 AddtlInf,omitempty"`
	MsgItm           []MessageItemCondition1                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MsgItm,omitempty"`
}

type TMSProtocolParameters3 struct {
	ActnTp      TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ActnTp"`
	TermnlMgrId GenericIdentification71       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 TermnlMgrId"`
	MntncSvc    []DataSetCategory10Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MntncSvc"`
	Vrsn        Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Vrsn"`
	ApplId      []Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 ApplId,omitempty"`
	HstId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 HstId"`
	POIId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 POIId,omitempty"`
	InitgPtyId  Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 InitgPtyId,omitempty"`
	RcptPtyId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 RcptPtyId,omitempty"`
	FileTrf     bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 FileTrf,omitempty"`
	MsgItm      []MessageItemCondition1       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 MsgItm,omitempty"`
}

// May be one of CREA, DELT, UPDT
type TerminalManagementAction3Code string

// May be one of DCTV, DELT, DWNL, INST, RSTR, UPLD, UPDT, BIND, RBND, UBND, ACTV
type TerminalManagementAction4Code string

// May be one of ACCD, CNTE, FMTE, INVC, LENE, OVER, MISS, NSUP, SIGE, SUCC, SYNE, TIMO, UKDT, UKRF, INDP, IDMP, DPRU, AERR, CMER, ULER
type TerminalManagementActionResult4Code string

// May be one of DATE, HOST, MANU, SALE
type TerminalManagementActionTrigger1Code string

// May be one of MANC, RCNC, RSRT
type TerminalManagementAdditionalProcess1Code string

type TerminalManagementDataSet23 struct {
	Id       DataSetIdentification7        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Id"`
	SeqCntr  Max9NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 SeqCntr,omitempty"`
	POIId    []GenericIdentification71     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 POIId,omitempty"`
	CfgtnScp PartyType15Code               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 CfgtnScp,omitempty"`
	Cntt     AcceptorConfigurationContent7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.04 Cntt"`
}

// May be one of SDSR, STOP
type TerminalManagementErrorAction2Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
