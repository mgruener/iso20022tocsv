// Code generated by main. DO NOT EDIT.

package catm_005_001_06

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorConfigurationContent9 struct {
	RplcCfgtn         bool                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RplcCfgtn,omitempty"`
	TMSPrtcolParams   []TMSProtocolParameters5           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMSPrtcolParams,omitempty"`
	AcqrrPrtcolParams []AcquirerProtocolParameters13     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AcqrrPrtcolParams,omitempty"`
	MrchntParams      []MerchantConfigurationParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MrchntParams,omitempty"`
	TermnlParams      []PaymentTerminalParameters7       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TermnlParams,omitempty"`
	ApplParams        []ApplicationParameters9           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ApplParams,omitempty"`
	HstComParams      []HostCommunicationParameter6      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 HstComParams,omitempty"`
	SctyParams        []SecurityParameters12             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SctyParams,omitempty"`
	SaleToPOIParams   []SaleToPOIProtocolParameter1      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SaleToPOIParams,omitempty"`
	TermnlPackg       []TerminalPackageType1             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TermnlPackg,omitempty"`
}

type AcceptorConfigurationDataSet1 struct {
	Id       DataSetIdentification8        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Id"`
	SeqCntr  Max9NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SeqCntr,omitempty"`
	POIId    []GenericIdentification176    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POIId,omitempty"`
	CfgtnScp PartyType15Code               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CfgtnScp,omitempty"`
	Cntt     AcceptorConfigurationContent9 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Cntt"`
}

type AcquirerHostConfiguration7 struct {
	HstId      Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 HstId"`
	MsgToSnd   []MessageFunction40Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MsgToSnd,omitempty"`
	PrtcolVrsn Max8Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtcolVrsn,omitempty"`
}

type AcquirerProtocolExchangeBehavior1 struct {
	FinCaptr   FinancialCapture1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 FinCaptr"`
	BtchTrf    ExchangeConfiguration8   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 BtchTrf,omitempty"`
	CmpltnXchg ExchangeConfiguration8   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CmpltnXchg,omitempty"`
	CxlXchg    CancellationProcess2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CxlXchg,omitempty"`
}

type AcquirerProtocolParameters13 struct {
	ActnTp         TerminalManagementAction3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	AcqrrId        []GenericIdentification176        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AcqrrId"`
	Vrsn           Max256Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn"`
	ApplId         []Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ApplId,omitempty"`
	Hst            []AcquirerHostConfiguration7      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Hst,omitempty"`
	OnLineTx       AcquirerProtocolExchangeBehavior1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OnLineTx,omitempty"`
	OffLineTx      AcquirerProtocolExchangeBehavior1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OffLineTx,omitempty"`
	RcncltnXchg    ExchangeConfiguration8            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RcncltnXchg,omitempty"`
	RcncltnByAcqrr bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RcncltnByAcqrr,omitempty"`
	TtlsPerCcy     bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TtlsPerCcy,omitempty"`
	SpltTtls       bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SpltTtls,omitempty"`
	RcncltnErr     bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RcncltnErr,omitempty"`
	CardDataVrfctn bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CardDataVrfctn,omitempty"`
	NtfyOffLineCxl bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NtfyOffLineCxl,omitempty"`
	BtchTrfCntt    []BatchTransactionType1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 BtchTrfCntt,omitempty"`
	FileTrfBtch    bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 FileTrfBtch,omitempty"`
	BtchDgtlSgntr  bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 BtchDgtlSgntr,omitempty"`
	MsgItm         []MessageItemCondition1           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MsgItm,omitempty"`
	PrtctCardData  bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtctCardData"`
	PrvtCardData   bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrvtCardData,omitempty"`
	MndtrySctyTrlr bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MndtrySctyTrlr,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of ERS2, ERS1, RPSS, ECC5, ECC1, ECC4, ECC2, ECC3, ERS3, ECP2, ECP3, ECP5
type Algorithm19Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA2, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C, UKA1, UKA3
type Algorithm24Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Param,omitempty"`
}

type AlgorithmIdentification20 struct {
	Algo  Algorithm19Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
	Param Parameter11     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Param,omitempty"`
}

type AlgorithmIdentification29 struct {
	Algo  Algorithm24Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Param,omitempty"`
}

type ApplicationParameters9 struct {
	ActnTp       TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	ApplId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ApplId"`
	Vrsn         Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	ParamFrmtIdr Max8Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ParamFrmtIdr,omitempty"`
	Params       []Max100KBinary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Params,omitempty"`
	NcrptdParams ContentInformationType22      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptdParams,omitempty"`
}

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData6 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	Rcpt        []Recipient8Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MAC"`
}

// May be one of DTCT, CNCL, FAIL, DCLN
type BatchTransactionType1Code string

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

// May be one of ADVC, NALW, REQU, APPL
type CancellationProcess2Code string

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RltvDstngshdNm"`
}

type ClockSynchronisation3 struct {
	POITmZone Max70Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POITmZone"`
	SynctnSvr []NetworkParameters7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SynctnSvr,omitempty"`
	Dely      ISOTime              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Dely,omitempty"`
}

type ContentInformationType21 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CnttTp"`
	AuthntcdData AuthenticatedData6 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SgndData,omitempty"`
}

type ContentInformationType22 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CnttTp"`
	EnvlpdData EnvelopedData7   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 EnvlpdData"`
}

type ContentInformationType23 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CnttTp"`
	EnvlpdData   EnvelopedData7     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData6 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

type CryptographicKey14 struct {
	Id           Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Id"`
	AddtlId      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AddtlId,omitempty"`
	Nm           Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Nm,omitempty"`
	SctyPrfl     Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SctyPrfl,omitempty"`
	ItmNb        Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ItmNb,omitempty"`
	Vrsn         Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn"`
	Tp           CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp,omitempty"`
	Fctn         []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Fctn,omitempty"`
	ActvtnDt     ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActvtnDt,omitempty"`
	DeactvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DeactvtnDt,omitempty"`
	KeyVal       ContentInformationType23  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyVal,omitempty"`
	KeyChckVal   Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyChckVal,omitempty"`
	AddtlMgmtInf []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AddtlMgmtInf,omitempty"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

// May be one of AQPR, APPR, MTMG, MRPR, MTOR, SCPR, SWPK, TRPR, CRTF, TMSP
type DataSetCategory10Code string

// May be one of AQPR, APPR, TXCP, AKCP, DLGT, MGTP, MRPR, SCPR, SWPK, STRP, TRPR, VDPR, PARA, TMSP, CRTF, LOGF, CMRQ, MDFL, SOFT, CONF, RPFL
type DataSetCategory14Code string

// May be one of ACQP, APPR, APSB, KDWL, KMGT, RPRT, SWPK, TMSP, MRPR, TRPR, CRTF, SACP, SAPR, LOGF, RPFL, CONF
type DataSetCategory15Code string

type DataSetIdentification8 struct {
	Nm      Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Nm,omitempty"`
	Tp      DataSetCategory14Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp"`
	Vrsn    Max256Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	CreDtTm ISODateTime           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CreDtTm,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Dgst"`
}

type Document struct {
	MntncDlgtnReq MaintenanceDelegationRequestV06 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MntncDlgtnReq"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Cntt,omitempty"`
}

type EncryptedContent6 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptdData"`
}

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

type EnvelopedData7 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OrgtrInf,omitempty"`
	Rcpt       []Recipient8Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Rcpt"`
	NcrptdCntt EncryptedContent6      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptdCntt,omitempty"`
}

type ErrorAction4 struct {
	ActnRslt  []TerminalManagementActionResult4Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnRslt"`
	ActnToPrc TerminalManagementErrorAction2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnToPrc"`
}

type ExchangeConfiguration8 struct {
	XchgPlcy []ExchangePolicy2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 XchgPlcy"`
	MaxNb    float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MaxNb,omitempty"`
	MaxAmt   float64               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MaxAmt,omitempty"`
	ReTry    ProcessRetry2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ReTry,omitempty"`
	TmCond   ProcessTiming4        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TmCond,omitempty"`
}

// May be one of ONDM, IMMD, ASAP, AGRP, NBLT, TTLT, CYCL, NONE, BLCK
type ExchangePolicy2Code string

type ExternallyDefinedData1 struct {
	Id        Max1025Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Id"`
	Val       Max100KBinary            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Val,omitempty"`
	PrtctdVal ContentInformationType23 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtctdVal,omitempty"`
	Tp        Max1025Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp,omitempty"`
}

// May be one of AUTH, COMP, BTCH
type FinancialCapture1Code string

type GenericIdentification176 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Id"`
	Tp     PartyType33Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp,omitempty"`
	Issr   PartyType33Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ShrtNm,omitempty"`
}

type GenericIdentification177 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Id"`
	Tp       PartyType33Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp,omitempty"`
	Issr     PartyType33Code    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ShrtNm,omitempty"`
	RmotAccs NetworkParameters7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RmotAccs,omitempty"`
	Glctn    Geolocation1       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Glctn,omitempty"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Val,omitempty"`
}

type Geolocation1 struct {
	GeogcCordints GeolocationGeographicCoordinates1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 GeogcCordints,omitempty"`
	UTMCordints   GeolocationUTMCoordinates1        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UTMCordints,omitempty"`
}

type GeolocationGeographicCoordinates1 struct {
	Lat  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Lat"`
	Long Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Long"`
}

type GeolocationUTMCoordinates1 struct {
	UTMZone    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UTMZone"`
	UTMEstwrd  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UTMEstwrd"`
	UTMNrthwrd Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UTMNrthwrd"`
}

type HostCommunicationParameter6 struct {
	ActnTp       TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	HstId        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 HstId"`
	Adr          NetworkParameters7            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Adr,omitempty"`
	Key          []KEKIdentifier5              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Key,omitempty"`
	NtwkSvcPrvdr NetworkParameters7            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NtwkSvcPrvdr,omitempty"`
	PhysIntrfc   PhysicalInterfaceParameter1   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PhysIntrfc,omitempty"`
}

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOTime time.Time

func (t *ISOTime) UnmarshalText(text []byte) error {
	return (*xsdTime)(t).UnmarshalText(text)
}
func (t ISOTime) MarshalText() ([]byte, error) {
	return xsdTime(t).MarshalText()
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SrlNb"`
}

type KEK7 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DerivtnId,omitempty"`
}

type KEKIdentifier5 struct {
	KeyId     Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyId"`
	KeyVrsn   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyVrsn"`
	SeqNb     float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DerivtnId,omitempty"`
	Tp        CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp,omitempty"`
	Fctn      []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Fctn,omitempty"`
}

type KeyTransport5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

type LocalDateTime1 struct {
	FrDtTm    ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 FrDtTm,omitempty"`
	ToDtTm    ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ToDtTm,omitempty"`
	UTCOffset float64     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UTCOffset"`
}

type MaintenanceDelegateAction5 struct {
	PrdcActn      bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrdcActn,omitempty"`
	TMRmotAccs    NetworkParameters7     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMRmotAccs,omitempty"`
	TMSPrtcol     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMSPrtcolVrsn,omitempty"`
	DataSetId     DataSetIdentification8 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DataSetId,omitempty"`
	ReTry         ProcessRetry2          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ReTry,omitempty"`
	AddtlInf      []Max3000Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AddtlInf,omitempty"`
	Actn          []TMSAction8           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Actn,omitempty"`
}

type MaintenanceDelegation10 struct {
	DlgtnTp      TerminalManagementAction3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtnTp"`
	MntncSvc     []DataSetCategory15Code                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MntncSvc"`
	PrtlDlgtn    bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtlDlgtn,omitempty"`
	POISubset    []Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POISubset,omitempty"`
	DlgtdActn    MaintenanceDelegateAction5              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtdActn,omitempty"`
	DlgtnScpId   Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtnScpId,omitempty"`
	DlgtnScpDef  Max3000Binary                           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtnScpDef,omitempty"`
	Cert         []Max10KBinary                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Cert,omitempty"`
	POIIdAssoctn []MaintenanceIdentificationAssociation1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POIIdAssoctn,omitempty"`
	SmmtrcKey    []KEKIdentifier5                        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SmmtrcKey,omitempty"`
	ParamDataSet AcceptorConfigurationDataSet1           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ParamDataSet,omitempty"`
}

type MaintenanceDelegationRequest6 struct {
	TMId      GenericIdentification176  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMId"`
	MstrTMId  GenericIdentification176  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MstrTMId,omitempty"`
	ReqdDlgtn []MaintenanceDelegation10 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ReqdDlgtn"`
}

type MaintenanceDelegationRequestV06 struct {
	Hdr           TMSHeader1                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Hdr,omitempty"`
	MntncDlgtnReq MaintenanceDelegationRequest6 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MntncDlgtnReq"`
	SctyTrlr      ContentInformationType21      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SctyTrlr"`
}

type MaintenanceIdentificationAssociation1 struct {
	MstrTMId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MstrTMId"`
	TMId     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMId"`
}

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max1025Text string

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max256Text string

type Max2KBinary []byte

func (t *Max2KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max2KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max35Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max500Text string

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max8Text string

// Must match the pattern [0-9]{1,9}
type Max9NumericText string

type MerchantConfigurationParameters5 struct {
	ActnTp       TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	MrchntId     Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MrchntId,omitempty"`
	Vrsn         Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	ParamFrmtIdr Max8Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ParamFrmtIdr,omitempty"`
	Prxy         NetworkParameters8            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Prxy,omitempty"`
	OthrParams   Max10000Binary                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OthrParams,omitempty"`
}

// May be one of FAUQ, CCAQ, CMPV, DGNP, RCLQ, CCAV, BTCH, FRVA, AUTQ, FCMV, DCCQ, RVRA, DCAV, TRNA
type MessageFunction40Code string

type MessageItemCondition1 struct {
	ItmId Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ItmId"`
	Cond  MessageItemCondition1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Cond"`
	Val   []Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Val,omitempty"`
}

// May be one of MNDT, CFVL, DFLT, ALWV, IFAV, COPY, UNSP
type MessageItemCondition1Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must be at least 3 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type NetworkParameters7 struct {
	Adr        []NetworkParameters9 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SctyPrfl,omitempty"`
}

type NetworkParameters8 struct {
	Tp   NetworkType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp"`
	Accs NetworkParameters7 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Accs"`
}

type NetworkParameters9 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NtwkTp"`
	AdrVal Max500Text       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AdrVal"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

// May be one of SCK5, SCK4, HTTP
type NetworkType2Code string

type Organisation26 struct {
	CmonNm       Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CmonNm"`
	Adr          Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Adr,omitempty"`
	CtryCd       ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CtryCd"`
	MrchntCtgyCd Min3Max4Text           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MrchntCtgyCd"`
	RegdIdr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RegdIdr"`
}

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Cert,omitempty"`
}

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

type PackageType1 struct {
	PackgId     GenericIdentification176 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PackgId,omitempty"`
	PackgLngth  float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PackgLngth,omitempty"`
	OffsetStart float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OffsetStart,omitempty"`
	OffsetEnd   float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OffsetEnd,omitempty"`
	PackgBlck   []ExternallyDefinedData1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PackgBlck,omitempty"`
}

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MskGnrtrAlgo,omitempty"`
}

type Parameter11 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TrlrFld,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 BPddg,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo,omitempty"`
}

// May be one of PGRP, PSYS, PSNG
type PartyType15Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS, MTMG, TAXH, TMGT
type PartyType33Code string

type PaymentTerminalParameters7 struct {
	ActnTp       TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	VndrId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 VndrId,omitempty"`
	Vrsn         Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	ParamFrmtIdr Max8Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ParamFrmtIdr,omitempty"`
	ClckSynctn   ClockSynchronisation3         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ClckSynctn,omitempty"`
	TmZoneLine   []Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TmZoneLine,omitempty"`
	LclDtTm      []LocalDateTime1              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 LclDtTm,omitempty"`
	OthrParams   Max10000Binary                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 OthrParams,omitempty"`
}

type PhysicalInterfaceParameter1 struct {
	IntrfcNm    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 IntrfcNm"`
	IntrfcTp    POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 IntrfcTp,omitempty"`
	UsrNm       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 UsrNm,omitempty"`
	AccsCd      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AccsCd,omitempty"`
	SctyPrfl    Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SctyPrfl,omitempty"`
	AddtlParams Max2KBinary               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AddtlParams,omitempty"`
}

type PointOfInteractionComponentIdentification1 struct {
	ItmNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ItmNb,omitempty"`
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrvdrId,omitempty"`
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Id,omitempty"`
	SrlNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SrlNb,omitempty"`
}

type ProcessRetry2 struct {
	Dely  Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Dely"`
	MaxNb float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MaxNb,omitempty"`
}

type ProcessTiming3 struct {
	WtgTm   Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 WtgTm,omitempty"`
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Prd,omitempty"`
	MaxNb   float64         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MaxNb,omitempty"`
}

type ProcessTiming4 struct {
	StartTm ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 StartTm,omitempty"`
	EndTm   ISODateTime     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 EndTm,omitempty"`
	Prd     Max9NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Prd,omitempty"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyIdr"`
}

type Recipient8Choice struct {
	KeyTrnsprt KeyTransport5  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyTrnsprt"`
	KEK        KEK7           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyIdr"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AttrVal"`
}

type SaleToPOIProtocolParameter1 struct {
	ActnTp      TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	MrchntId    Organisation26                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MrchntId,omitempty"`
	Vrsn        Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn"`
	HstId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 HstId"`
	MrchntPOIId Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MrchntPOIId,omitempty"`
	SaleId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SaleId,omitempty"`
}

type SecurityParameters12 struct {
	ActnTp    TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	Vrsn      Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn"`
	POIChllng Max140Binary                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POIChllng,omitempty"`
	TMChllng  Max140Binary                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMChllng,omitempty"`
	SctyElmt  []CryptographicKey14          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SctyElmt,omitempty"`
}

type SignedData5 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Cert,omitempty"`
	Sgnr        []Signer4                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Sgnr,omitempty"`
}

type Signer4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn,omitempty"`
	SgnrId      Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Sgntr"`
}

type TMSAction8 struct {
	Tp               TerminalManagementAction4Code              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tp"`
	RmotAccs         NetworkParameters7                         `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RmotAccs,omitempty"`
	Key              []KEKIdentifier5                           `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Key,omitempty"`
	TermnlMgrId      GenericIdentification176                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TermnlMgrId,omitempty"`
	TMSPrtcol        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMSPrtcol,omitempty"`
	TMSPrtcolVrsn    Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMSPrtcolVrsn,omitempty"`
	DataSetId        DataSetIdentification8                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DataSetId,omitempty"`
	CmpntTp          []DataSetCategory14Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CmpntTp,omitempty"`
	DlgtnScpId       Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtnScpId,omitempty"`
	DlgtnScpDef      Max3000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtnScpDef,omitempty"`
	DlgtnProof       Max5000Binary                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DlgtnProof,omitempty"`
	PrtctdDlgtnProof ContentInformationType23                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtctdDlgtnProof,omitempty"`
	Trggr            TerminalManagementActionTrigger1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Trggr"`
	AddtlPrc         []TerminalManagementAdditionalProcess1Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AddtlPrc,omitempty"`
	ReTry            ProcessRetry2                              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ReTry,omitempty"`
	TmCond           ProcessTiming3                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TmCond,omitempty"`
	TMChllng         Max140Binary                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TMChllng,omitempty"`
	KeyNcphrmntCert  []Max10KBinary                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 KeyNcphrmntCert,omitempty"`
	ErrActn          []ErrorAction4                             `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ErrActn,omitempty"`
	AddtlInf         []Max3000Binary                            `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 AddtlInf,omitempty"`
	MsgItm           []MessageItemCondition1                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MsgItm,omitempty"`
}

type TMSHeader1 struct {
	DwnldTrf bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 DwnldTrf"`
	FrmtVrsn Max6Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 FrmtVrsn"`
	XchgId   float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 XchgId"`
	CreDtTm  ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 CreDtTm"`
	InitgPty GenericIdentification176 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 InitgPty"`
	RcptPty  GenericIdentification177 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RcptPty,omitempty"`
	Tracblt  []Traceability8          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Tracblt,omitempty"`
}

type TMSProtocolParameters5 struct {
	ActnTp      TerminalManagementAction3Code `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ActnTp"`
	TermnlMgrId GenericIdentification176      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TermnlMgrId"`
	PrtcolVrsn  Max8Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtcolVrsn,omitempty"`
	MntncSvc    []DataSetCategory10Code       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MntncSvc"`
	Vrsn        Max256Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Vrsn"`
	ApplId      []Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 ApplId,omitempty"`
	HstId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 HstId"`
	POIId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POIId,omitempty"`
	InitgPtyId  Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 InitgPtyId,omitempty"`
	RcptPtyId   Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RcptPtyId,omitempty"`
	FileTrf     bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 FileTrf,omitempty"`
	MsgItm      []MessageItemCondition1       `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 MsgItm,omitempty"`
}

// May be one of CREA, DELT, UPDT
type TerminalManagementAction3Code string

// May be one of DCTV, DELT, DWNL, INST, RSTR, UPLD, UPDT, BIND, RBND, UBND, ACTV
type TerminalManagementAction4Code string

// May be one of ACCD, CNTE, FMTE, INVC, LENE, OVER, MISS, NSUP, SIGE, SUCC, SYNE, TIMO, UKDT, UKRF, INDP, IDMP, DPRU, AERR, CMER, ULER
type TerminalManagementActionResult4Code string

// May be one of DATE, HOST, MANU, SALE
type TerminalManagementActionTrigger1Code string

// May be one of MANC, RCNC, RSRT
type TerminalManagementAdditionalProcess1Code string

// May be one of SDSR, STOP
type TerminalManagementErrorAction2Code string

type TerminalPackageType1 struct {
	POICmpntId []PointOfInteractionComponentIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 POICmpntId,omitempty"`
	Packg      []PackageType1                               `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 Packg"`
}

type Traceability8 struct {
	RlayId      GenericIdentification177 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 RlayId"`
	PrtcolNm    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtcolNm,omitempty"`
	PrtcolVrsn  Max6Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 PrtcolVrsn,omitempty"`
	TracDtTmIn  ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TracDtTmIn"`
	TracDtTmOut ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:catm.005.001.06 TracDtTmOut"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
