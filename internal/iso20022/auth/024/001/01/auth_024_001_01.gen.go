// Code generated by main. DO NOT EDIT.

package auth_024_001_01

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 IBAN"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Othr"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICFIIdentifier string

type BinaryFile1 struct {
	MIMETp         Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 MIMETp,omitempty"`
	NcodgTp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 NcodgTp,omitempty"`
	CharSet        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CharSet,omitempty"`
	InclBinryObjct Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 InclBinryObjct,omitempty"`
}

type BranchAndFinancialInstitutionIdentification5 struct {
	FinInstnId FinancialInstitutionIdentification8 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 FinInstnId"`
	BrnchId    BranchData2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 BrnchId,omitempty"`
}

type BranchData2 struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id,omitempty"`
	Nm      Max140Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Nm,omitempty"`
	PstlAdr PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PstlAdr,omitempty"`
}

type CashAccount24 struct {
	Id  AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id"`
	Tp  CashAccountType2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Tp,omitempty"`
	Ccy ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Ccy,omitempty"`
	Nm  Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Nm,omitempty"`
}

type CashAccountType2Choice struct {
	Cd    ExternalCashAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cd"`
	Prtry Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry"`
}

type CertificateIdentification1 struct {
	MsgId       Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 MsgId,omitempty"`
	AcctSvcrRef Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AcctSvcrRef,omitempty"`
	PmtInfId    Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PmtInfId,omitempty"`
	InstrId     Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 InstrId,omitempty"`
	EndToEndId  Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 EndToEndId,omitempty"`
	Prtry       ProprietaryReference1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry,omitempty"`
}

type CertificateReference1 struct {
	Id CertificateIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id"`
	Dt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Dt"`
}

type ClearingSystemIdentification2Choice struct {
	Cd    ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cd"`
	Prtry Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry"`
}

type ClearingSystemMemberIdentification2 struct {
	ClrSysId ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 ClrSysId,omitempty"`
	MmbId    Max35Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 MmbId"`
}

type ContactDetails2 struct {
	NmPrfx   NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 NmPrfx,omitempty"`
	Nm       Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Nm,omitempty"`
	PhneNb   PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PhneNb,omitempty"`
	MobNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 MobNb,omitempty"`
	FaxNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 FaxNb,omitempty"`
	EmailAdr Max2048Text     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 EmailAdr,omitempty"`
	Othr     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Othr,omitempty"`
}

type ContractRegistrationReference1Choice struct {
	RegdCtrctId Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 RegdCtrctId"`
	Ctrct       DocumentIdentification28 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Ctrct"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type CurrencyControlHeader3 struct {
	MsgId    Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 MsgId"`
	CreDtTm  ISODateTime                                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CreDtTm"`
	NbOfItms Max15NumericText                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 NbOfItms"`
	InitgPty Party28Choice                                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 InitgPty"`
	FwdgAgt  BranchAndFinancialInstitutionIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 FwdgAgt,omitempty"`
}

type DateAndPlaceOfBirth struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CtryOfBirth"`
}

type Document struct {
	PmtRgltryInfNtfctn PaymentRegulatoryInformationNotificationV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PmtRgltryInfNtfctn"`
}

type DocumentAmendment1 struct {
	CrrctnId   float64   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CrrctnId"`
	OrgnlDocId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 OrgnlDocId,omitempty"`
}

type DocumentGeneralInformation3 struct {
	DocTp           ExternalDocumentType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 DocTp"`
	DocNb           Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 DocNb"`
	SndrRcvrSeqId   Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SndrRcvrSeqId,omitempty"`
	IsseDt          ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 IsseDt,omitempty"`
	URL             Max256Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 URL,omitempty"`
	LkFileHash      SignatureEnvelopeReference `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 LkFileHash,omitempty"`
	AttchdBinryFile BinaryFile1                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AttchdBinryFile"`
}

type DocumentIdentification28 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id,omitempty"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 DtOfIsse"`
}

// Must match the pattern [0-9]
type Exact1NumericText string

// Must match the pattern [0-9]{5}
type Exact5NumericText string

// Must be at least 1 items long
type ExternalAccountIdentification1Code string

// Must be at least 1 items long
type ExternalCashAccountType1Code string

// Must be at least 1 items long
type ExternalClearingSystemIdentification1Code string

// Must be at least 1 items long
type ExternalDocumentType1Code string

// Must be at least 1 items long
type ExternalFinancialInstitutionIdentification1Code string

// Must be at least 1 items long
type ExternalOrganisationIdentification1Code string

// Must be at least 1 items long
type ExternalPersonIdentification1Code string

type FinancialIdentificationSchemeName1Choice struct {
	Cd    ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cd"`
	Prtry Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry"`
}

type FinancialInstitutionIdentification8 struct {
	BICFI       BICFIIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 BICFI,omitempty"`
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 ClrSysMmbId,omitempty"`
	Nm          Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Nm,omitempty"`
	PstlAdr     PostalAddress6                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PstlAdr,omitempty"`
	Othr        GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Othr,omitempty"`
}

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Issr,omitempty"`
}

type GenericFinancialIdentification1 struct {
	Id      Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id"`
	SchmeNm FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Issr,omitempty"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Issr,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max1025Text string

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max70Text string

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type OrganisationIdentification8 struct {
	AnyBIC AnyBICIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AnyBIC,omitempty"`
	Othr   []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cd"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry"`
}

type Party11Choice struct {
	OrgId  OrganisationIdentification8 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 OrgId"`
	PrvtId PersonIdentification5       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PrvtId"`
}

type Party28Choice struct {
	Pty PartyIdentification77                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Pty"`
	Agt BranchAndFinancialInstitutionIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Agt"`
}

type PartyIdentification77 struct {
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Nm,omitempty"`
	PstlAdr   PostalAddress19 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PstlAdr,omitempty"`
	Id        Party11Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Id,omitempty"`
	CtryOfRes CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CtryOfRes,omitempty"`
	CtctDtls  ContactDetails2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CtctDtls,omitempty"`
}

type PaymentRegulatoryInformationNotificationV01 struct {
	GrpHdr      CurrencyControlHeader3             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 GrpHdr"`
	TxNtfctn    []RegulatoryReportingNotification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxNtfctn"`
	SplmtryData []SupplementaryData1               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SplmtryData,omitempty"`
}

type PersonIdentification5 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cd"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Prtry"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PostalAddress19 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TwnNm,omitempty"`
	TwnLctnNm   Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TwnLctnNm,omitempty"`
	DstrctNm    Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 DstrctNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AdrLine,omitempty"`
}

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AdrLine,omitempty"`
}

type ProprietaryReference1 struct {
	Tp  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Tp"`
	Ref Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Ref"`
}

type RegulatoryReportingNotification1 struct {
	TxNtfctnId Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxNtfctnId"`
	AcctOwnr   PartyIdentification77                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AcctOwnr"`
	AcctSvcr   BranchAndFinancialInstitutionIdentification5 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AcctSvcr"`
	TxCert     []TransactionCertificate1                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxCert"`
}

type SignatureEnvelopeReference struct {
	Item string `xml:",any"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TransactionCertificate1 struct {
	TxId             Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxId"`
	Cert             DocumentIdentification28        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Cert"`
	Acct             CashAccount24                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Acct,omitempty"`
	BkAcctDmcltnCtry CountryCode                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 BkAcctDmcltnCtry,omitempty"`
	Amdmnt           DocumentAmendment1              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Amdmnt,omitempty"`
	CertRcrd         []TransactionCertificateRecord1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CertRcrd"`
	SplmtryData      []SupplementaryData1            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 SplmtryData,omitempty"`
}

type TransactionCertificate2 struct {
	RfrdDoc   CertificateReference1   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 RfrdDoc"`
	TxDt      ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxDt"`
	TxTp      Exact1NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxTp"`
	LclInstrm Exact5NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 LclInstrm"`
	Amt       ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Amt"`
}

type TransactionCertificateContract1 struct {
	CtrctRef           ContractRegistrationReference1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CtrctRef,omitempty"`
	TxAmtInCtrctCcy    ActiveCurrencyAndAmount              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 TxAmtInCtrctCcy,omitempty"`
	XpctdShipmntDt     ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 XpctdShipmntDt,omitempty"`
	XpctdAdvncPmtRtrDt ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 XpctdAdvncPmtRtrDt,omitempty"`
	AddtlInf           Max1025Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 AddtlInf,omitempty"`
}

type TransactionCertificateRecord1 struct {
	CertRcrdId Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 CertRcrdId"`
	Tx         TransactionCertificate2         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Tx"`
	Ctrct      TransactionCertificateContract1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Ctrct,omitempty"`
	Attchmnt   []DocumentGeneralInformation3   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.024.001.01 Attchmnt,omitempty"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
