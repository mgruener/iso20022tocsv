// Code generated by main. DO NOT EDIT.

package auth_080_001_01

import (
	"bytes"
	"encoding/xml"
	"time"
)

type ActiveOrHistoricCurrencyAndAmount struct {
	Value float64                      `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AgreementType1Choice struct {
	Tp    ExternalAgreementType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Tp"`
	Prtry Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Prtry"`
}

type AgriculturalCommodityDairy1 struct {
	BasePdct AssetClassProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType20Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type AgriculturalCommodityForestry1 struct {
	BasePdct AssetClassProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType21Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type AgriculturalCommodityGrain2 struct {
	BasePdct     AssetClassProductType1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType30Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type AgriculturalCommodityLiveStock1 struct {
	BasePdct AssetClassProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType22Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type AgriculturalCommodityOilSeed1 struct {
	BasePdct     AssetClassProductType1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type AgriculturalCommodityOliveOil2 struct {
	BasePdct     AssetClassProductType1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType3Code          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType29Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type AgriculturalCommodityOther1 struct {
	BasePdct AssetClassProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type AgriculturalCommodityPotato1 struct {
	BasePdct AssetClassProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType45Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type AgriculturalCommoditySeafood1 struct {
	BasePdct AssetClassProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType23Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type AgriculturalCommoditySoft1 struct {
	BasePdct     AssetClassProductType1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType2Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type AmountAndDirection53 struct {
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Amt"`
	Sgn bool                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Sgn,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

type AssetClassCommodity5Choice struct {
	Agrcltrl          AssetClassCommodityAgricultural5Choice         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Agrcltrl"`
	Nrgy              AssetClassCommodityEnergy2Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Nrgy"`
	Envttl            AssetClassCommodityEnvironmental2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Envttl"`
	Frtlzr            AssetClassCommodityFertilizer3Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Frtlzr"`
	Frght             AssetClassCommodityFreight3Choice              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Frght"`
	IndstrlPdct       AssetClassCommodityIndustrialProduct1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 IndstrlPdct"`
	Metl              AssetClassCommodityMetal1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Metl"`
	OthrC10           AssetClassCommodityOtherC102Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OthrC10"`
	Ppr               AssetClassCommodityPaper3Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Ppr"`
	Plprpln           AssetClassCommodityPolypropylene3Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Plprpln"`
	Infltn            AssetClassCommodityInflation1                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Infltn"`
	MultiCmmdtyExtc   AssetClassCommodityMultiCommodityExotic1       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MultiCmmdtyExtc"`
	OffclEcnmcSttstcs AssetClassCommodityOfficialEconomicStatistics1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OffclEcnmcSttstcs"`
	Othr              AssetClassCommodityOther1                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityAgricultural5Choice struct {
	GrnOilSeed AgriculturalCommodityOilSeed1   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 GrnOilSeed"`
	Soft       AgriculturalCommoditySoft1      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Soft"`
	Ptt        AgriculturalCommodityPotato1    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Ptt"`
	OlvOil     AgriculturalCommodityOliveOil2  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OlvOil"`
	Dairy      AgriculturalCommodityDairy1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Dairy"`
	Frstry     AgriculturalCommodityForestry1  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Frstry"`
	Sfd        AgriculturalCommoditySeafood1   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Sfd"`
	LiveStock  AgriculturalCommodityLiveStock1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LiveStock"`
	Grn        AgriculturalCommodityGrain2     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Grn"`
	Othr       AgriculturalCommodityOther1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityEnergy2Choice struct {
	Elctrcty  EnergyCommodityElectricity1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Elctrcty"`
	NtrlGas   EnergyCommodityNaturalGas2      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NtrlGas"`
	Oil       EnergyCommodityOil2             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Oil"`
	Coal      EnergyCommodityCoal1            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Coal"`
	IntrNrgy  EnergyCommodityInterEnergy1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 IntrNrgy"`
	RnwblNrgy EnergyCommodityRenewableEnergy1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RnwblNrgy"`
	LghtEnd   EnergyCommodityLightEnd1        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LghtEnd"`
	Dstllts   EnergyCommodityDistillates1     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Dstllts"`
	Othr      EnergyCommodityOther1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityEnvironmental2Choice struct {
	Emssns   EnvironmentalCommodityEmission2      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Emssns"`
	Wthr     EnvironmentalCommodityWeather1       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Wthr"`
	CrbnRltd EnvironmentalCommodityCarbonRelated1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CrbnRltd"`
	Othr     EnvironmentCommodityOther1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityFertilizer3Choice struct {
	Ammn             FertilizerCommodityAmmonia1                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Ammn"`
	DmmnmPhspht      FertilizerCommodityDiammoniumPhosphate1    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 DmmnmPhspht"`
	Ptsh             FertilizerCommodityPotash1                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Ptsh"`
	Slphr            FertilizerCommoditySulphur1                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Slphr"`
	Urea             FertilizerCommodityUrea1                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Urea"`
	UreaAndAmmnmNtrt FertilizerCommodityUreaAndAmmoniumNitrate1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UreaAndAmmnmNtrt"`
	Othr             FertilizerCommodityOther1                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityFreight3Choice struct {
	Dry       FreightCommodityDry2           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Dry"`
	Wet       FreightCommodityWet2           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Wet"`
	CntnrShip FreightCommodityContainerShip1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CntnrShip"`
	Othr      FreightCommodityOther1         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityIndustrialProduct1Choice struct {
	Cnstrctn IndustrialProductCommodityConstruction1  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Cnstrctn"`
	Manfctg  IndustrialProductCommodityManufacturing1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Manfctg"`
}

type AssetClassCommodityInflation1 struct {
	BasePdct AssetClassProductType12Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
}

type AssetClassCommodityMetal1Choice struct {
	NonPrcs MetalCommodityNonPrecious1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NonPrcs"`
	Prcs    MetalCommodityPrecious1    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Prcs"`
}

type AssetClassCommodityMultiCommodityExotic1 struct {
	BasePdct AssetClassProductType13Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
}

type AssetClassCommodityOfficialEconomicStatistics1 struct {
	BasePdct AssetClassProductType14Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
}

type AssetClassCommodityOther1 struct {
	BasePdct AssetClassProductType15Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
}

type AssetClassCommodityOtherC102Choice struct {
	Dlvrbl    OtherC10CommodityDeliverable2    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Dlvrbl"`
	NonDlvrbl OtherC10CommodityNonDeliverable2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NonDlvrbl"`
}

type AssetClassCommodityPaper3Choice struct {
	CntnrBrd PaperCommodityContainerBoard1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CntnrBrd"`
	Nwsprnt  PaperCommodityNewsprint1      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Nwsprnt"`
	Pulp     PaperCommodityPulp1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Pulp"`
	RcvrdPpr PaperCommodityRecoveredPaper1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RcvrdPpr"`
	Othr     PaperCommodityRecoveredPaper2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

type AssetClassCommodityPolypropylene3Choice struct {
	Plstc PolypropyleneCommodityPlastic1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Plstc"`
	Othr  PolypropyleneCommodityOther1   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Othr"`
}

// May be one of ALUM, ALUA, CBLT, COPR, IRON, MOLY, NASC, NICK, STEL, TINN, ZINC, OTHR, LEAD
type AssetClassDetailedSubProductType10Code string

// May be one of GOLD, OTHR, PLDM, PTNM, SLVR
type AssetClassDetailedSubProductType11Code string

// May be one of FWHT, SOYB, RPSD, OTHR, CORN, RICE
type AssetClassDetailedSubProductType1Code string

// May be one of LAMP, OTHR
type AssetClassDetailedSubProductType29Code string

// May be one of ROBU, CCOA, BRWN, WHSG, OTHR
type AssetClassDetailedSubProductType2Code string

// May be one of MWHT, OTHR
type AssetClassDetailedSubProductType30Code string

// May be one of GASP, LNGG, NCGG, TTFG, NBPG, OTHR
type AssetClassDetailedSubProductType31Code string

// May be one of BAKK, BDSL, BRNT, BRNX, CNDA, COND, DSEL, DUBA, ESPO, ETHA, FUEL, FOIL, GOIL, GSLN, HEAT, JTFL, KERO, LLSO, MARS, NAPH, NGLO, TAPI, WTIO, URAL, OTHR
type AssetClassDetailedSubProductType32Code string

// May be one of DBCR, OTHR
type AssetClassDetailedSubProductType33Code string

// May be one of TNKR, OTHR
type AssetClassDetailedSubProductType34Code string

// May be one of BSLD, FITR, PKLD, OFFP, OTHR
type AssetClassDetailedSubProductType5Code string

// May be one of CERE, ERUE, EUAE, EUAA, OTHR
type AssetClassDetailedSubProductType8Code string

// May be one of OTHC
type AssetClassProductType11Code string

// May be one of INFL
type AssetClassProductType12Code string

// May be one of MCEX
type AssetClassProductType13Code string

// May be one of OEST
type AssetClassProductType14Code string

// May be one of OTHR
type AssetClassProductType15Code string

// May be one of AGRI
type AssetClassProductType1Code string

// May be one of NRGY
type AssetClassProductType2Code string

// May be one of ENVR
type AssetClassProductType3Code string

// May be one of FRGT
type AssetClassProductType4Code string

// May be one of FRTL
type AssetClassProductType5Code string

// May be one of INDP
type AssetClassProductType6Code string

// May be one of METL
type AssetClassProductType7Code string

// May be one of PAPR
type AssetClassProductType8Code string

// May be one of POLY
type AssetClassProductType9Code string

// May be one of EMIS
type AssetClassSubProductType10Code string

// May be one of NPRM
type AssetClassSubProductType15Code string

// May be one of PRME
type AssetClassSubProductType16Code string

// May be one of PLST
type AssetClassSubProductType18Code string

// May be one of GROS
type AssetClassSubProductType1Code string

// May be one of DIRY
type AssetClassSubProductType20Code string

// May be one of FRST
type AssetClassSubProductType21Code string

// May be one of LSTK
type AssetClassSubProductType22Code string

// May be one of SEAF
type AssetClassSubProductType23Code string

// May be one of COAL
type AssetClassSubProductType24Code string

// May be one of DIST
type AssetClassSubProductType25Code string

// May be one of INRG
type AssetClassSubProductType26Code string

// May be one of LGHT
type AssetClassSubProductType27Code string

// May be one of RNNG
type AssetClassSubProductType28Code string

// May be one of CRBR
type AssetClassSubProductType29Code string

// May be one of SOFT
type AssetClassSubProductType2Code string

// May be one of WTHR
type AssetClassSubProductType30Code string

// May be one of DRYF
type AssetClassSubProductType31Code string

// May be one of WETF
type AssetClassSubProductType32Code string

// May be one of CSTR
type AssetClassSubProductType33Code string

// May be one of MFTG
type AssetClassSubProductType34Code string

// May be one of CBRD
type AssetClassSubProductType35Code string

// May be one of NSPT
type AssetClassSubProductType36Code string

// May be one of PULP
type AssetClassSubProductType37Code string

// May be one of RCVP
type AssetClassSubProductType38Code string

// May be one of AMMO
type AssetClassSubProductType39Code string

// May be one of OOLI
type AssetClassSubProductType3Code string

// May be one of DAPH
type AssetClassSubProductType40Code string

// May be one of PTSH
type AssetClassSubProductType41Code string

// May be one of SLPH
type AssetClassSubProductType42Code string

// May be one of UREA
type AssetClassSubProductType43Code string

// May be one of UAAN
type AssetClassSubProductType44Code string

// May be one of POTA
type AssetClassSubProductType45Code string

// May be one of CSHP
type AssetClassSubProductType46Code string

// May be one of DLVR
type AssetClassSubProductType47Code string

// May be one of NDLV
type AssetClassSubProductType48Code string

// May be one of OTHR
type AssetClassSubProductType49Code string

// May be one of GRIN
type AssetClassSubProductType5Code string

// May be one of ELEC
type AssetClassSubProductType6Code string

// May be one of NGAS
type AssetClassSubProductType7Code string

// May be one of OILP
type AssetClassSubProductType8Code string

type BenchmarkCurveName10Choice struct {
	Indx BenchmarkCurveName3Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Indx"`
	Nm   Max350Text              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Nm"`
}

// May be one of ESTR, BBSW, BUBO, CDOR, CIBO, EONA, EONS, EURI, EUUS, EUCH, FUSW, GCFR, ISDA, JIBA, LIBI, LIBO, MOSP, MAAA, NIBO, PFAN, PRBO, STBO, SWAP, TLBO, TIBO, TREA, WIBO, SOFR, SONA
type BenchmarkCurveName3Code string

// Must match the pattern [A-Z]{6,6}
type CFIOct2015Identifier string

type CashCompare1 struct {
	Val         CompareAmountAndDirection1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val"`
	HrcutOrMrgn ComparePercentageRate2     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 HrcutOrMrgn"`
}

type Cleared4Choice struct {
	Clrd    NoReasonCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Clrd"`
	NonClrd NoReasonCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NonClrd"`
}

// May be one of SICA, SIUR, TTCA
type CollateralDeliveryMethod1Code string

type CollateralMatchingCriteria3 struct {
	UncollsdFlg       CompareTrueFalseIndicator2     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UncollsdFlg,omitempty"`
	NetXpsrCollstnInd CompareTrueFalseIndicator2     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NetXpsrCollstnInd,omitempty"`
	CollValDt         CompareDate2                   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CollValDt,omitempty"`
	CmpntTp           SecurityCommodityCash1         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CmpntTp,omitempty"`
	BsktIdr           CompareSecurityIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BsktIdr,omitempty"`
}

// May be one of INVG, NIVG, NOTR, NOAP
type CollateralQualityType1Code string

// May be one of GIVE, TAKE
type CollateralRole1Code string

type Commodity21 struct {
	Clssfctn    CompareCommodityAssetClass2               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Clssfctn,omitempty"`
	Qty         CompareDecimalNumber2                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Qty,omitempty"`
	UnitPric    CompareUnitPrice3                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UnitPric,omitempty"`
	MktVal      CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MktVal,omitempty"`
	UnitOfMeasr CompareUnitOfMeasure2                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UnitOfMeasr,omitempty"`
}

type CompareActiveOrHistoricCurrencyAndAmount2 struct {
	Val1 ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareAgreementType1 struct {
	Val1 AgreementType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 AgreementType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareAmountAndDirection1 struct {
	Val1 AmountAndDirection53 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 AmountAndDirection53 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareBenchmarkCurveName2 struct {
	Val1 BenchmarkCurveName10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 BenchmarkCurveName10Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareCFIIdentifier2 struct {
	Val1 CFIOct2015Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 CFIOct2015Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareClearingStatus2 struct {
	Val1 Cleared4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 Cleared4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareCollateralQualityType2 struct {
	Val1 CollateralQualityType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 CollateralQualityType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareCommodityAssetClass2 struct {
	Val1 AssetClassCommodity5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 AssetClassCommodity5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareCounterpartySide1 struct {
	Val1 CollateralRole1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 CollateralRole1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareCountryCode2 struct {
	Val1 CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareDate2 struct {
	Val1 ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareDateTime2 struct {
	Val1 ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareDecimalNumber2 struct {
	Val1 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareDeliveryMethod2 struct {
	Val1 CollateralDeliveryMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 CollateralDeliveryMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareExposureType2 struct {
	Val1 ExposureType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 ExposureType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareISINIdentifier2 struct {
	Val1 ISINOct2015Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 ISINOct2015Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareInterestComputationMethod2 struct {
	Val1 InterestComputationMethodFormat6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 InterestComputationMethodFormat6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareMICIdentifier2 struct {
	Val1 MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 MICIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareNumber2 struct {
	Val1 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1"`
	Val2 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2"`
}

type CompareNumber3 struct {
	Val1 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareOrganisationIdentification1 struct {
	Val1 OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type ComparePercentageRate2 struct {
	Val1 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 float64 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareRateBasis2 struct {
	Val1 RateBasis1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 RateBasis1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareReportingLevelType2 struct {
	Val1 ModificationLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 ModificationLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareSecuritiesLendingType2 struct {
	Val1 SecuritiesLendingType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 SecuritiesLendingType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareSecurityIdentification2 struct {
	Val1 SecurityIdentification26Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 SecurityIdentification26Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareSpecialCollateral2 struct {
	Val1 SpecialCollateral1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 SpecialCollateral1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareTerminationOption2 struct {
	Val1 RepoTerminationOption2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 RepoTerminationOption2Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareText1 struct {
	Val1 Max52Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 Max52Text `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareTrueFalseIndicator2 struct {
	Val1 bool `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 bool `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareUnitOfMeasure2 struct {
	Val1 UnitOfMeasure11Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 UnitOfMeasure11Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CompareUnitPrice3 struct {
	Val1 SecuritiesTransactionPrice11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val1,omitempty"`
	Val2 SecuritiesTransactionPrice11Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Val2,omitempty"`
}

type CounterpartyMatchingCriteria1 struct {
	RptgCtrPty CompareOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RptgCtrPty,omitempty"`
	OthrCtrPty CompareOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OthrCtrPty,omitempty"`
	CtrPtySd   CompareCounterpartySide1           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CtrPtySd,omitempty"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type Document struct {
	SctiesFincgRptgRcncltnStsAdvc SecuritiesFinancingReportingReconciliationStatusAdviceV01 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SctiesFincgRptgRcncltnStsAdvc"`
}

type EnergyCommodityCoal1 struct {
	BasePdct AssetClassProductType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType24Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnergyCommodityDistillates1 struct {
	BasePdct AssetClassProductType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType25Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnergyCommodityElectricity1 struct {
	BasePdct     AssetClassProductType2Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType6Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType5Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type EnergyCommodityInterEnergy1 struct {
	BasePdct AssetClassProductType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType26Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnergyCommodityLightEnd1 struct {
	BasePdct AssetClassProductType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType27Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnergyCommodityNaturalGas2 struct {
	BasePdct     AssetClassProductType2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType31Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type EnergyCommodityOil2 struct {
	BasePdct     AssetClassProductType2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType8Code          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType32Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type EnergyCommodityOther1 struct {
	BasePdct AssetClassProductType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnergyCommodityRenewableEnergy1 struct {
	BasePdct AssetClassProductType2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType28Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnvironmentCommodityOther1 struct {
	BasePdct AssetClassProductType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnvironmentalCommodityCarbonRelated1 struct {
	BasePdct AssetClassProductType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType29Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type EnvironmentalCommodityEmission2 struct {
	BasePdct     AssetClassProductType3Code            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType10Code        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType8Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type EnvironmentalCommodityWeather1 struct {
	BasePdct AssetClassProductType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType30Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

// May be one of SBSC, MGLD, REPO, SLEB
type ExposureType6Code string

// Must be at least 1 items long
type ExternalAgreementType1Code string

// Must be at least 1 items long
type ExternalSecuritiesLendingType1Code string

type FertilizerCommodityAmmonia1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType39Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FertilizerCommodityDiammoniumPhosphate1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType40Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FertilizerCommodityOther1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FertilizerCommodityPotash1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType41Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FertilizerCommoditySulphur1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType42Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FertilizerCommodityUrea1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType43Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FertilizerCommodityUreaAndAmmoniumNitrate1 struct {
	BasePdct AssetClassProductType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType44Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FreightCommodityContainerShip1 struct {
	BasePdct AssetClassProductType4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType46Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FreightCommodityDry2 struct {
	BasePdct     AssetClassProductType4Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType31Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType33Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type FreightCommodityOther1 struct {
	BasePdct AssetClassProductType4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type FreightCommodityWet2 struct {
	BasePdct     AssetClassProductType4Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType32Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType34Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

// Must match the pattern [A-Z]{2,2}[A-Z0-9]{9,9}[0-9]{1,1}
type ISINOct2015Identifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IndustrialProductCommodityConstruction1 struct {
	BasePdct AssetClassProductType6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType33Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type IndustrialProductCommodityManufacturing1 struct {
	BasePdct AssetClassProductType6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType34Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

// May be one of A001, A002, A003, A004, A005, A006, A007, A008, A009, A010, A011, A012, A013, A014
type InterestComputationMethod1Code string

type InterestComputationMethodFormat6Choice struct {
	Cd    InterestComputationMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Cd"`
	Prtry Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Prtry"`
}

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LoanMatchingCriteria6 struct {
	UnqTradIdr                 CompareText1                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UnqTradIdr,omitempty"`
	TermntnDt                  CompareDate2                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 TermntnDt,omitempty"`
	CtrctTp                    CompareExposureType2                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CtrctTp,omitempty"`
	ClrSts                     CompareClearingStatus2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ClrSts,omitempty"`
	ClrDtTm                    CompareDateTime2                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ClrDtTm,omitempty"`
	CCP                        CompareOrganisationIdentification1        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CCP,omitempty"`
	TradgVn                    CompareMICIdentifier2                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 TradgVn,omitempty"`
	MstrAgrmtTp                CompareAgreementType1                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MstrAgrmtTp,omitempty"`
	ExctgDtTm                  CompareDateTime2                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ExctgDtTm,omitempty"`
	StartDt                    CompareDate2                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 StartDt,omitempty"`
	EndDt                      CompareDate2                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 EndDt,omitempty"`
	MinNtcePrd                 CompareNumber3                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MinNtcePrd,omitempty"`
	EarlstCallBckDt            CompareDate2                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 EarlstCallBckDt,omitempty"`
	GnlColl                    CompareSpecialCollateral2                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 GnlColl,omitempty"`
	DlvryByVal                 CompareTrueFalseIndicator2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 DlvryByVal,omitempty"`
	CollDlvryMtd               CompareDeliveryMethod2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CollDlvryMtd,omitempty"`
	OpnTerm                    CompareTrueFalseIndicator2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OpnTerm,omitempty"`
	TermntnOptn                CompareTerminationOption2                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 TermntnOptn,omitempty"`
	FxdIntrstRate              ComparePercentageRate2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FxdIntrstRate,omitempty"`
	DayCntBsis                 CompareInterestComputationMethod2         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 DayCntBsis,omitempty"`
	FltgIntrstRefRate          CompareBenchmarkCurveName2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRefRate,omitempty"`
	FltgIntrstRateTermUnit     CompareRateBasis2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRateTermUnit,omitempty"`
	FltgIntrstRateTermVal      CompareNumber3                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRateTermVal,omitempty"`
	FltgIntrstRatePmtFrqcyUnit CompareRateBasis2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRatePmtFrqcyUnit,omitempty"`
	FltgIntrstRatePmtFrqcyVal  CompareNumber3                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRatePmtFrqcyVal,omitempty"`
	FltgIntrstRateRstFrqcyUnit CompareRateBasis2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRateRstFrqcyUnit,omitempty"`
	FltgIntrstRateRstFrqcyVal  CompareNumber2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgIntrstRateRstFrqcyVal,omitempty"`
	IntrstRateBsisPtSprd       CompareNumber2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 IntrstRateBsisPtSprd,omitempty"`
	MrgnLnAmt                  CompareAmountAndDirection1                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MrgnLnAmt,omitempty"`
	PrncplAmtStartDtAmt        CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 PrncplAmtStartDtAmt,omitempty"`
	PrncplAmtMtrtyDtAmt        CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 PrncplAmtMtrtyDtAmt,omitempty"`
	AsstTp                     SecurityCommodity4                        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AsstTp,omitempty"`
	LnVal                      CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LnVal,omitempty"`
	FxdRbtRefRate              ComparePercentageRate2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FxdRbtRefRate,omitempty"`
	FltgRbtRefRate             CompareBenchmarkCurveName2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRefRate,omitempty"`
	FltgRbtRateTermUnit        CompareRateBasis2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRateTermUnit,omitempty"`
	FltgRbtRateTermVal         CompareNumber2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRateTermVal,omitempty"`
	FltgRbtRatePmtFrqcyUnit    CompareRateBasis2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRatePmtFrqcyUnit,omitempty"`
	FltgRbtRatePmtFrqcyVal     CompareNumber2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRatePmtFrqcyVal,omitempty"`
	FltgRbtRateRstFrqcyUnit    CompareRateBasis2                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRateRstFrqcyUnit,omitempty"`
	FltgRbtRateRstFrqcyVal     CompareNumber2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 FltgRbtRateRstFrqcyVal,omitempty"`
	RbtRateBsisPtSprd          CompareNumber2                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RbtRateBsisPtSprd,omitempty"`
	AdjstdRate                 ComparePercentageRate2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AdjstdRate,omitempty"`
	AdjstmntRateDt             CompareDate2                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AdjstmntRateDt,omitempty"`
	LndgFee                    ComparePercentageRate2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LndgFee,omitempty"`
	OutsdngLn                  CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OutsdngLn,omitempty"`
	ShrtMktVal                 CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ShrtMktVal,omitempty"`
	LvlTp                      CompareReportingLevelType2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LvlTp,omitempty"`
	UnitOfMeasr                CompareUnitOfMeasure2                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UnitOfMeasr,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}
type MICIdentifier string

type MasterAgreement6 struct {
	Tp                AgreementType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Tp"`
	Vrsn              Max50Text            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Vrsn,omitempty"`
	OthrMstrAgrmtDtls Max350Text           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OthrMstrAgrmtDtls,omitempty"`
}

type MatchingCriteria7 struct {
	CtrPtyMtchgCrit CounterpartyMatchingCriteria1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CtrPtyMtchgCrit,omitempty"`
	LnMtchgCrit     LoanMatchingCriteria6         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LnMtchgCrit,omitempty"`
	CollMtchgCrit   CollateralMatchingCriteria3   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CollMtchgCrit,omitempty"`
}

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max50Text string

// Must be at least 1 items long
type Max52Text string

type MetalCommodityNonPrecious1 struct {
	BasePdct     AssetClassProductType7Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType15Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType10Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

type MetalCommodityPrecious1 struct {
	BasePdct     AssetClassProductType7Code             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct      AssetClassSubProductType16Code         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
	AddtlSubPdct AssetClassDetailedSubProductType11Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AddtlSubPdct"`
}

// May be one of PSTN, TCTN
type ModificationLevel1Code string

// May be one of NORE
type NoReasonCode string

// May be one of NTAV
type NotAvailable1Code string

type NumberOfReportsPerStatus2 struct {
	DtldNbOfRpts Max15NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 DtldNbOfRpts"`
	DtldSts      PairedReconciled1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 DtldSts"`
}

type OrganisationIdentification9Choice struct {
	LEI    LEIIdentifier           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 LEI"`
	ClntId Max50Text               `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ClntId"`
	AnyBIC AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AnyBIC"`
}

type OtherC10CommodityDeliverable2 struct {
	BasePdct AssetClassProductType11Code    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType47Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type OtherC10CommodityNonDeliverable2 struct {
	BasePdct AssetClassProductType11Code    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType48Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

// May be one of PARD, RECO
type PairedReconciled1Code string

type PaperCommodityContainerBoard1 struct {
	BasePdct AssetClassProductType8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType35Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type PaperCommodityNewsprint1 struct {
	BasePdct AssetClassProductType8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType36Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type PaperCommodityPulp1 struct {
	BasePdct AssetClassProductType8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType37Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type PaperCommodityRecoveredPaper1 struct {
	BasePdct AssetClassProductType8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType38Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type PaperCommodityRecoveredPaper2 struct {
	BasePdct AssetClassProductType8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

type PolypropyleneCommodityOther1 struct {
	BasePdct AssetClassProductType9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType49Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct"`
}

type PolypropyleneCommodityPlastic1 struct {
	BasePdct AssetClassProductType9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BasePdct"`
	SubPdct  AssetClassSubProductType18Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SubPdct,omitempty"`
}

// May be one of DAYS, MNTH, WEEK, YEAR
type RateBasis1Code string

type ReconciliationMatchedStatus6Choice struct {
	Mtchd    NoReasonCode          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Mtchd"`
	NotMtchd ReconciliationResult7 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NotMtchd"`
}

type ReconciliationReport5 struct {
	TechRcrdId Max140Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 TechRcrdId,omitempty"`
	TxId       TradeTransactionIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 TxId"`
	Modfd      bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Modfd"`
	RcncltnSts ReconciliationStatus5Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RcncltnSts"`
}

type ReconciliationResult7 struct {
	CtrPty1   OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CtrPty1"`
	CtrPty2   OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 CtrPty2"`
	MtchgCrit MatchingCriteria7                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MtchgCrit"`
}

type ReconciliationStatus5Choice struct {
	NoRcncltnReqrd NoReasonCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NoRcncltnReqrd"`
	RptgData       ReconciliationMatchedStatus6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RptgData"`
}

// May be one of EGRN, EGAE, ETSB, NOAP
type RepoTerminationOption2Code string

// May be one of NOTX
type ReportPeriodActivity1Code string

type SecuritiesFinancingReportingReconciliationStatusAdviceV01 struct {
	RcncltnData TradeData14Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RcncltnData"`
	SplmtryData []SupplementaryData1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SplmtryData,omitempty"`
}

type SecuritiesLendingType3Choice struct {
	Cd    ExternalSecuritiesLendingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Prtry"`
}

type SecuritiesTransactionPrice11Choice struct {
	MntryVal AmountAndDirection53 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MntryVal"`
	Pctg     float64              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Pctg"`
	Yld      float64              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Yld"`
	BsisPts  float64              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 BsisPts"`
}

type Security17 struct {
	Id            CompareISINIdentifier2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Id,omitempty"`
	ClssfctnTp    CompareCFIIdentifier2                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ClssfctnTp,omitempty"`
	Qty           CompareDecimalNumber2                     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Qty,omitempty"`
	NmnlVal       CompareAmountAndDirection1                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NmnlVal,omitempty"`
	Qlty          CompareCollateralQualityType2             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Qlty,omitempty"`
	Mtrty         CompareDate2                              `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Mtrty,omitempty"`
	IssrIdr       CompareOrganisationIdentification1        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 IssrIdr,omitempty"`
	IssrCtry      CompareCountryCode2                       `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 IssrCtry,omitempty"`
	Tp            []CompareSecuritiesLendingType2           `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Tp,omitempty"`
	UnitPric      CompareUnitPrice3                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UnitPric,omitempty"`
	ExclsvArrgmnt CompareTrueFalseIndicator2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 ExclsvArrgmnt,omitempty"`
	MktVal        CompareActiveOrHistoricCurrencyAndAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MktVal,omitempty"`
	AvlblForReuse CompareTrueFalseIndicator2                `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AvlblForReuse,omitempty"`
	HrcutOrMrgn   ComparePercentageRate2                    `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 HrcutOrMrgn,omitempty"`
}

type SecurityCommodity4 struct {
	Scty   []Security17  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Scty,omitempty"`
	Cmmdty []Commodity21 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Cmmdty,omitempty"`
}

type SecurityCommodityCash1 struct {
	Scty   []Security17   `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Scty,omitempty"`
	Cmmdty []Commodity21  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Cmmdty,omitempty"`
	Csh    []CashCompare1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Csh,omitempty"`
}

type SecurityIdentification26Choice struct {
	Id       ISINOct2015Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Id"`
	NotAvlbl NotAvailable1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 NotAvlbl"`
}

// May be one of GENE, SPEC
type SpecialCollateral1Code string

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TradeData14Choice struct {
	DataSetActn ReportPeriodActivity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 DataSetActn"`
	Rpt         []TradeData21             `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 Rpt"`
}

type TradeData21 struct {
	PairgRcncltnSts []NumberOfReportsPerStatus2 `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 PairgRcncltnSts,omitempty"`
	RcncltnRpt      []ReconciliationReport5     `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RcncltnRpt"`
	SplmtryData     []SupplementaryData1        `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 SplmtryData,omitempty"`
}

type TradeTransactionIdentification4 struct {
	RptgCtrPty OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 RptgCtrPty"`
	OthrCtrPty OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 OthrCtrPty"`
	UnqTradIdr Max52Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 UnqTradIdr,omitempty"`
	MstrAgrmt  MasterAgreement6                  `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 MstrAgrmt,omitempty"`
	AgtLndr    OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 AgtLndr,omitempty"`
	TrptyAgt   OrganisationIdentification9Choice `xml:"urn:iso:std:iso:20022:tech:xsd:auth.080.001.01 TrptyAgt,omitempty"`
}

// May be one of ALOW, ACCY, BARL, BCUF, BDFT, BUSL, CEER, CLRT, KILO, PIEC, TONS, METR, INCH, YARD, GBGA, GRAM, CMET, SMET, FOOT, MILE, SQIN, SQFO, SQMI, GBOU, USOU, GBPI, USPI, GBQA, USGA, MMET, KMET, SQYA, ACRE, ARES, SMIL, SCMT, HECT, SQKI, MILI, CELI, LITR, PUND, CBME, DAYS, DMET, ENVC, ENVO, HUWG, KWDC, KWHO, KWHC, KMOC, KWMC, KWYC, MWDC, MWHO, MWHC, MWMC, MMOC, MWYC, TONE, MIBA, MBTU, OZTR, UCWT, IPNT, PWRD, DGEU, TOCD, GGEU, USQA
type UnitOfMeasure11Code string

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
