// Code generated by main. DO NOT EDIT.

package acmt_002_001_06

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account20 struct {
	Id       Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id,omitempty"`
	AcctSvcr PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSvcr"`
}

type AccountDesignation1Choice struct {
	Cd    Rank1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type AccountDetailsConfirmationV06 struct {
	MsgId            MessageIdentification1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MsgId"`
	OrdrRef          InvestmentFundOrder4           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OrdrRef,omitempty"`
	RltdRef          AdditionalReference6           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RltdRef,omitempty"`
	ConfDtls         AccountManagementConfirmation3 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ConfDtls"`
	InvstmtAcct      InvestmentAccount50            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InvstmtAcct,omitempty"`
	AcctPties        AccountParties13               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctPties,omitempty"`
	Intrmies         []Intermediary36               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Intrmies,omitempty"`
	Plcmnt           ReferredAgent2                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Plcmnt,omitempty"`
	NewIsseAllcn     NewIssueAllocation2            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NewIsseAllcn,omitempty"`
	SvgsInvstmtPlan  []InvestmentPlan12             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SvgsInvstmtPlan,omitempty"`
	WdrwlInvstmtPlan []InvestmentPlan12             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 WdrwlInvstmtPlan,omitempty"`
	CshSttlm         []CashSettlement1              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CshSttlm,omitempty"`
	SvcLvlAgrmt      []DocumentToSend3              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SvcLvlAgrmt,omitempty"`
	AddtlInf         []AccountRestrictions1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AddtlInf,omitempty"`
	MktPrctcVrsn     MarketPracticeVersion1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MktPrctcVrsn,omitempty"`
	Xtnsn            []Extension1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Xtnsn,omitempty"`
}

type AccountIdentification4Choice struct {
	IBAN IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IBAN"`
	Othr GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Othr"`
}

type AccountIdentificationAndName5 struct {
	Id AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	Nm Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm,omitempty"`
}

type AccountManagementConfirmation3 struct {
	ConfTp      AccountManagementType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ConfTp"`
	AcctApplId  Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctApplId,omitempty"`
	ClntRef     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ClntRef,omitempty"`
	CtrPtyRef   AdditionalReference6       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtrPtyRef,omitempty"`
	ExstgAcctId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ExstgAcctId,omitempty"`
}

// May be one of ACCO, ACCM, GACC
type AccountManagementType2Code string

// May be one of UNCO, LIPA, ENTR, CORP, CUST, EURE, PART, TRUS, GOVO, JOIT, COMO, JOIN, LLCO, NOMI, NFPO, ONIS, RGIC, SIGL
type AccountOwnershipType4Code string

type AccountParties13 struct {
	PrncplAcctPty AccountParties8Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrncplAcctPty"`
	ScndryOwnr    []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ScndryOwnr,omitempty"`
	Bnfcry        []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Bnfcry,omitempty"`
	PwrOfAttny    []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PwrOfAttny,omitempty"`
	LglGuardn     []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 LglGuardn,omitempty"`
	CtdnForMnr    InvestmentAccountOwnershipInformation12   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtdnForMnr,omitempty"`
	SucssrOnDth   []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SucssrOnDth,omitempty"`
	Admstr        []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Admstr,omitempty"`
	OthrPty       []ExtendedParty9                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OthrPty,omitempty"`
	Grntr         []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Grntr,omitempty"`
	Sttlr         []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Sttlr,omitempty"`
	RegdShrhldrNm RegisteredShareholderName1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RegdShrhldrNm,omitempty"`
}

type AccountParties8Choice struct {
	PmryOwnr InvestmentAccountOwnershipInformation12   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PmryOwnr"`
	Trstee   []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Trstee"`
	Nmnee    InvestmentAccountOwnershipInformation12   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nmnee"`
	JntOwnr  []InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 JntOwnr"`
}

type AccountRestrictions1 struct {
	Lmttn     Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Lmttn,omitempty"`
	AddtlInf  Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AddtlInf,omitempty"`
	AcctVldtn Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctVldtn,omitempty"`
	Tp        Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp,omitempty"`
	Rgltr     PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rgltr,omitempty"`
	Sts       RestrictionStatus1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Sts,omitempty"`
	Prd       DateTimePeriodDetails1      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prd,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type AccountStatus1Choice struct {
	Cd    AccountStatus4Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of ENAB, DISA, PEND, FORM
type AccountStatus4Code string

type AccountType2Choice struct {
	Cd    FundCashAccount4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type AccountUsageType2Choice struct {
	Cd    AccountUsageType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of INVE, ISSP, SETP, TRDP
type AccountUsageType2Code string

type AccountingStatus1Choice struct {
	Cd    AccountingStatus1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of YDOM, NDOM
type AccountingStatus1Code string

type ActiveCurrencyAnd13DecimalAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// Must match the pattern [A-Z]{3,3}
type ActiveOrHistoricCurrencyCode string

type AdditionalReference6 struct {
	Ref     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ref"`
	RefIssr PartyIdentification90Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RefIssr,omitempty"`
	MsgNm   Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MsgNm,omitempty"`
}

type AddressType1Choice struct {
	Cd    AddressType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of HOME, BIZZ
type AddressType1Code string

type AddressType2Choice struct {
	Cd    AddressType2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternateSecurityIdentification7 struct {
	Id    Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	IdSrc IdentificationSource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IdSrc"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern AT[0-9]{5,5}
type AustrianBankleitzahlIdentifier string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICFIIdentifier string

type Blocked2 struct {
	OrdrTp []OrderType2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OrdrTp"`
	Blckd  bool                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Blckd"`
	Rsn    BlockedReason1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rsn,omitempty"`
}

type BlockedHoldingDetails2 struct {
	BlckdHldg     Holding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BlckdHldg"`
	PrtlHldgUnits float64      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrtlHldgUnits,omitempty"`
	HldgCertNb    Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 HldgCertNb,omitempty"`
}

type BlockedReason1Choice struct {
	Rsn   BlockedReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rsn"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of BKRP, CMMT, CNFS, MORT, PLDG, TRPE, TRAN
type BlockedReason1Code string

// Must be at least 1 items long
type BloombergIdentifier string

type BranchData struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id,omitempty"`
	Nm      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm,omitempty"`
	PstlAdr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstlAdr,omitempty"`
}

// Must match the pattern CP[0-9]{4,4}
type CHIPSParticipantIdentifier string

// Must match the pattern CH[0-9]{6,6}
type CHIPSUniversalIdentifier string

// Must match the pattern CA[0-9]{9,9}
type CanadianPaymentsARNIdentifier string

// May be one of CRDT, DBIT
type CardType1Code string

type CashAccount32 struct {
	Id            AccountIdentificationAndName5 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	AcctOwnr      PartyIdentification70Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctOwnr,omitempty"`
	AcctSvcr      PartyIdentification70Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSvcr,omitempty"`
	AcctSvcrBrnch BranchData                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSvcrBrnch,omitempty"`
}

type CashAccount33 struct {
	SttlmCcy       ActiveCurrencyCode                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SttlmCcy"`
	Id             AccountIdentificationAndName5             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	AcctOwnr       PartyIdentification70Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctOwnr,omitempty"`
	AcctSvcr       FinancialInstitutionIdentification7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSvcr,omitempty"`
	AcctSvcrBrnch  BranchData                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSvcrBrnch,omitempty"`
	AcctOwnrOthrId []GenericIdentification82                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctOwnrOthrId,omitempty"`
	InvstmtAcctTp  AccountType2Choice                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InvstmtAcctTp,omitempty"`
	CdtDbt         CreditDebit3Code                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CdtDbt,omitempty"`
	SttlmInstrRsn  SettlementInstructionReason1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SttlmInstrRsn,omitempty"`
	CshAcctPurp    CashAccountType3Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CshAcctPurp,omitempty"`
	CshAcctDsgnt   AccountDesignation1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CshAcctDsgnt,omitempty"`
	DvddPctg       float64                                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DvddPctg,omitempty"`
}

type CashAccountType3Choice struct {
	Cd    CashAccountType5Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of LEND, COLL, SETT, MARR, SEGT
type CashAccountType5Code string

type CashSettlement1 struct {
	CshAcctDtls      []CashAccount33       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CshAcctDtls,omitempty"`
	OthrCshSttlmDtls []PaymentInstrument13 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OthrCshSttlmDtls,omitempty"`
}

// May be one of AMLC, DVLC, DFOR, GOST, IDEN, INCU, LREF, PASS, PRAD, PKIC
type CertificateType2Code string

type CertificationType1Choice struct {
	Cd    CertificateType2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type Cheque4 struct {
	PyeeId NameAndAddress5 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PyeeId"`
}

type CitizenshipInformation struct {
	Ntlty  string `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ntlty"`
	MnrInd bool   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MnrInd"`
}

type CivilStatus1Choice struct {
	Cd    CivilStatus1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of DIVO, LDIV, MARR, SEPA, SING, UNIO, WIDO
type CivilStatus1Code string

type ClearingSystemMemberIdentificationChoice struct {
	USCHU  CHIPSUniversalIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 USCHU"`
	NZNCC  NewZealandNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NZNCC"`
	IENSC  IrishNSCIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IENSC"`
	GBSC   UKDomesticSortCodeIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 GBSC"`
	USCH   CHIPSParticipantIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 USCH"`
	CHBC   SwissBCIdentifier                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CHBC"`
	USFW   FedwireRoutingNumberIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 USFW"`
	PTNCC  PortugueseNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PTNCC"`
	RUCB   RussianCentralBankIdentificationCodeIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RUCB"`
	ITNCC  ItalianDomesticIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ITNCC"`
	ATBLZ  AustrianBankleitzahlIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ATBLZ"`
	CACPA  CanadianPaymentsARNIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CACPA"`
	CHSIC  SwissSICIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CHSIC"`
	DEBLZ  GermanBankleitzahlIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DEBLZ"`
	ESNCC  SpanishDomesticInterbankingIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ESNCC"`
	ZANCC  SouthAfricanNCCIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ZANCC"`
	HKNCC  HongKongBankIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 HKNCC"`
	AUBSBx ExtensiveBranchNetworkIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AUBSBx"`
	AUBSBs SmallNetworkIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AUBSBs"`
}

// May be one of COLL, NCOL
type Collateral1Code string

type CommunicationAddress6 struct {
	AdrTp  AddressType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AdrTp,omitempty"`
	Email  Max256Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Email,omitempty"`
	Phne   PhoneNumber        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Phne,omitempty"`
	Mob    PhoneNumber        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Mob,omitempty"`
	FaxNb  PhoneNumber        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FaxNb,omitempty"`
	TlxAdr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TlxAdr,omitempty"`
	URLAdr Max256Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 URLAdr,omitempty"`
}

// May be one of SWMT, SWMX, FAXI, EMAL, PROP
type CommunicationMethod1Code string

type CommunicationMethod3Choice struct {
	Cd    CommunicationMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type CompanyLink1Choice struct {
	Cd    CompanyLink1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of AGEN, BROK, PART, MEMB, PCOM, RELA
type CompanyLink1Code string

// May be one of NSTA, RCLT, STAN
type ConductClassification1Code string

// Must be at least 1 items long
type ConsolidatedTapeAssociationIdentifier string

type ConsolidationType1Choice struct {
	Cd    ConsolidationType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of GENL, PART
type ConsolidationType1Code string

type CountryAndResidentialStatusType2 struct {
	Ctry      CountryCode            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ctry"`
	ResdtlSts ResidentialStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ResdtlSts"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of CRDT, DBIT
type CreditDebit3Code string

type CustomerConductClassification1Choice struct {
	Cd    ConductClassification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type DataBaseCheck1 struct {
	DBChck bool      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DBChck"`
	Id     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
}

type DateAndAmount1 struct {
	Dt  ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dt"`
	Amt ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Amt"`
}

type DateAndDateTime1Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DtTm"`
}

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DtTm"`
}

type DateTimePeriodDetails1 struct {
	FrDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FrDtTm"`
	ToDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ToDtTm,omitempty"`
}

type DeMinimus1Choice struct {
	DeMnmsAplbl    DeMinimusApplicable1    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DeMnmsAplbl"`
	DeMnmsNotAplbl DeMinimusNotApplicable1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DeMnmsNotAplbl"`
}

type DeMinimusApplicable1 struct {
	NewIssePrmssn bool    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NewIssePrmssn"`
	Pctg          float64 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Pctg,omitempty"`
}

type DeMinimusNotApplicable1 struct {
	RstrctdPrsnRsn Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RstrctdPrsnRsn"`
}

type DirectDebitMandate5 struct {
	DbtrAcct      AccountIdentificationAndName5             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DbtrAcct"`
	Dbtr          PartyIdentification70Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dbtr,omitempty"`
	DbtrTaxIdNb   Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DbtrTaxIdNb,omitempty"`
	DbtrNtlRegnNb Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DbtrNtlRegnNb,omitempty"`
	Cdtr          PartyIdentification70Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cdtr,omitempty"`
	DbtrAgt       FinancialInstitutionIdentification7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DbtrAgt"`
	DbtrAgtBrnch  BranchData                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DbtrAgtBrnch,omitempty"`
	CdtrAgt       FinancialInstitutionIdentification7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CdtrAgt,omitempty"`
	CdtrAgtBrnch  BranchData                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CdtrAgtBrnch,omitempty"`
	RegnId        Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RegnId,omitempty"`
	MndtId        Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MndtId,omitempty"`
}

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	AcctDtlsConf AccountDetailsConfirmationV06 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctDtlsConf"`
}

type DocumentToSend3 struct {
	Tp            Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp"`
	Rcpt          PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rcpt"`
	MtdOfTrnsmssn CommunicationMethod3Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MtdOfTrnsmssn"`
}

// May be one of ELIG, NELI
type Eligible1Code string

// Must be at least 1 items long
type EuroclearClearstreamIdentifier string

// May be one of DAIL, ADHO
type EventFrequency10Code string

// May be one of YEAR, SEMI, QUTR, TOMN, MNTH, TWMN, TOWK, WEEK, DAIL, ADHO, INDA, OVNG, ONDE
type EventFrequency1Code string

// May be one of ADHO, YEAR, DAIL, FOMN, TOMN, TOWK, TYEA, INDA, MNTH, ONDE, OVNG, QUTR, SEMI, TWMN, WEEK
type EventFrequency8Code string

// May be one of YEAR, SEMI, QUTR, TOMN, MNTH, TWMN, TOWK, WEEK, DAIL, ADHO, INDA, OVNG, ONDE, NONE
type EventFrequency9Code string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type Extended350Code string

type ExtendedParty9 struct {
	XtndedPtyRole Extended350Code                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 XtndedPtyRole"`
	OthrPtyDtls   InvestmentAccountOwnershipInformation12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OthrPtyDtls"`
}

type Extension1 struct {
	PlcAndNm Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PlcAndNm"`
	Txt      Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Txt"`
}

// Must match the pattern AU[0-9]{6,6}
type ExtensiveBranchNetworkIdentifier string

// Must be at least 1 items long
type ExternalAccountIdentification1Code string

type FATCAForm1Choice struct {
	Cd    FATCAFormType1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of CER5, CER7, CER1, CER2, CER3, CER4, CER6
type FATCAFormType1Code string

type FATCASource1Choice struct {
	Cd    FATCASourceStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of CALC, DECL
type FATCASourceStatus1Code string

// May be one of F101, F102, F103, F104, F105, F201, F202, F203, F204, F205, F206
type FATCAStatus1Code string

type FATCAStatus2 struct {
	Tp  FATCAStatus2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp"`
	Src FATCASource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Src,omitempty"`
}

type FATCAStatus2Choice struct {
	Cd    FATCAStatus1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// Must match the pattern FW[0-9]{9,9}
type FedwireRoutingNumberIdentifier string

type FinancialInstitutionIdentification7Choice struct {
	NmAndAdr    NameAndAddress5                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmAndAdr"`
	BICFI       BICFIIdentifier                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BICFI"`
	ClrSysMmbId ClearingSystemMemberIdentificationChoice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ClrSysMmbId"`
	PrtryId     SimpleIdentificationInformation4         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrtryId"`
}

type FinancialInstrument51 struct {
	Id            SecurityIdentification23Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	Nm            Max350Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm,omitempty"`
	ShrtNm        Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ShrtNm,omitempty"`
	SplmtryId     Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SplmtryId,omitempty"`
	ClssTp        Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ClssTp,omitempty"`
	SctiesForm    FormOfSecurity1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SctiesForm,omitempty"`
	DstrbtnPlcy   DistributionPolicy1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DstrbtnPlcy,omitempty"`
	PdctGrp       Max140Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PdctGrp,omitempty"`
	BlckdHldgDtls BlockedHoldingDetails2         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BlckdHldgDtls,omitempty"`
	Pldgg         Eligible1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Pldgg,omitempty"`
	Coll          Collateral1Code                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Coll,omitempty"`
	ThrdPtyRghts  ThirdPartyRights1              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ThrdPtyRghts,omitempty"`
	FndOwnrsh     FundOwnership1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FndOwnrsh,omitempty"`
	FndIntntn     FundIntention1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FndIntntn,omitempty"`
	OprlSts       OperationalStatus1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OprlSts,omitempty"`
}

type FiscalYear1Choice struct {
	StartDt ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StartDt"`
	EndDt   ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 EndDt"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type Frequency20Choice struct {
	Cd    EventFrequency8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of HEDG, CPFO, CPFS, SRSA, CSDO, TOFF, ICSA, CSDM, CSDP, PPEN, CPEN
type FundCashAccount4Code string

// May be one of YQUA, NQUA
type FundIntention1Code string

// May be one of ALLL, BUYI, SELL, SWII, SWIO, TRAI, TRAO, SUBS, REDM
type FundOrderType7Code string

// May be one of YALL, NALL
type FundOwnership1Code string

// May be one of MALE, FEMA
type GenderCode string

type GenericAccountIdentification1 struct {
	Id      Max34Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	SchmeNm AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SchmeNm,omitempty"`
	Issr    Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Issr,omitempty"`
}

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Issr,omitempty"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SchmeNm,omitempty"`
}

type GenericIdentification82 struct {
	Id       Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	Tp       OtherIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp"`
	Issr     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Issr,omitempty"`
	IsseDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IsseDt,omitempty"`
	XpryDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 XpryDt,omitempty"`
	Stat     Max70Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Stat,omitempty"`
	IssrCtry CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IssrCtry,omitempty"`
}

// Must match the pattern BL[0-9]{8,8}
type GermanBankleitzahlIdentifier string

type HighFrequencyTradingProfile1 struct {
	Dt         ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dt,omitempty"`
	SttlmFrqcy SettlementFrequency1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SttlmFrqcy,omitempty"`
	CnsldtnTp  ConsolidationType1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CnsldtnTp,omitempty"`
}

// May be one of CERT, NPRH, PRTH
type Holding1Code string

// Must match the pattern HK[0-9]{3,3}
type HongKongBankIdentifier string

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOYearMonth time.Time

func (t *ISOYearMonth) UnmarshalText(text []byte) error {
	return (*xsdGYearMonth)(t).UnmarshalText(text)
}
func (t ISOYearMonth) MarshalText() ([]byte, error) {
	return xsdGYearMonth(t).MarshalText()
}

type IdentificationSource1Choice struct {
	Dmst  CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dmst"`
	Prtry Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of CASH, SECU
type IncomePreference2Code string

type IndividualPerson27 struct {
	NmPrfx           NamePrefix1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmPrfx,omitempty"`
	GvnNm            Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 GvnNm,omitempty"`
	MddlNm           Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MddlNm,omitempty"`
	Nm               Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm"`
	NmSfx            Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmSfx,omitempty"`
	Gndr             GenderCode                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Gndr,omitempty"`
	BirthDt          ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BirthDt,omitempty"`
	CtryOfBirth      CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtryOfBirth,omitempty"`
	PrvcOfBirth      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrvcOfBirth,omitempty"`
	CityOfBirth      Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CityOfBirth,omitempty"`
	Prfssn           Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prfssn,omitempty"`
	PstlAdr          []PostalAddress21            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstlAdr"`
	Ctznsh           []CitizenshipInformation     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ctznsh,omitempty"`
	EmplngCpny       Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 EmplngCpny,omitempty"`
	BizFctn          Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BizFctn,omitempty"`
	PltclyXpsdPrsnTp PoliticalExposureType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PltclyXpsdPrsnTp,omitempty"`
	DthDt            ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DthDt,omitempty"`
	CvlSts           CivilStatus1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CvlSts,omitempty"`
	EdctnLvl         Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 EdctnLvl,omitempty"`
	FmlyInf          PersonalInformation1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FmlyInf,omitempty"`
}

type IndividualPerson29 struct {
	NmPrfx  NamePrefix1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmPrfx,omitempty"`
	GvnNm   Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 GvnNm,omitempty"`
	MddlNm  Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MddlNm,omitempty"`
	Nm      Max350Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm"`
	PstlAdr []PostalAddress21 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstlAdr"`
}

type InformationDistribution1Choice struct {
	Cd    InformationDistribution2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of ELEC, NONE, PAPR
type InformationDistribution2Code string

type InitialAmount1Choice struct {
	InitlNbOfInstlmts float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InitlNbOfInstlmts"`
	Amt               ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Amt"`
}

// May be one of LIFE, PDIS
type Insurance1Code string

type InsuranceType2Choice struct {
	Cd    Insurance1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type Intermediary36 struct {
	Id               PartyIdentification72Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	LglNttyIdr       LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 LglNttyIdr,omitempty"`
	Acct             Account20                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Acct,omitempty"`
	WvdTrlrComssnInd bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 WvdTrlrComssnInd,omitempty"`
	Role             PartyRole2Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Role,omitempty"`
	PmryComAdr       []CommunicationAddress6     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PmryComAdr,omitempty"`
	ScndryComAdr     []CommunicationAddress6     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ScndryComAdr,omitempty"`
	NmAndAdr         NameAndAddress4             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmAndAdr,omitempty"`
}

type InvestmentAccount50 struct {
	Id                  Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	Sts                 AccountStatus1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Sts"`
	StsDt               DateAndDateTime1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StsDt,omitempty"`
	Nm                  Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm,omitempty"`
	Dsgnt               Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dsgnt,omitempty"`
	Tp                  AccountType2Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp,omitempty"`
	OwnrshTp            OwnershipType2Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OwnrshTp"`
	TaxXmptn            TaxExemptionReason2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxXmptn,omitempty"`
	StmtFrqcy           StatementFrequencyReason2Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StmtFrqcy,omitempty"`
	RefCcy              ActiveCurrencyCode               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RefCcy,omitempty"`
	Lang                string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Lang,omitempty"`
	IncmPref            IncomePreference2Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IncmPref,omitempty"`
	RinvstmtDtls        []Reinvestment2                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RinvstmtDtls,omitempty"`
	TaxWhldgMtd         TaxWithholdingMethod3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxWhldgMtd,omitempty"`
	TaxRptg             []TaxReporting1                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxRptg,omitempty"`
	LttrInttDtls        LetterIntent1                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 LttrInttDtls,omitempty"`
	AcmltnRghtRef       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcmltnRghtRef,omitempty"`
	ReqrdSgntriesNb     float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ReqrdSgntriesNb,omitempty"`
	FndFmlyNm           Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FndFmlyNm,omitempty"`
	FinInstrmDtls       []FinancialInstrument51          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FinInstrmDtls,omitempty"`
	RndgDtls            RoundingParameters1              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RndgDtls,omitempty"`
	AcctSvcr            PartyIdentification70Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSvcr,omitempty"`
	BlckdSts            []Blocked2                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BlckdSts,omitempty"`
	AcctUsgTp           AccountUsageType2Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctUsgTp,omitempty"`
	FrgnStsCertfctn     Provided1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FrgnStsCertfctn,omitempty"`
	AcctSgntrDtTm       DateAndDateTimeChoice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctSgntrDtTm,omitempty"`
	TxChanlTp           TransactionChannelType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TxChanlTp,omitempty"`
	InvstmtAcctCtgy     InvestmentAccountCategory1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InvstmtAcctCtgy,omitempty"`
	Pldgg               Eligible1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Pldgg,omitempty"`
	Coll                Collateral1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Coll,omitempty"`
	ThrdPtyRghts        ThirdPartyRights1                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ThrdPtyRghts,omitempty"`
	PwrOfAttnyLvlOfCtrl LevelOfControl1Choice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PwrOfAttnyLvlOfCtrl,omitempty"`
	AcctgSts            AccountingStatus1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctgSts,omitempty"`
	OpngDt              DateAndDateTimeChoice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OpngDt,omitempty"`
	ClsgDt              DateAndDateTimeChoice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ClsgDt,omitempty"`
	NegInd              bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NegInd,omitempty"`
	PrcgOrdr            PositionEffect3Code              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrcgOrdr,omitempty"`
	Lblty               Liability1Choice                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Lblty,omitempty"`
	InvstrPrfl          []InvestorProfile1               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InvstrPrfl,omitempty"`
	FsclYr              FiscalYear1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FsclYr,omitempty"`
}

type InvestmentAccountCategory1Choice struct {
	Cd    InvestmentAccountCategory1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of MAND, RETA
type InvestmentAccountCategory1Code string

type InvestmentAccountOwnershipInformation12 struct {
	Pty               Party31Choice                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Pty"`
	MnyLndrgChck      MoneyLaunderingCheck1Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MnyLndrgChck,omitempty"`
	InvstrPrflVldtn   []PartyProfileInformation5       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InvstrPrflVldtn,omitempty"`
	OwnrshBnfcryRate  float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OwnrshBnfcryRate,omitempty"`
	ClntId            Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ClntId,omitempty"`
	FsclXmptn         bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FsclXmptn,omitempty"`
	SgntryRghtInd     bool                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SgntryRghtInd,omitempty"`
	MiFIDClssfctn     MiFIDClassification1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MiFIDClssfctn,omitempty"`
	Ntfctn            []Notification2                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ntfctn,omitempty"`
	FATCAFormTp       []FATCAForm1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FATCAFormTp,omitempty"`
	FATCASts          []FATCAStatus2                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FATCASts,omitempty"`
	OthrId            []GenericIdentification82        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OthrId,omitempty"`
	TaxXmptn          TaxExemptionReason2Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxXmptn,omitempty"`
	TaxRptg           []TaxReporting1                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxRptg,omitempty"`
	Lang              string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Lang,omitempty"`
	MailTp            MailType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MailTp,omitempty"`
	CtryAndResdtlSts  CountryAndResidentialStatusType2 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtryAndResdtlSts,omitempty"`
	MntryWlth         DateAndAmount1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MntryWlth,omitempty"`
	EqtyVal           DateAndAmount1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 EqtyVal,omitempty"`
	WorkgCptl         DateAndAmount1                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 WorkgCptl,omitempty"`
	CpnyLk            CompanyLink1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CpnyLk,omitempty"`
	ElctrncMlngSvcRef Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ElctrncMlngSvcRef,omitempty"`
	PmryComAdr        []CommunicationAddress6          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PmryComAdr,omitempty"`
	ScndryComAdr      []CommunicationAddress6          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ScndryComAdr,omitempty"`
	AddtlRgltryInf    RegulatoryInformation1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AddtlRgltryInf,omitempty"`
	AcctgSts          AccountingStatus1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AcctgSts,omitempty"`
	AddtlInf          []AccountRestrictions1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AddtlInf,omitempty"`
}

type InvestmentFundOrder4 struct {
	OrdrRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OrdrRef,omitempty"`
	MstrRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MstrRef,omitempty"`
}

// May be one of CACO, CONC, CUST, DATP, DIST, FACT, FIAD, FIAG, FMCO, FNBR, FTAG, INTR, INVE, INVS, PAYI, REGI, TRAG, TRAN
type InvestmentFundRole6Code string

// May be one of CONC, DIST, FMCO, INTR, PAYI, TRAG, CUST, CACO, FACT, INVE, INVS
type InvestmentFundRole7Code string

type InvestmentPlan12 struct {
	Frqcy               Frequency20Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Frqcy"`
	StartDt             ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StartDt,omitempty"`
	EndDt               ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 EndDt,omitempty"`
	Qty                 UnitsOrAmount1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Qty"`
	GrssAmtInd          bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 GrssAmtInd,omitempty"`
	IncmPref            IncomePreference2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IncmPref,omitempty"`
	InitlAmt            InitialAmount1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InitlAmt,omitempty"`
	TtlNbOfInstlmts     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TtlNbOfInstlmts,omitempty"`
	RndgDrctn           RoundingDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RndgDrctn,omitempty"`
	SctyDtls            []Repartition4         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SctyDtls"`
	CshSttlm            []CashSettlement1      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CshSttlm,omitempty"`
	CtrctRef            Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtrctRef,omitempty"`
	RltdCtrctRef        Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RltdCtrctRef,omitempty"`
	PdctId              Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PdctId,omitempty"`
	SLAChrgAndComssnRef Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SLAChrgAndComssnRef,omitempty"`
	InsrncCover         InsuranceType2Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InsrncCover,omitempty"`
	PlanSts             PlanStatus2Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PlanSts,omitempty"`
	InstlmtMgrRole      PartyRole4Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 InstlmtMgrRole,omitempty"`
}

type InvestorProfile1 struct {
	Tp            ProfileType1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp,omitempty"`
	Sts           InvestorProfileStatus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Sts,omitempty"`
	Trsr          TreasuryProfile1             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Trsr,omitempty"`
	HghFrqcyTradg HighFrequencyTradingProfile1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 HghFrqcyTradg,omitempty"`
	MktMakr       MarketMakerProfile1          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MktMakr,omitempty"`
}

type InvestorProfileStatus1Choice struct {
	Cd    InvestorProfileStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of DISA, DISG, ENAB, ENBG, ADMI, ANLY, NAPP, PSUS, PEND, SUPS
type InvestorProfileStatus1Code string

// Must match the pattern IE[0-9]{6,6}
type IrishNSCIdentifier string

// Must match the pattern IT[0-9]{10,10}
type ItalianDomesticIdentifier string

type KYCCheckType1Choice struct {
	Cd    KnowYourCustomerCheckType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of ENHA, ORDN, SIMP
type KnowYourCustomerCheckType1Code string

// Must match the pattern [A-Z0-9]{18,18}[0-9]{2,2}
type LEIIdentifier string

type LetterIntent1 struct {
	LttrInttRef Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 LttrInttRef"`
	Amt         ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Amt,omitempty"`
	StartDt     ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StartDt,omitempty"`
	EndDt       ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 EndDt,omitempty"`
}

type LevelOfControl1Choice struct {
	Cd    LevelOfControl1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of TRAN, VIEW
type LevelOfControl1Code string

type Liability1Choice struct {
	Cd    Liability1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of INVE, BROK
type Liability1Code string

type MailType1Choice struct {
	Cd    MailType1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of AIRM, ORDM, REGM
type MailType1Code string

type MarketMakerProfile1 struct {
	CtrctPrd DateTimePeriodDetails1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtrctPrd,omitempty"`
	Cmplc    bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cmplc,omitempty"`
	MaxSprd  float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MaxSprd,omitempty"`
	Dscnt    float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dscnt,omitempty"`
}

type MarketPracticeVersion1 struct {
	Nm Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm"`
	Dt ISOYearMonth `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dt,omitempty"`
	Nb Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nb,omitempty"`
}

// Must be at least 1 items long
type Max10Text string

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max34Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max3Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CreDtTm"`
}

type MiFIDClassification1 struct {
	Clssfctn OrderOriginatorEligibility1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Clssfctn"`
	Nrrtv    Max350Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nrrtv,omitempty"`
}

type MoneyLaunderingCheck1Choice struct {
	Cd    MoneyLaunderingCheck1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of PASS, NOTC, EXEM, CLMO, AUTH, POEP
type MoneyLaunderingCheck1Code string

type NameAndAddress4 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm,omitempty"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Adr"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Adr,omitempty"`
}

type NamePrefix1Choice struct {
	Cd    NamePrefix1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type NewIssueAllocation2 struct {
	Rstrctd     bool             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rstrctd"`
	XmptPrsnRsn Max350Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 XmptPrsnRsn,omitempty"`
	DeMnms      DeMinimus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DeMnms,omitempty"`
}

// Must match the pattern NZ[0-9]{6,6}
type NewZealandNCCIdentifier string

type Notification2 struct {
	NtfctnTp  Max35Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NtfctnTp"`
	Reqrd     bool                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Reqrd"`
	DstrbtnTp InformationDistribution1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DstrbtnTp,omitempty"`
}

// May be one of ENAB, SPEC
type OperationalStatus1Code string

// May be one of ELIG, RETL, PROF
type OrderOriginatorEligibility1Code string

type OrderType2Choice struct {
	Tp    FundOrderType7Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type Organisation23 struct {
	Nm      Max350Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm"`
	ShrtNm  Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ShrtNm,omitempty"`
	PstlAdr []PostalAddress21 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstlAdr"`
}

type Organisation24 struct {
	Nm         Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nm"`
	ShrtNm     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ShrtNm,omitempty"`
	Id         PartyIdentification72Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id,omitempty"`
	LglNttyIdr LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 LglNttyIdr,omitempty"`
	Purp       Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Purp,omitempty"`
	RegnCtry   CountryCode                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RegnCtry,omitempty"`
	RegnDt     ISODate                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RegnDt,omitempty"`
	PstlAdr    []PostalAddress21           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstlAdr"`
	TpOfOrg    OrganisationType1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TpOfOrg,omitempty"`
}

type OrganisationType1Choice struct {
	Cd    OrganisationType1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of IFUN, PRIV, PUBL, PFUN
type OrganisationType1Code string

type OtherIdentification3Choice struct {
	Cd    PartyIdentificationType7Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type OwnershipType2Choice struct {
	Cd    AccountOwnershipType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type Party31Choice struct {
	Org      Organisation24     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Org"`
	IndvPrsn IndividualPerson27 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IndvPrsn"`
}

type PartyIdentification70Choice struct {
	AnyBIC   AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AnyBIC"`
	PrtryId  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrtryId"`
	NmAndAdr NameAndAddress5        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmAndAdr"`
}

type PartyIdentification72Choice struct {
	AnyBIC  AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AnyBIC"`
	PrtryId GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrtryId"`
}

type PartyIdentification90Choice struct {
	AnyBIC   AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AnyBIC"`
	PrtryId  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PrtryId"`
	NmAndAdr NameAndAddress5        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmAndAdr"`
}

// May be one of ATIN, IDCD, NRIN, OTHR, PASS, POCD, SOCS, SRSA, GUNL, GTIN, ITIN, CPFA, AREG, DRLC, EMID, NINV, INCL, GIIN
type PartyIdentificationType7Code string

type PartyProfileInformation5 struct {
	CertfctnInd         bool                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CertfctnInd,omitempty"`
	VldtngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 VldtngPty,omitempty"`
	ChckngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ChckngPty,omitempty"`
	RspnsblPty          Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RspnsblPty,omitempty"`
	CertTp              CertificationType1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CertTp,omitempty"`
	ChckngDt            ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ChckngDt,omitempty"`
	ChckngFrqcy         EventFrequency1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ChckngFrqcy,omitempty"`
	NxtRvsnDt           ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NxtRvsnDt,omitempty"`
	SlryRg              Max35Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SlryRg,omitempty"`
	SrcOfWlth           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SrcOfWlth,omitempty"`
	CstmrCndctClssfctn  CustomerConductClassification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CstmrCndctClssfctn,omitempty"`
	RskLvl              RiskLevel2Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RskLvl,omitempty"`
	KnowYourCstmrChckTp KYCCheckType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 KnowYourCstmrChckTp,omitempty"`
	KnowYourCstmrDBChck DataBaseCheck1                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 KnowYourCstmrDBChck,omitempty"`
}

// May be one of CUST, INVS
type PartyRole1Code string

type PartyRole2Choice struct {
	Cd    InvestmentFundRole6Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type PartyRole4Choice struct {
	Cd    InvestmentFundRole7Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type PartyRole5Choice struct {
	Cd    PartyRole1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type PaymentCard18 struct {
	Tp         CardType1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp"`
	Nb         Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Nb"`
	HldrNm     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 HldrNm"`
	StartDt    ISOYearMonth                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StartDt,omitempty"`
	XpryDt     ISOYearMonth                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 XpryDt"`
	CardIssrNm Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CardIssrNm,omitempty"`
	CardIssrId PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CardIssrId,omitempty"`
	SctyCd     Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SctyCd,omitempty"`
	SeqNb      Max3Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SeqNb,omitempty"`
}

type PaymentInstrument13 struct {
	SttlmCcy          ActiveCurrencyCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SttlmCcy"`
	DvddPctg          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DvddPctg,omitempty"`
	SbcptPmtInstrm    PaymentInstrument18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SbcptPmtInstrm,omitempty"`
	RedPmtInstrm      PaymentInstrument19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RedPmtInstrm,omitempty"`
	DvddPmtInstrm     PaymentInstrument19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DvddPmtInstrm,omitempty"`
	SvgsPlanPmtInstrm PaymentInstrument18Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SvgsPlanPmtInstrm,omitempty"`
	IntrstPmtInstrm   PaymentInstrument19Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IntrstPmtInstrm,omitempty"`
}

type PaymentInstrument18Choice struct {
	PmtCardDtls PaymentCard18       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PmtCardDtls"`
	DrctDbtDtls DirectDebitMandate5 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DrctDbtDtls"`
	Chq         bool                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Chq"`
	BkrsDrft    bool                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BkrsDrft"`
}

type PaymentInstrument19Choice struct {
	ChqDtls      Cheque4 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ChqDtls"`
	BkrsDrftDtls Cheque4 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BkrsDrftDtls"`
}

type PersonalInformation1 struct {
	NmOfFthr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmOfFthr,omitempty"`
	MdnNmOfMthr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MdnNmOfMthr,omitempty"`
	NmOfPrtnr   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 NmOfPrtnr,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

// May be one of ACTV, CLOS, SUSP
type PlanStatus1Code string

type PlanStatus2Choice struct {
	Cd    PlanStatus1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type PoliticalExposureType1Choice struct {
	Cd    PoliticalExposureType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of NPEX, PEXF, PEXD
type PoliticalExposureType1Code string

// Must match the pattern PT[0-9]{8,8}
type PortugueseNCCIdentifier string

// May be one of FIFO, LIFO
type PositionEffect3Code string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ctry"`
}

type PostalAddress21 struct {
	AdrTp      AddressType2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AdrTp,omitempty"`
	MlngInd    bool               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 MlngInd,omitempty"`
	RegnAdrInd bool               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RegnAdrInd,omitempty"`
	CareOf     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CareOf,omitempty"`
	AdrLine    []Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 AdrLine,omitempty"`
	StrtNm     Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 StrtNm,omitempty"`
	BldgNb     Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BldgNb,omitempty"`
	BldgNm     Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 BldgNm,omitempty"`
	PstBx      Max10Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstBx,omitempty"`
	SdInBldg   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SdInBldg,omitempty"`
	Flr        Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Flr,omitempty"`
	SuiteId    Max10Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SuiteId,omitempty"`
	PstCd      Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 PstCd,omitempty"`
	DstrctNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DstrctNm,omitempty"`
	Vllg       Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Vllg,omitempty"`
	TwnNm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TwnNm,omitempty"`
	Stat       Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Stat,omitempty"`
	Ctry       CountryCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Ctry"`
}

type ProfileType1Choice struct {
	Cd    ProfileType1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of HEDG, HFTR, MAKE, TREA
type ProfileType1Code string

// May be one of NPRO, PROV
type Provided1Code string

// Must be at least 1 items long
type RICIdentifier string

// May be one of PRIM, SECO
type Rank1Code string

// May be one of REFR, NRFR, UKNW
type Referred1Code string

type ReferredAgent2 struct {
	Rfrd          Referred1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rfrd"`
	RfrdPlcmntAgt PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RfrdPlcmntAgt,omitempty"`
}

type RegisteredShareholderName1Choice struct {
	IndvPrsn IndividualPerson29 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 IndvPrsn"`
	Org      Organisation23     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Org"`
}

type RegulatoryInformation1 struct {
	Sctr  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Sctr,omitempty"`
	Brnch Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Brnch,omitempty"`
	Grp   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Grp,omitempty"`
	Othr  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Othr,omitempty"`
}

type Reinvestment2 struct {
	FinInstrmDtls FinancialInstrument51 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FinInstrmDtls"`
	ReqdNAVCcy    ActiveCurrencyCode    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ReqdNAVCcy,omitempty"`
	RinvstmtPctg  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RinvstmtPctg"`
}

type Repartition4 struct {
	Qty       UnitsOrAmountOrPercentage1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Qty"`
	FinInstrm FinancialInstrument51            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 FinInstrm"`
	CcyOfPlan ActiveOrHistoricCurrencyCode     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CcyOfPlan,omitempty"`
}

// May be one of RESI, PRES, NRES
type ResidentialStatus1Code string

type RestrictionStatus1Choice struct {
	Cd    RestrictionStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of ACTV, INAC
type RestrictionStatus1Code string

// May be one of HIGH, LOWW, MEDM
type RiskLevel1Code string

type RiskLevel2Choice struct {
	Cd    RiskLevel1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of RDUP, RDWN, STAN, DIST
type RoundingDirection1Code string

type RoundingParameters1 struct {
	RndgMdlus float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RndgMdlus,omitempty"`
	RndgDrctn RoundingDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RndgDrctn"`
}

// Must match the pattern RU[0-9]{9,9}
type RussianCentralBankIdentificationCodeIdentifier string

type SecurityIdentification23Choice struct {
	ISIN        ISINIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 ISIN"`
	SEDOL       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SEDOL"`
	CUSIP       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CUSIP"`
	RIC         RICIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 RIC"`
	TckrSymb    TickerIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TckrSymb"`
	Blmbrg      BloombergIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Blmbrg"`
	CTA         ConsolidatedTapeAssociationIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CTA"`
	QUICK       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 QUICK"`
	Wrtppr      string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Wrtppr"`
	Dtch        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dtch"`
	Vlrn        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Vlrn"`
	SCVM        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 SCVM"`
	Belgn       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Belgn"`
	Cmon        EuroclearClearstreamIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cmon"`
	OthrPrtryId AlternateSecurityIdentification7      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 OthrPrtryId"`
}

type SettlementFrequency1Choice struct {
	Cd    EventFrequency10Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type SettlementInstructionReason1Choice struct {
	Cd    SettlementInstructionReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// May be one of CSHI, ALLL, CSHO, CHAR, DIVI, INTE, SAVP, REDM, SAVE, BUYI, SELL, SUBS, WTHP, CORP
type SettlementInstructionReason1Code string

type SimpleIdentificationInformation4 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Id"`
}

// Must match the pattern AU[0-9]{6,6}
type SmallNetworkIdentifier string

// Must match the pattern ZA[0-9]{6,6}
type SouthAfricanNCCIdentifier string

// Must match the pattern ES[0-9]{8,9}
type SpanishDomesticInterbankingIdentifier string

type StatementFrequencyReason2Choice struct {
	Cd    EventFrequency9Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

// Must match the pattern SW[0-9]{3,5}
type SwissBCIdentifier string

// Must match the pattern SW[0-9]{6,6}
type SwissSICIdentifier string

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP, FORE, INCA, MINO, ASSO, DIPL, DOME, FORP, ORDR, PENF, REFU, RIHO, ADMI, TANR, OANR
type TaxExemptReason3Code string

type TaxExemptionReason2Choice struct {
	Cd    TaxExemptReason3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type TaxReporting1 struct {
	TaxtnCtry   CountryCode                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxtnCtry"`
	TaxRate     float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxRate,omitempty"`
	TaxPyer     PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxPyer,omitempty"`
	TaxRcpt     PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TaxRcpt,omitempty"`
	CshAcctDtls CashAccount32               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 CshAcctDtls,omitempty"`
	Desc        Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Desc,omitempty"`
}

// May be one of MITX, INVE, ACCT, EXMT, REPT, CRTF, WHCO, WTHD, WTRE
type TaxWithholdingMethod3Code string

type ThirdPartyRights1 struct {
	Tp         Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Tp"`
	DtTm       ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 DtTm,omitempty"`
	Hldr       PartyIdentification70Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Hldr,omitempty"`
	LglNttyIdr LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 LglNttyIdr,omitempty"`
	Amt        ActiveCurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Amt,omitempty"`
	Desc       Max350Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Desc,omitempty"`
}

// Must be at least 1 items long
type TickerIdentifier string

// May be one of FIAD, HOBA, BRAN
type TransactionChannel2Code string

type TransactionChannelType1Choice struct {
	Cd    TransactionChannel2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Prtry"`
}

type TreasuryProfile1 struct {
	Dt      ISODate          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Dt"`
	TradrTp PartyRole5Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 TradrTp"`
	Rate    float64          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Rate"`
}

// Must match the pattern SC[0-9]{6,6}
type UKDomesticSortCodeIdentifier string

type UnitsOrAmount1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Amt"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Unit"`
}

type UnitsOrAmountOrPercentage1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Amt"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Unit"`
	Pctg float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.06 Pctg"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYearMonth time.Time

func (t *xsdGYearMonth) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYearMonth) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
