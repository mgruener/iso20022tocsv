// Code generated by main. DO NOT EDIT.

package acmt_002_001_05

import (
	"bytes"
	"encoding/xml"
	"time"
)

type Account2 struct {
	Id       AccountIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id,omitempty"`
	AcctSvcr PartyIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctSvcr"`
}

type AccountDetailsConfirmationV05 struct {
	MsgId            MessageIdentification1                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MsgId"`
	OrdrRef          InvestmentFundOrder4                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OrdrRef,omitempty"`
	RltdRef          AdditionalReference3                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RltdRef,omitempty"`
	ConfDtls         AccountManagementConfirmation2             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ConfDtls"`
	InvstmtAcct      InvestmentAccount46                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InvstmtAcct,omitempty"`
	AcctPties        AccountParties12                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctPties,omitempty"`
	Intrmies         []Intermediary24                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Intrmies,omitempty"`
	Plcmnt           ReferredAgent1                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Plcmnt,omitempty"`
	NewIsseAllcn     NewIssueAllocation2                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NewIsseAllcn,omitempty"`
	SvgsInvstmtPlan  []InvestmentPlan10                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SvgsInvstmtPlan,omitempty"`
	WdrwlInvstmtPlan []InvestmentPlan10                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 WdrwlInvstmtPlan,omitempty"`
	CshSttlm         []InvestmentFundCashSettlementInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CshSttlm,omitempty"`
	SvcLvlAgrmt      []DocumentToSend2                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SvcLvlAgrmt,omitempty"`
	MktPrctcVrsn     MarketPracticeVersion1                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MktPrctcVrsn,omitempty"`
	Xtnsn            []Extension1                               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Xtnsn,omitempty"`
}

type AccountIdentification1 struct {
	Prtry SimpleIdentificationInformation `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type AccountIdentificationAndName3 struct {
	Id CashAccountIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Nm Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm,omitempty"`
}

type AccountManagementConfirmation2 struct {
	ConfTp     AccountManagementType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ConfTp"`
	AcctApplId Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctApplId,omitempty"`
	ClntRef    Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ClntRef,omitempty"`
	CtrPtyRef  AdditionalReference2       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtrPtyRef,omitempty"`
}

// May be one of ACCO, ACCM, GACC
type AccountManagementType2Code string

// May be one of JOIN, COMO, CUST, SIGL, JOIT, CORP, PART, TRUS, NOMI, NFPO, ONIS, EURE, GOVO, LLCO, RGIC
type AccountOwnershipType3Code string

type AccountParties12 struct {
	PrncplAcctPty AccountParties7Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrncplAcctPty"`
	ScndryOwnr    []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ScndryOwnr,omitempty"`
	Bnfcry        []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Bnfcry,omitempty"`
	PwrOfAttny    []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PwrOfAttny,omitempty"`
	LglGuardn     []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 LglGuardn,omitempty"`
	SucssrOnDth   []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SucssrOnDth,omitempty"`
	Admstr        []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Admstr,omitempty"`
	OthrPty       []ExtendedParty7                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OthrPty,omitempty"`
	Grntr         []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Grntr,omitempty"`
	Sttlr         []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Sttlr,omitempty"`
}

type AccountParties7Choice struct {
	PmryOwnr   InvestmentAccountOwnershipInformation10   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmryOwnr"`
	Trstee     []InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Trstee"`
	CtdnForMnr InvestmentAccountOwnershipInformation10   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtdnForMnr"`
	Nmnee      InvestmentAccountOwnershipInformation10   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nmnee"`
	JntOwnr    []InvestmentAccountOwnershipInformation9  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 JntOwnr"`
}

// May be one of ENAB, DISA, DELE
type AccountStatus1Code string

// May be one of ENAB, DISA, FORM
type AccountStatus2Code string

type AccountType1Choice struct {
	Cd    FundCashAccount3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type AccountUsageType1Choice struct {
	Cd    AccountUsageType1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of INVE, SETP
type AccountUsageType1Code string

type ActiveCurrencyAnd13DecimalAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

type ActiveCurrencyAndAmount struct {
	Value float64            `xml:",chardata"`
	Ccy   ActiveCurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AdditionalReference2 struct {
	Ref     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ref"`
	RefIssr PartyIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RefIssr,omitempty"`
	MsgNm   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MsgNm,omitempty"`
}

type AdditionalReference3 struct {
	Ref     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ref"`
	RefIssr PartyIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RefIssr,omitempty"`
	MsgNm   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MsgNm,omitempty"`
}

// May be one of HOME, BIZZ
type AddressType1Code string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AlternateSecurityIdentification1 struct {
	Id         Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	DmstIdSrc  CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DmstIdSrc"`
	PrtryIdSrc Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrtryIdSrc"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// Must match the pattern AT[0-9]{5,5}
type AustrianBankleitzahlIdentifier string

// Must match the pattern [a-zA-Z0-9]{1,30}
type BBANIdentifier string

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type BICIdentifier string

type Blocked1 struct {
	OrdrTp []FundOrderType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OrdrTp"`
	Blckd  bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Blckd"`
	Rsn    BlockedReason1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Rsn,omitempty"`
}

type BlockedHoldingDetails1 struct {
	BlckdHldg     Holding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BlckdHldg"`
	PrtlHldgUnits float64      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrtlHldgUnits,omitempty"`
	HldgCertNb    Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 HldgCertNb,omitempty"`
}

type BlockedReason1Choice struct {
	Rsn   BlockedReason1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Rsn"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of BKRP, CMMT, CNFS, MORT, PLDG, TRPE, TRAN
type BlockedReason1Code string

// Must be at least 1 items long
type BloombergIdentifier string

type BranchData struct {
	Id      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id,omitempty"`
	Nm      Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm,omitempty"`
	PstlAdr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstlAdr,omitempty"`
}

// Must match the pattern CP[0-9]{4,4}
type CHIPSParticipantIdentifier string

// Must match the pattern CH[0-9]{6,6}
type CHIPSUniversalIdentifier string

// Must match the pattern CA[0-9]{9,9}
type CanadianPaymentsARNIdentifier string

// May be one of CRDT, DBIT
type CardType1Code string

type CashAccount12 struct {
	Id       CashAccountIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Nm       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	Tp       CashAccountType1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp,omitempty"`
	XtndedTp Extended350Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XtndedTp,omitempty"`
	Ccy      ActiveCurrencyCode               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ccy"`
	Sts      AccountStatus1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Sts"`
}

type CashAccount26 struct {
	Id             AccountIdentificationAndName3 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	AcctOwnr       PartyIdentification2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctOwnr,omitempty"`
	AcctSvcr       PartyIdentification2Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctSvcr,omitempty"`
	AcctSvcrBrnch  BranchData                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctSvcrBrnch,omitempty"`
	InvstmtAcctTp  InvestmentAccountType1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InvstmtAcctTp,omitempty"`
	AcctOwnrOthrId []GenericIdentification46     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctOwnrOthrId,omitempty"`
}

type CashAccountIdentification1Choice struct {
	IBAN     IBANIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IBAN"`
	BBAN     BBANIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BBAN"`
	UPIC     UPICIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 UPIC"`
	DmstAcct SimpleIdentificationInformation `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DmstAcct"`
}

// May be one of SACC, CACC, SVGS
type CashAccountType1Code string

// May be one of AMLC, DVLC, DFOR, GOST, IDEN, INCU, LREF, PASS, PRAD, PKIC
type CertificateType2Code string

type CertificationType1Choice struct {
	Cd    CertificateType2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type Cheque4 struct {
	PyeeId NameAndAddress5 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PyeeId"`
}

type CitizenshipInformation struct {
	Ntlty  string `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ntlty"`
	MnrInd bool   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MnrInd"`
}

type ClearingSystemMemberIdentificationChoice struct {
	USCHU  CHIPSUniversalIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 USCHU"`
	NZNCC  NewZealandNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NZNCC"`
	IENSC  IrishNSCIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IENSC"`
	GBSC   UKDomesticSortCodeIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 GBSC"`
	USCH   CHIPSParticipantIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 USCH"`
	CHBC   SwissBCIdentifier                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CHBC"`
	USFW   FedwireRoutingNumberIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 USFW"`
	PTNCC  PortugueseNCCIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PTNCC"`
	RUCB   RussianCentralBankIdentificationCodeIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RUCB"`
	ITNCC  ItalianDomesticIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ITNCC"`
	ATBLZ  AustrianBankleitzahlIdentifier                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ATBLZ"`
	CACPA  CanadianPaymentsARNIdentifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CACPA"`
	CHSIC  SwissSICIdentifier                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CHSIC"`
	DEBLZ  GermanBankleitzahlIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DEBLZ"`
	ESNCC  SpanishDomesticInterbankingIdentifier          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ESNCC"`
	ZANCC  SouthAfricanNCCIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ZANCC"`
	HKNCC  HongKongBankIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 HKNCC"`
	AUBSBx ExtensiveBranchNetworkIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AUBSBx"`
	AUBSBs SmallNetworkIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AUBSBs"`
}

type CommunicationAddress3 struct {
	Email  Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Email,omitempty"`
	Phne   PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Phne,omitempty"`
	Mob    PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Mob,omitempty"`
	FaxNb  PhoneNumber `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FaxNb,omitempty"`
	TlxAdr Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TlxAdr,omitempty"`
	URLAdr Max256Text  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 URLAdr,omitempty"`
}

// May be one of SWMT, SWMX, FAXI, EMAL, PROP
type CommunicationMethod1Code string

type CommunicationMethod3Choice struct {
	Cd    CommunicationMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of NSTA, RCLT, STAN
type ConductClassification1Code string

// Must be at least 1 items long
type ConsolidatedTapeAssociationIdentifier string

type CountryAndResidentialStatusType1 struct {
	Ctry      CountryCode            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ctry"`
	ResdtlSts ResidentialStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ResdtlSts"`
}

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// Must match the pattern [A-Z]{3,3}
type CurrencyCode string

type CustomerConductClassification1Choice struct {
	Cd    ConductClassification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type DataBaseCheck1 struct {
	DBChck bool      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DBChck"`
	Id     Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
}

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DtTm"`
}

type DeMinimus1Choice struct {
	DeMnmsAplbl    DeMinimusApplicable1    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DeMnmsAplbl"`
	DeMnmsNotAplbl DeMinimusNotApplicable1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DeMnmsNotAplbl"`
}

type DeMinimusApplicable1 struct {
	NewIssePrmssn bool    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NewIssePrmssn"`
	Pctg          float64 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Pctg,omitempty"`
}

type DeMinimusNotApplicable1 struct {
	RstrctdPrsnRsn Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RstrctdPrsnRsn"`
}

type DirectDebitMandate4 struct {
	DbtrAcct      AccountIdentificationAndName3             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DbtrAcct"`
	Dbtr          PartyIdentification2Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Dbtr,omitempty"`
	DbtrTaxIdNb   Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DbtrTaxIdNb,omitempty"`
	DbtrNtlRegnNb Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DbtrNtlRegnNb,omitempty"`
	Cdtr          PartyIdentification2Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cdtr,omitempty"`
	DbtrAgt       FinancialInstitutionIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DbtrAgt"`
	DbtrAgtBrnch  BranchData                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DbtrAgtBrnch,omitempty"`
	CdtrAgt       FinancialInstitutionIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CdtrAgt,omitempty"`
	CdtrAgtBrnch  BranchData                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CdtrAgtBrnch,omitempty"`
	RegnId        Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RegnId,omitempty"`
	MndtId        Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MndtId,omitempty"`
}

// May be one of DIST, ACCU
type DistributionPolicy1Code string

type Document struct {
	AcctDtlsConf AccountDetailsConfirmationV05 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctDtlsConf"`
}

type DocumentToSend2 struct {
	Tp            Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
	Rcpt          PartyIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Rcpt"`
	MtdOfTrnsmssn CommunicationMethod3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MtdOfTrnsmssn"`
}

// Must be at least 1 items long
type EuroclearClearstreamIdentifier string

// May be one of YEAR, SEMI, QUTR, TOMN, MNTH, TWMN, TOWK, WEEK, DAIL, ADHO, INDA, OVNG, ONDE
type EventFrequency1Code string

// May be one of ADHO, YEAR, DAIL, FOMN, TOMN, TOWK, TYEA, INDA, MNTH, ONDE, OVNG, QUTR, SEMI, TWMN, WEEK
type EventFrequency8Code string

// Must match the pattern [a-zA-Z0-9]{4}
type Exact4AlphaNumericText string

// Must be at least 1 items long
type Extended350Code string

type ExtendedParty7 struct {
	XtndedPtyRole Extended350Code                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XtndedPtyRole"`
	OthrPtyDtls   InvestmentAccountOwnershipInformation10 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OthrPtyDtls"`
}

type Extension1 struct {
	PlcAndNm Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PlcAndNm"`
	Txt      Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Txt"`
}

// Must match the pattern AU[0-9]{6,6}
type ExtensiveBranchNetworkIdentifier string

type FATCAForm1Choice struct {
	Cd    FATCAFormType1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of CER5, CER7, CER1, CER2, CER3, CER4, CER6
type FATCAFormType1Code string

type FATCASource1Choice struct {
	Cd    FATCASourceStatus1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of CALC, DECL
type FATCASourceStatus1Code string

type FATCAStatus1 struct {
	Tp  FATCAStatus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
	Src FATCASource1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Src,omitempty"`
}

type FATCAStatus1Choice struct {
	Cd    FATCAStatus1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of F101, F102, F103, F104, F105, F201, F202, F203, F204, F205, F206
type FATCAStatus1Code string

// Must match the pattern FW[0-9]{9,9}
type FedwireRoutingNumberIdentifier string

type FinancialInstitutionIdentification3Choice struct {
	NmAndAdr    NameAndAddress5                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmAndAdr"`
	BIC         BICIdentifier                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BIC"`
	ClrSysMmbId ClearingSystemMemberIdentificationChoice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ClrSysMmbId"`
	PrtryId     SimpleIdentificationInformation          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrtryId"`
}

type FinancialInstrument29 struct {
	Id            SecurityIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Nm            Max350Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm,omitempty"`
	SplmtryId     Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SplmtryId,omitempty"`
	ClssTp        Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ClssTp,omitempty"`
	SctiesForm    FormOfSecurity1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SctiesForm,omitempty"`
	DstrbtnPlcy   DistributionPolicy1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DstrbtnPlcy,omitempty"`
	PdctGrp       Max140Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PdctGrp,omitempty"`
	BlckdHldgDtls BlockedHoldingDetails1        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BlckdHldgDtls,omitempty"`
}

// May be one of BEAR, REGD
type FormOfSecurity1Code string

type Frequency20Choice struct {
	Cd    EventFrequency8Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of CASH, CPFO, CPFS, SRSA
type FundCashAccount2Code string

// May be one of CASH, CPFO, CPFS, SRSA, HEDG
type FundCashAccount3Code string

type FundOrderType1Choice struct {
	Tp    FundOrderType6Code      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of ALLL, REDM, SUBS, SWII, SWIO, TRAI, TRAO
type FundOrderType6Code string

// May be one of MALE, FEMA
type GenderCode string

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr,omitempty"`
}

type GenericIdentification29 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SchmeNm,omitempty"`
}

type GenericIdentification41 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SchmeNm,omitempty"`
}

type GenericIdentification44 struct {
	Id     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Tp     OtherIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
	Issr   Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr,omitempty"`
	IsseDt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IsseDt,omitempty"`
	XpryDt ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XpryDt,omitempty"`
}

type GenericIdentification46 struct {
	Id Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Tp OtherIdentification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
}

type GenericIdentification47 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Issr    Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr"`
	SchmeNm Max4AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SchmeNm,omitempty"`
}

type GenericIdentification55 struct {
	Id       Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Tp       OtherIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
	Issr     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr,omitempty"`
	IsseDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IsseDt,omitempty"`
	XpryDt   ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XpryDt,omitempty"`
	IssrCtry CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IssrCtry,omitempty"`
}

// Must match the pattern BL[0-9]{8,8}
type GermanBankleitzahlIdentifier string

// May be one of CERT, NPRH, PRTH
type Holding1Code string

// Must match the pattern HK[0-9]{3,3}
type HongKongBankIdentifier string

// Must match the pattern [a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBANIdentifier string

// Must match the pattern [A-Z0-9]{12,12}
type ISINIdentifier string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type ISOYearMonth time.Time

func (t *ISOYearMonth) UnmarshalText(text []byte) error {
	return (*xsdGYearMonth)(t).UnmarshalText(text)
}
func (t ISOYearMonth) MarshalText() ([]byte, error) {
	return xsdGYearMonth(t).MarshalText()
}

// May be one of CASH, DRIP
type IncomePreference1Code string

type IndividualPerson22 struct {
	NmPrfx           NamePrefix1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmPrfx,omitempty"`
	GvnNm            Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 GvnNm"`
	MddlNm           Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MddlNm,omitempty"`
	Nm               Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	NmSfx            Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmSfx,omitempty"`
	Gndr             GenderCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Gndr,omitempty"`
	Lang             string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Lang,omitempty"`
	BirthDt          ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BirthDt"`
	CtryOfBirth      CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtryOfBirth,omitempty"`
	PrvcOfBirth      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrvcOfBirth,omitempty"`
	CityOfBirth      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CityOfBirth,omitempty"`
	Prfssn           Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prfssn,omitempty"`
	TaxtnCtry        CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxtnCtry,omitempty"`
	CtryAndResdtlSts CountryAndResidentialStatusType1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtryAndResdtlSts,omitempty"`
	PstlAdr          []PostalAddress3                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstlAdr"`
	Ctznsh           []CitizenshipInformation         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ctznsh"`
	EmplngCpny       Max140Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 EmplngCpny,omitempty"`
	BizFctn          Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BizFctn,omitempty"`
	PmryComAdr       CommunicationAddress3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmryComAdr,omitempty"`
	ScndryComAdr     CommunicationAddress3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ScndryComAdr,omitempty"`
	OthrId           []GenericIdentification44        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OthrId,omitempty"`
	AddtlRgltryInf   RegulatoryInformation1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AddtlRgltryInf,omitempty"`
	PltclyXpsdPrsnTp PoliticalExposureType1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PltclyXpsdPrsnTp,omitempty"`
}

type IndividualPerson23 struct {
	NmPrfx           NamePrefix1Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmPrfx,omitempty"`
	GvnNm            Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 GvnNm"`
	MddlNm           Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MddlNm,omitempty"`
	Nm               Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	NmSfx            Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmSfx,omitempty"`
	Gndr             GenderCode                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Gndr,omitempty"`
	Lang             string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Lang,omitempty"`
	BirthDt          ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BirthDt"`
	CtryOfBirth      CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtryOfBirth,omitempty"`
	PrvcOfBirth      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrvcOfBirth,omitempty"`
	CityOfBirth      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CityOfBirth,omitempty"`
	Prfssn           Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prfssn,omitempty"`
	TaxtnCtry        CountryCode                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxtnCtry,omitempty"`
	CtryAndResdtlSts CountryAndResidentialStatusType1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtryAndResdtlSts,omitempty"`
	PstlAdr          []PostalAddress3                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstlAdr"`
	Ctznsh           []CitizenshipInformation         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ctznsh"`
	EmplngCpny       Max140Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 EmplngCpny,omitempty"`
	BizFctn          Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BizFctn,omitempty"`
	PmryComAdr       CommunicationAddress3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmryComAdr,omitempty"`
	ScndryComAdr     CommunicationAddress3            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ScndryComAdr,omitempty"`
	OthrId           []GenericIdentification55        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OthrId,omitempty"`
	AddtlRgltryInf   RegulatoryInformation1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AddtlRgltryInf,omitempty"`
	PltclyXpsdPrsnTp PoliticalExposureType1Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PltclyXpsdPrsnTp,omitempty"`
}

// May be one of ELEC, PAPR
type InformationDistribution1Code string

// May be one of LIFE, PDIS
type Insurance1Code string

type InsuranceType1Choice struct {
	Cd    Insurance1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification41 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type Intermediary24 struct {
	Id               PartyIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Acct             Account2                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Acct,omitempty"`
	WvdTrlrComssnInd bool                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 WvdTrlrComssnInd,omitempty"`
	Role             PartyRole2Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Role,omitempty"`
	PmryComAdr       CommunicationAddress3      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmryComAdr,omitempty"`
	ScndryComAdr     CommunicationAddress3      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ScndryComAdr,omitempty"`
	NmAndAdr         NameAndAddress4            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmAndAdr,omitempty"`
}

type InvestmentAccount46 struct {
	Id              AccountIdentification1           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Sts             AccountStatus2Code               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Sts"`
	Nm              Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm,omitempty"`
	Dsgnt           Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Dsgnt,omitempty"`
	Tp              AccountType1Choice               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp,omitempty"`
	OwnrshTp        OwnershipType1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OwnrshTp"`
	TaxXmptn        TaxExemptionReason1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxXmptn,omitempty"`
	StmtFrqcy       StatementFrequencyReason1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StmtFrqcy,omitempty"`
	RefCcy          ActiveCurrencyCode               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RefCcy,omitempty"`
	Lang            string                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Lang,omitempty"`
	IncmPref        IncomePreference1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IncmPref,omitempty"`
	RinvstmtDtls    []Reinvestment1                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RinvstmtDtls,omitempty"`
	TaxWhldgMtd     TaxWithholdingMethod2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxWhldgMtd,omitempty"`
	LttrInttDtls    LetterIntent1                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 LttrInttDtls,omitempty"`
	AcmltnRghtRef   Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcmltnRghtRef,omitempty"`
	ReqrdSgntriesNb float64                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ReqrdSgntriesNb,omitempty"`
	FndFmlyNm       Max350Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FndFmlyNm,omitempty"`
	RndgDtls        RoundingParameters1              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RndgDtls,omitempty"`
	AcctSvcr        PartyIdentification2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctSvcr,omitempty"`
	FndsDtls        []FinancialInstrument29          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FndsDtls,omitempty"`
	CshAcct         []CashAccount12                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CshAcct,omitempty"`
	SctiesAcct      []SecuritiesAccount4             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SctiesAcct,omitempty"`
	BlckdSts        []Blocked1                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BlckdSts,omitempty"`
	AcctUsgTp       AccountUsageType1Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctUsgTp,omitempty"`
	FrgnStsCertfctn Provided1Code                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FrgnStsCertfctn,omitempty"`
	AcctSgntrDtTm   DateAndDateTimeChoice            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AcctSgntrDtTm,omitempty"`
	TxChanlTp       TransactionChannelType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TxChanlTp,omitempty"`
	InvstmtAcctCtgy InvestmentAccountCategory1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InvstmtAcctCtgy,omitempty"`
}

type InvestmentAccountCategory1Choice struct {
	Cd    InvestmentAccountCategory1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of MAND, RETA
type InvestmentAccountCategory1Code string

type InvestmentAccountOwnershipInformation10 struct {
	Pty              Party23Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Pty"`
	MnyLndrgChck     MoneyLaunderingCheck1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MnyLndrgChck,omitempty"`
	InvstrPrflVldtn  []PartyProfileInformation4   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InvstrPrflVldtn,omitempty"`
	OwnrshBnfcryRate float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OwnrshBnfcryRate,omitempty"`
	ClntId           Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ClntId,omitempty"`
	FsclXmptn        bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FsclXmptn,omitempty"`
	SgntryRghtInd    bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SgntryRghtInd,omitempty"`
	MiFIDClssfctn    MiFIDClassification1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MiFIDClssfctn,omitempty"`
	InfDstrbtn       InformationDistribution1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InfDstrbtn,omitempty"`
	FATCAFormTp      []FATCAForm1Choice           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FATCAFormTp,omitempty"`
	FATCASts         []FATCAStatus1               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FATCASts,omitempty"`
}

type InvestmentAccountOwnershipInformation9 struct {
	Pty              Party16Choice                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Pty"`
	MnyLndrgChck     MoneyLaunderingCheck1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MnyLndrgChck,omitempty"`
	InvstrPrflVldtn  []PartyProfileInformation3   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InvstrPrflVldtn,omitempty"`
	OwnrshBnfcryRate float64                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OwnrshBnfcryRate,omitempty"`
	ClntId           Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ClntId,omitempty"`
	FsclXmptn        bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FsclXmptn,omitempty"`
	SgntryRghtInd    bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SgntryRghtInd,omitempty"`
	MiFIDClssfctn    MiFIDClassification1         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MiFIDClssfctn,omitempty"`
	InfDstrbtn       InformationDistribution1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InfDstrbtn,omitempty"`
}

type InvestmentAccountType1Choice struct {
	Cd    FundCashAccount2Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type InvestmentFundCashSettlementInformation7 struct {
	SbcptPmtInstrm    PaymentInstrument11 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SbcptPmtInstrm,omitempty"`
	RedPmtInstrm      PaymentInstrument12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RedPmtInstrm,omitempty"`
	DvddPmtInstrm     PaymentInstrument12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DvddPmtInstrm,omitempty"`
	SvgsPlanPmtInstrm PaymentInstrument11 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SvgsPlanPmtInstrm,omitempty"`
	IntrstPmtInstrm   PaymentInstrument12 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IntrstPmtInstrm,omitempty"`
}

type InvestmentFundOrder4 struct {
	OrdrRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OrdrRef,omitempty"`
	MstrRef Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MstrRef,omitempty"`
}

// May be one of CACO, CONC, CUST, DATP, DIST, FACT, FIAD, FIAG, FMCO, FNBR, FTAG, INTR, INVE, INVS, PAYI, REGI, TRAG, TRAN
type InvestmentFundRole6Code string

// May be one of CONC, DIST, FMCO, INTR, PAYI, TRAG, CUST, CACO, FACT, INVE, INVS
type InvestmentFundRole7Code string

type InvestmentPlan10 struct {
	Frqcy               Frequency20Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Frqcy"`
	StartDt             ISODate                                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StartDt,omitempty"`
	EndDt               ISODate                                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 EndDt,omitempty"`
	Qty                 UnitsOrAmount1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Qty"`
	GrssAmtInd          bool                                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 GrssAmtInd,omitempty"`
	IncmPref            IncomePreference1Code                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IncmPref,omitempty"`
	InitlNbOfInstlmts   float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InitlNbOfInstlmts,omitempty"`
	TtlNbOfInstlmts     float64                                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TtlNbOfInstlmts,omitempty"`
	RndgDrctn           RoundingDirection1Code                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RndgDrctn,omitempty"`
	SctyDtls            []Repartition3                             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SctyDtls"`
	CshSttlm            []InvestmentFundCashSettlementInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CshSttlm,omitempty"`
	CtrctRef            Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtrctRef,omitempty"`
	RltdCtrctRef        Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RltdCtrctRef,omitempty"`
	PdctId              Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PdctId,omitempty"`
	SLAChrgAndComssnRef Max35Text                                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SLAChrgAndComssnRef,omitempty"`
	InsrncCover         InsuranceType1Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InsrncCover,omitempty"`
	PlanSts             PlanStatus1Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PlanSts,omitempty"`
	InstlmtMgrRole      PartyRole4Choice                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 InstlmtMgrRole,omitempty"`
}

// Must match the pattern IE[0-9]{6,6}
type IrishNSCIdentifier string

// Must match the pattern IT[0-9]{10,10}
type ItalianDomesticIdentifier string

type KYCCheckType1Choice struct {
	Cd    KnowYourCustomerCheckType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of ENHA, ORDN, SIMP
type KnowYourCustomerCheckType1Code string

type LetterIntent1 struct {
	LttrInttRef Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 LttrInttRef"`
	Amt         ActiveCurrencyAnd13DecimalAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Amt,omitempty"`
	StartDt     ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StartDt,omitempty"`
	EndDt       ISODate                          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 EndDt,omitempty"`
}

type LongPostalAddress1Choice struct {
	Ustrd Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ustrd"`
	Strd  StructuredLongPostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Strd"`
}

type MarketPracticeVersion1 struct {
	Nm Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	Dt ISOYearMonth `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Dt,omitempty"`
	Nb Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nb,omitempty"`
}

// Must be at least 1 items long
type Max140Text string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

// Must be at least 1 items long
type Max350Text string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max3Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max70Text string

type MessageIdentification1 struct {
	Id      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	CreDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CreDtTm"`
}

type MiFIDClassification1 struct {
	Clssfctn OrderOriginatorEligibility1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Clssfctn"`
	Nrrtv    Max350Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nrrtv,omitempty"`
}

type MoneyLaunderingCheck1Choice struct {
	Cd    MoneyLaunderingCheck1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of PASS, NOTC, EXEM, CLMO, AUTH, POEP
type MoneyLaunderingCheck1Code string

type NameAndAddress2 struct {
	Nm  Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	Adr LongPostalAddress1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Adr,omitempty"`
}

type NameAndAddress4 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm,omitempty"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Adr"`
}

type NameAndAddress5 struct {
	Nm  Max350Text     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Adr,omitempty"`
}

type NamePrefix1Choice struct {
	Cd    NamePrefix1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type NewIssueAllocation2 struct {
	Rstrctd     bool             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Rstrctd"`
	XmptPrsnRsn Max350Text       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XmptPrsnRsn,omitempty"`
	DeMnms      DeMinimus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DeMnms,omitempty"`
}

// Must match the pattern NZ[0-9]{6,6}
type NewZealandNCCIdentifier string

// May be one of ELIG, RETL, PROF
type OrderOriginatorEligibility1Code string

type Organisation13 struct {
	Nm             Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	Id             PartyIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id,omitempty"`
	Purp           Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Purp,omitempty"`
	TaxtnCtry      CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxtnCtry,omitempty"`
	RegnCtry       CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RegnCtry,omitempty"`
	RegnDt         ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RegnDt,omitempty"`
	TaxIdNb        Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxIdNb,omitempty"`
	NtlRegnNb      Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NtlRegnNb,omitempty"`
	PstlAdr        []PostalAddress3           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstlAdr"`
	PmryComAdr     CommunicationAddress3      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmryComAdr,omitempty"`
	ScndryComAdr   CommunicationAddress3      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ScndryComAdr,omitempty"`
	AddtlRgltryInf RegulatoryInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AddtlRgltryInf,omitempty"`
}

type Organisation16 struct {
	Nm             Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	Id             PartyIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id,omitempty"`
	Purp           Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Purp,omitempty"`
	TaxtnCtry      CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxtnCtry,omitempty"`
	RegnCtry       CountryCode                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RegnCtry,omitempty"`
	RegnDt         ISODate                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RegnDt,omitempty"`
	TaxId          []TaxIdentification2       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxId,omitempty"`
	NtlRegnNb      Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NtlRegnNb,omitempty"`
	PstlAdr        []PostalAddress3           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstlAdr"`
	PmryComAdr     CommunicationAddress3      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmryComAdr,omitempty"`
	ScndryComAdr   CommunicationAddress3      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ScndryComAdr,omitempty"`
	AddtlRgltryInf RegulatoryInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AddtlRgltryInf,omitempty"`
}

type OtherIdentification1Choice struct {
	Cd    PersonIdentificationType5Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type OtherIdentification2Choice struct {
	Cd    PersonIdentificationType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification29       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type OwnershipType1Choice struct {
	Cd    AccountOwnershipType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type Party16Choice struct {
	Org      Organisation13     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Org"`
	IndvPrsn IndividualPerson22 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IndvPrsn"`
}

type Party23Choice struct {
	Org      Organisation16     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Org"`
	IndvPrsn IndividualPerson23 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IndvPrsn"`
}

type PartyIdentification1Choice struct {
	BICOrBEI AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BICOrBEI"`
	PrtryId  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrtryId"`
	NmAndAdr NameAndAddress2        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmAndAdr"`
}

type PartyIdentification2Choice struct {
	BICOrBEI AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BICOrBEI"`
	PrtryId  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrtryId"`
	NmAndAdr NameAndAddress5        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmAndAdr"`
}

type PartyIdentification4Choice struct {
	BICOrBEI AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BICOrBEI"`
	PrtryId  GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PrtryId"`
}

type PartyProfileInformation3 struct {
	CertfctnInd         bool                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CertfctnInd,omitempty"`
	VldtngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 VldtngPty,omitempty"`
	ChckngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChckngPty,omitempty"`
	RspnsblPty          Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RspnsblPty,omitempty"`
	CertTp              CertificationType1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CertTp,omitempty"`
	ChckngDt            ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChckngDt,omitempty"`
	ChckngFrqcy         EventFrequency1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChckngFrqcy,omitempty"`
	NxtRvsnDt           ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NxtRvsnDt,omitempty"`
	SlryRg              Max35Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SlryRg,omitempty"`
	SrcOfWlth           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SrcOfWlth,omitempty"`
	CstmrCndctClssfctn  CustomerConductClassification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CstmrCndctClssfctn,omitempty"`
	RskLvl              RiskLevel1Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RskLvl,omitempty"`
	KnowYourCstmrChckTp KYCCheckType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 KnowYourCstmrChckTp,omitempty"`
}

type PartyProfileInformation4 struct {
	CertfctnInd         bool                                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CertfctnInd,omitempty"`
	VldtngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 VldtngPty,omitempty"`
	ChckngPty           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChckngPty,omitempty"`
	RspnsblPty          Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RspnsblPty,omitempty"`
	CertTp              CertificationType1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CertTp,omitempty"`
	ChckngDt            ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChckngDt,omitempty"`
	ChckngFrqcy         EventFrequency1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChckngFrqcy,omitempty"`
	NxtRvsnDt           ISODate                              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NxtRvsnDt,omitempty"`
	SlryRg              Max35Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SlryRg,omitempty"`
	SrcOfWlth           Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SrcOfWlth,omitempty"`
	CstmrCndctClssfctn  CustomerConductClassification1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CstmrCndctClssfctn,omitempty"`
	RskLvl              RiskLevel1Choice                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RskLvl,omitempty"`
	KnowYourCstmrChckTp KYCCheckType1Choice                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 KnowYourCstmrChckTp,omitempty"`
	KnowYourCstmrDBChck DataBaseCheck1                       `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 KnowYourCstmrDBChck,omitempty"`
}

type PartyRole2Choice struct {
	Cd    InvestmentFundRole6Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type PartyRole4Choice struct {
	Cd    InvestmentFundRole7Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type PaymentCard2 struct {
	Tp         CardType1Code              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Tp"`
	Nb         Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nb"`
	HldrNm     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 HldrNm"`
	StartDt    ISOYearMonth               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StartDt,omitempty"`
	XpryDt     ISOYearMonth               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XpryDt"`
	CardIssrNm Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CardIssrNm,omitempty"`
	CardIssrId PartyIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CardIssrId,omitempty"`
	SctyCd     Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SctyCd,omitempty"`
	SeqNb      Max3Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SeqNb,omitempty"`
}

type PaymentInstrument11 struct {
	SttlmCcy  ActiveCurrencyCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SttlmCcy"`
	PmtInstrm PaymentInstrument17Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmtInstrm"`
}

type PaymentInstrument12 struct {
	SttlmCcy  ActiveCurrencyCode        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SttlmCcy"`
	PmtInstrm PaymentInstrument16Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmtInstrm"`
	DvddPctg  float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DvddPctg,omitempty"`
}

type PaymentInstrument16Choice struct {
	CshAcctDtls  []CashAccount26 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CshAcctDtls"`
	ChqDtls      Cheque4         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ChqDtls"`
	BkrsDrftDtls Cheque4         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BkrsDrftDtls"`
}

type PaymentInstrument17Choice struct {
	CshAcctDtls []CashAccount26     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CshAcctDtls"`
	PmtCardDtls PaymentCard2        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PmtCardDtls"`
	DrctDbtDtls DirectDebitMandate4 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DrctDbtDtls"`
	Chq         bool                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Chq"`
	BkrsDrft    bool                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BkrsDrft"`
}

// May be one of AREG, CPFA, DRLC, EMID, IDCD, NRIN, OTHR, PASS, POCD, SOCS, SRSA, GUNL
type PersonIdentificationType5Code string

// May be one of AREG, CPFA, DRLC, EMID, IDCD, NRIN, OTHR, PASS, POCD, SOCS, SRSA, GUNL, ATIN, GTIN, ITIN
type PersonIdentificationType6Code string

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PlanStatus1Choice struct {
	Cd    PlanStatus1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of ACTV, CLOS, SUSP
type PlanStatus1Code string

type PoliticalExposureType1Choice struct {
	Cd    PoliticalExposureType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of NPEX, PEXF, PEXD
type PoliticalExposureType1Code string

// Must match the pattern PT[0-9]{8,8}
type PortugueseNCCIdentifier string

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ctry"`
}

type PostalAddress3 struct {
	AdrTp      AddressType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 AdrTp"`
	MlngInd    bool             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 MlngInd"`
	RegnAdrInd bool             `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RegnAdrInd"`
	NmAndAdr   NameAndAddress4  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 NmAndAdr"`
}

// May be one of NPRO, PROV
type Provided1Code string

// Must be at least 1 items long
type RICIdentifier string

// May be one of REFR, NRFR, UKNW
type Referred1Code string

type ReferredAgent1 struct {
	Rfrd          Referred1Code              `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Rfrd"`
	RfrdPlcmntAgt PartyIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RfrdPlcmntAgt,omitempty"`
}

type RegulatoryInformation1 struct {
	Sctr  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Sctr,omitempty"`
	Brnch Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Brnch,omitempty"`
	Grp   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Grp,omitempty"`
	Othr  Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Othr,omitempty"`
}

type Reinvestment1 struct {
	FndDtls      FinancialInstrument29 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FndDtls"`
	ReqdNAVCcy   CurrencyCode          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ReqdNAVCcy,omitempty"`
	RinvstmtPctg float64               `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RinvstmtPctg"`
}

type Repartition3 struct {
	Qty       UnitsOrAmountOrPercentage1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Qty"`
	FinInstrm FinancialInstrument29            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FinInstrm"`
	CcyOfPlan CurrencyCode                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CcyOfPlan,omitempty"`
}

// May be one of RESI, PRES, NRES
type ResidentialStatus1Code string

type RiskLevel1Choice struct {
	Cd    RiskLevel1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification41 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of HIGH, LOWW, MEDM
type RiskLevel1Code string

// May be one of RDUP, RDWN, STAN, DIST
type RoundingDirection1Code string

type RoundingParameters1 struct {
	RndgMdlus float64                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RndgMdlus,omitempty"`
	RndgDrctn RoundingDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RndgDrctn"`
}

// Must match the pattern RU[0-9]{9,9}
type RussianCentralBankIdentificationCodeIdentifier string

type SecuritiesAccount4 struct {
	Id                 AccountIdentification1        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	Nm                 Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Nm"`
	FinInstrmSplmtryId Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FinInstrmSplmtryId,omitempty"`
	FinInstrmId        SecurityIdentification3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FinInstrmId,omitempty"`
	FinInstrmNm        Max350Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 FinInstrmNm,omitempty"`
	Sts                AccountStatus1Code            `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Sts"`
}

type SecurityIdentification3Choice struct {
	ISIN        ISINIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 ISIN"`
	SEDOL       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SEDOL"`
	CUSIP       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CUSIP"`
	RIC         RICIdentifier                         `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RIC"`
	TckrSymb    TickerIdentifier                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TckrSymb"`
	Blmbrg      BloombergIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Blmbrg"`
	CTA         ConsolidatedTapeAssociationIdentifier `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CTA"`
	QUICK       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 QUICK"`
	Wrtppr      string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Wrtppr"`
	Dtch        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Dtch"`
	Vlrn        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Vlrn"`
	SCVM        string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 SCVM"`
	Belgn       string                                `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Belgn"`
	Cmon        EuroclearClearstreamIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cmon"`
	OthrPrtryId AlternateSecurityIdentification1      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 OthrPrtryId"`
}

type SimpleIdentificationInformation struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
}

// Must match the pattern AU[0-9]{6,6}
type SmallNetworkIdentifier string

// Must match the pattern ZA[0-9]{6,6}
type SouthAfricanNCCIdentifier string

// Must match the pattern ES[0-9]{8,9}
type SpanishDomesticInterbankingIdentifier string

type StatementFrequencyReason1Choice struct {
	Cd    EventFrequency1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type StructuredLongPostalAddress1 struct {
	BldgNm     Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 BldgNm,omitempty"`
	StrtNm     Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StrtNm,omitempty"`
	StrtBldgId Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 StrtBldgId,omitempty"`
	Flr        Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Flr,omitempty"`
	TwnNm      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TwnNm"`
	DstrctNm   Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 DstrctNm,omitempty"`
	RgnId      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 RgnId,omitempty"`
	Stat       Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Stat,omitempty"`
	CtyId      Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 CtyId,omitempty"`
	Ctry       CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Ctry"`
	PstCdId    Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 PstCdId"`
	POB        Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 POB,omitempty"`
}

// Must match the pattern SW[0-9]{3,5}
type SwissBCIdentifier string

// Must match the pattern SW[0-9]{6,6}
type SwissSICIdentifier string

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP
type TaxExemptReason1Code string

type TaxExemptionReason1Choice struct {
	Cd    TaxExemptReason1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

type TaxIdentification2 struct {
	Id       Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Id"`
	TaxIdTp  TaxIdentificationType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 TaxIdTp"`
	Issr     Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Issr,omitempty"`
	IsseDt   ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IsseDt,omitempty"`
	XpryDt   ISODate                      `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 XpryDt,omitempty"`
	IssrCtry CountryCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 IssrCtry"`
}

// May be one of GIIN, GTIN
type TaxIdentificationNumberType1Code string

type TaxIdentificationType1Choice struct {
	Cd    TaxIdentificationNumberType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47          `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// May be one of WHCO, REPT, CRTF, WTHD, WTRE
type TaxWithholdingMethod2Code string

// Must be at least 1 items long
type TickerIdentifier string

// May be one of FIAD, HOBA, BRAN
type TransactionChannel2Code string

type TransactionChannelType1Choice struct {
	Cd    TransactionChannel2Code `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Cd"`
	Prtry GenericIdentification47 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Prtry"`
}

// Must match the pattern SC[0-9]{6,6}
type UKDomesticSortCodeIdentifier string

// Must match the pattern [0-9]{8,17}
type UPICIdentifier string

type UnitsOrAmount1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Amt"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Unit"`
}

type UnitsOrAmountOrPercentage1Choice struct {
	Amt  ActiveCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Amt"`
	Unit float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Unit"`
	Pctg float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:acmt.002.001.05 Pctg"`
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdGYearMonth time.Time

func (t *xsdGYearMonth) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01")
}
func (t xsdGYearMonth) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdGYearMonth) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
