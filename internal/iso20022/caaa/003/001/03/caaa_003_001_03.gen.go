// Code generated by main. DO NOT EDIT.

package caaa_003_001_03

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorCompletionAdvice3 struct {
	Envt  CardPaymentEnvironment22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Envt"`
	Cntxt CardPaymentContext6      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cntxt,omitempty"`
	Tx    CardPaymentTransaction25 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tx"`
}

type AcceptorCompletionAdviceV03 struct {
	Hdr        Header8                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Hdr"`
	CmpltnAdvc AcceptorCompletionAdvice3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CmpltnAdvc"`
	SctyTrlr   ContentInformationType8   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SctyTrlr"`
}

type AccountingAccount1 struct {
	Id           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	CostRefPttrn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CostRefPttrn,omitempty"`
}

type Acquirer2 struct {
	Id         GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	ParamsVrsn Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ParamsVrsn"`
}

type AdditionalInformation1 struct {
	InfTp  InformationType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InfTp"`
	InfVal Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InfVal"`
}

type AdditionalInformation6 struct {
	InfTp  ExternalInformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InfTp"`
	InfVal Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InfVal"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AddressVerification1 struct {
	AdrDgts    Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AdrDgts,omitempty"`
	PstlCdDgts Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PstlCdDgts,omitempty"`
}

type Adjustment4 struct {
	Tp             AdjustmentType2Code      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	OthrAdjstmntTp Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrAdjstmntTp"`
	Drctn          AdjustmentDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Drctn"`
	Amt            CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Amt"`
}

// May be one of ADDD, SUBS
type AdjustmentDirection1Code string

// May be one of REBA, DISC, CREN, SURC
type AdjustmentType2Code string

// May be one of MACC, MCCS, CMA1
type Algorithm10Code string

// May be one of HS25, HS38, HS51
type Algorithm5Code string

// May be one of EA2C, E3DC
type Algorithm6Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1
type Algorithm9Code string

type AlgorithmIdentification10 struct {
	Algo  Algorithm10Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Algo"`
	Param Parameter1      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Param,omitempty"`
}

type AlgorithmIdentification6 struct {
	Algo  Algorithm6Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Algo"`
	Param Parameter1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Param,omitempty"`
}

type AlgorithmIdentification7 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Algo"`
	Param Parameter2     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Param,omitempty"`
}

type AlgorithmIdentification8 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Algo"`
	Param Parameter3     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Param,omitempty"`
}

type AlgorithmIdentification9 struct {
	Algo  Algorithm9Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Algo"`
	Param Parameter1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Param,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of ATTD, SATT, UATT
type AttendanceContext1Code string

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData3 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Vrsn,omitempty"`
	Rcpt        []Recipient3Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rcpt"`
	MACAlgo     AlgorithmIdentification10 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MACAlgo"`
	NcpsltdCntt EncapsulatedContent2      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NcpsltdCntt"`
	MAC         Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MAC"`
}

// May be one of ICCD, AGNT, MERC
type AuthenticationEntity1Code string

// May be one of BYPS, MANU, MERC, FPIN, NPIN, PPSG, PSWD, SCRT, SCNL, SNCT, CPSG, UKNW
type AuthenticationMethod2Code string

type AuthorisationResult2 struct {
	AuthstnNtty   GenericIdentification33 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType1           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthstnCd,omitempty"`
}

type BinaryFile1 struct {
	MIMETp         Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MIMETp,omitempty"`
	NcodgTp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NcodgTp,omitempty"`
	CharSet        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CharSet,omitempty"`
	InclBinryObjct Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InclBinryObjct,omitempty"`
}

// May be one of CMCH, CNMH, CNMT, CNMO, CMSS, CNUS
type CSCResult1Code string

// May be one of DFLT, SVNG, CHCK, CRDT, UVRL, INVS, EPRS
type CardAccountType1Code string

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL
type CardDataReading1Code string

type CardPaymentContext6 struct {
	PmtCntxt  PaymentContext6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PmtCntxt"`
	SaleCntxt SaleContext1    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SaleCntxt,omitempty"`
}

type CardPaymentEnvironment22 struct {
	Acqrr             Acquirer2               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Acqrr,omitempty"`
	Mrchnt            Organisation8           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Mrchnt,omitempty"`
	POI               PointOfInteraction3     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 POI"`
	Card              PaymentCard8            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Card,omitempty"`
	Crdhldr           Cardholder6             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Crdhldr,omitempty"`
	PrtctdCrdhldrData ContentInformationType7 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrtctdCrdhldrData,omitempty"`
}

type CardPaymentInvoice1 struct {
	InvcHdr   InvoiceHeader1  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InvcHdr"`
	TradAgrmt TradeAgreement6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TradAgrmt"`
	TradDlvry TradeDelivery1  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TradDlvry"`
	LineItm   []LineItem10    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LineItm,omitempty"`
}

// May be one of IRES, URES, PRES, ARES, FREC, RREC
type CardPaymentServiceType3Code string

// May be one of BALC, CACT, CRDP, CAFH, CAVR, CSHW, CSHD, DEFR, LOAD, ORCR, PINC, QUCH, RFND, RESA, VALC, UNLD, CAFT, CAFL
type CardPaymentServiceType5Code string

// May be one of AGGR, DCCV, GRTT, LOYT, NRES, PUCO, RECP, SOAF, VCAU, INSI, INSA, CSHB
type CardPaymentServiceType6Code string

type CardPaymentTransaction21 struct {
	SaleRefId Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SaleRefId,omitempty"`
	TxId      TransactionIdentifier1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxId"`
	POIId     GenericIdentification32       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 POIId,omitempty"`
	InitrTxId Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InitrTxId,omitempty"`
	RcptTxId  Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RcptTxId,omitempty"`
	TxTp      CardPaymentServiceType5Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxTp"`
	AddtlSvc  []CardPaymentServiceType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlSvc,omitempty"`
	SvcAttr   CardPaymentServiceType3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SvcAttr,omitempty"`
	TxRslt    CardPaymentTransactionResult1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxRslt,omitempty"`
}

type CardPaymentTransaction25 struct {
	TxCaptr      bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxCaptr,omitempty"`
	TxTp         CardPaymentServiceType5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxTp"`
	AddtlSvc     []CardPaymentServiceType6Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlSvc,omitempty"`
	SvcAttr      CardPaymentServiceType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SvcAttr,omitempty"`
	MrchntCtgyCd Min3Max4Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MrchntCtgyCd"`
	SaleRefId    Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SaleRefId,omitempty"`
	TxId         TransactionIdentifier1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxId"`
	OrgnlTx      CardPaymentTransaction21        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OrgnlTx,omitempty"`
	TxSucss      bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxSucss"`
	Rvsl         bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rvsl,omitempty"`
	MrchntOvrrd  bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MrchntOvrrd,omitempty"`
	FailrRsn     []FailureReason3Code            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FailrRsn,omitempty"`
	InitrTxId    Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InitrTxId,omitempty"`
	RcptTxId     Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RcptTxId,omitempty"`
	RcncltnId    Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RcncltnId,omitempty"`
	IntrchngData Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IntrchngData,omitempty"`
	TxDtls       CardPaymentTransactionDetails14 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxDtls"`
	AuthstnRslt  AuthorisationResult2            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthstnRslt,omitempty"`
	TxVrfctnRslt TransactionVerificationResult2  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxVrfctnRslt,omitempty"`
	AddtlTxData  []Max70Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlTxData,omitempty"`
}

type CardPaymentTransactionDetails14 struct {
	Ccy            CurrencyCode          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Ccy"`
	TtlAmt         float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TtlAmt"`
	AmtQlfr        TypeOfAmount1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AmtQlfr,omitempty"`
	DtldAmt        DetailedAmount5       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DtldAmt,omitempty"`
	ReqdAmt        float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ReqdAmt,omitempty"`
	AuthrsdAmt     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthrsdAmt,omitempty"`
	VldtyDt        ISODate               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 VldtyDt,omitempty"`
	UattnddLvlCtgy Max35NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 UattnddLvlCtgy,omitempty"`
	AcctTp         CardAccountType1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AcctTp,omitempty"`
	ConvsAccptd    bool                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ConvsAccptd,omitempty"`
	CcyConvs       CurrencyConversion1   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CcyConvs,omitempty"`
	Instlmt        RecurringTransaction2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Instlmt,omitempty"`
	Pdct           []Product1            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Pdct,omitempty"`
	CardPmtInvc    CardPaymentInvoice1   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardPmtInvc,omitempty"`
	ICCRltdData    Max10000Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ICCRltdData,omitempty"`
}

type CardPaymentTransactionResult1 struct {
	AuthstnNtty   GenericIdentification33 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType1           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthstnCd,omitempty"`
}

type Cardholder6 struct {
	Id        []PersonIdentification7     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	Nm        Max45Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
	Authntcn  []CardholderAuthentication4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Authntcn,omitempty"`
	AdrVrfctn AddressVerification1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AdrVrfctn,omitempty"`
	PrsnlData Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrsnlData,omitempty"`
}

// May be one of AMCH, ANMH, ANMT, ANMO, AMSS, ANUS, PMCH, PNMH, PNMT, PNMO, PMSS, PNUS
type CardholderAddressVerificationResult1Code string

type CardholderAuthentication4 struct {
	AuthntcnMtd  AuthenticationMethod2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthntcnMtd"`
	AuthntcnNtty AuthenticationEntity1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthntcnNtty"`
}

// May be one of MNSG, NPIN, FCPN, FEPN, FDSG, FBIO, MNVR, FBIG, APKI, PKIS, CHDT, SCEC
type CardholderVerificationCapability1Code string

type CertificateIdentifier1 struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IssrAndSrlNb"`
}

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RltvDstngshdNm"`
}

// May be one of POST, REGF, SHIP, CHAR, OTHR, PREM, PACK, PICK, SECU, INSU, MISC
type ChargeType17Code string

// May be one of SIGN, STDE, STOR, PACK, PICK, DNGR, SECU, INSU, COLF, CHOR, CHDE, AIRF, TRPT
type ChargeType8Code string

type ChargeTypeFormat3Choice struct {
	Cd    ChargeType17Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

type ChargesDetails2 struct {
	Tp          ChargeType8Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	OthrChrgsTp Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrChrgsTp"`
	Amt         CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Amt"`
}

type Commission18 struct {
	Rate     float64    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rate"`
	AddtlInf Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlInf,omitempty"`
}

type Commission19 struct {
	Amt      float64    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Amt"`
	AddtlInf Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlInf,omitempty"`
}

type CommunicationCharacteristics2 struct {
	ComTp   POICommunicationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ComTp"`
	RmotPty []PartyType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RmotPty"`
	Actv    bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Actv"`
}

type Consignment2 struct {
	Consgnr      TradeParty1       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Consgnr,omitempty"`
	Consgn       TradeParty1       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Consgn,omitempty"`
	TrnsprtMeans []TransportMeans3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrnsprtMeans,omitempty"`
}

type Contacts3 struct {
	NmPrfx    NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NmPrfx,omitempty"`
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
	PhneNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PhneNb,omitempty"`
	MobNb     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MobNb,omitempty"`
	FaxNb     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FaxNb,omitempty"`
	EmailAdr  Max2048Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 EmailAdr,omitempty"`
	Othr      Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Othr,omitempty"`
	JobTitl   Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 JobTitl,omitempty"`
	Rspnsblty Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rspnsblty,omitempty"`
	Dept      Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Dept,omitempty"`
}

type ContentInformationType7 struct {
	CnttTp     ContentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CnttTp"`
	EnvlpdData EnvelopedData3   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 EnvlpdData"`
}

type ContentInformationType8 struct {
	CnttTp       ContentType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CnttTp"`
	AuthntcdData []AuthenticatedData3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AuthntcdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, ECRP, AUTH
type ContentType1Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type CountryCodeAndName1 struct {
	Cd CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd,omitempty"`
	Nm Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
}

type CurrencyAndAmount struct {
	Value float64      `xml:",chardata"`
	Ccy   CurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type CurrencyCode string

type CurrencyConversion1 struct {
	CcyConvsId    Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CcyConvsId,omitempty"`
	Rslt          CurrencyConversionResponse1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rslt"`
	RspnRsn       Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RspnRsn,omitempty"`
	TrgtCcy       CurrencyCode                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrgtCcy"`
	TrgtCcyNmrc   Exact3NumericText               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrgtCcyNmrc"`
	TrgtCcyDcml   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrgtCcyDcml"`
	TrgtCcyNm     Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrgtCcyNm,omitempty"`
	RsltgAmt      float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RsltgAmt"`
	XchgRate      float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 XchgRate"`
	NvrtdXchgRate float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NvrtdXchgRate,omitempty"`
	QtnDt         ISODateTime                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 QtnDt,omitempty"`
	VldUntil      ISODateTime                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 VldUntil,omitempty"`
	SrcCcy        CurrencyCode                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SrcCcy"`
	SrcCcyNmrc    CurrencyCode                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SrcCcyNmrc,omitempty"`
	SrcCcyDcml    float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SrcCcyDcml"`
	SrcCcyNm      Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SrcCcyNm,omitempty"`
	OrgnlAmt      float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OrgnlAmt"`
	ComssnDtls    []Commission19                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ComssnDtls,omitempty"`
	MrkUpDtls     []Commission18                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MrkUpDtls,omitempty"`
	DclrtnDtls    Max2048Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DclrtnDtls,omitempty"`
}

// May be one of ODCC, DCCA, ICRD, IMER, IPRD, IRAT, NDCC
type CurrencyConversionResponse1Code string

type DateAndDateTimeChoice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DtTm"`
}

type DateAndPlaceOfBirth struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtryOfBirth"`
}

type DateFormat4Choice struct {
	Dt         DateAndDateTimeChoice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Dt"`
	NotSpcfdDt DateType6Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NotSpcfdDt"`
	Prtry      GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

// May be one of OPEN, UKWN, ONGO
type DateType6Code string

type DetailedAmount4 struct {
	Amt  float64    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Amt"`
	Labl Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Labl,omitempty"`
}

type DetailedAmount5 struct {
	CshBck      float64           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CshBck,omitempty"`
	Grtty       float64           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Grtty,omitempty"`
	Fees        []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Fees,omitempty"`
	Rbt         []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rbt,omitempty"`
	ValAddedTax []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ValAddedTax,omitempty"`
}

type DiscountOrChargeType1Choice struct {
	ChrgTp  ChargeTypeFormat3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ChrgTp"`
	DscntTp DiscountTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DscntTp"`
}

// May be one of QUAN, PROM, PRIC, SPAG, ENOR
type DiscountType1Code string

type DiscountTypeFormat1Choice struct {
	Cd    DiscountType1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

type DisplayCapabilities2 struct {
	DispTp    UserInterface2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DispTp"`
	NbOfLines float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NbOfLines"`
	LineWidth float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LineWidth"`
}

type Document struct {
	AccptrCmpltnAdvc AcceptorCompletionAdviceV03 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AccptrCmpltnAdvc"`
}

type DocumentGeneralInformation2 struct {
	DocTp           ExternalDocumentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DocTp"`
	DocNb           Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DocNb"`
	SndrRcvrSeqId   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SndrRcvrSeqId,omitempty"`
	IsseDt          ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IsseDt,omitempty"`
	URL             Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 URL,omitempty"`
	AttchdBinryFile []BinaryFile1             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AttchdBinryFile,omitempty"`
}

type DocumentIdentification22 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DtOfIsse,omitempty"`
}

type DocumentIdentification23 struct {
	Id         Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	DtOfIsse   ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DtOfIsse,omitempty"`
	OrdrLineId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OrdrLineId,omitempty"`
}

type EncapsulatedContent2 struct {
	CnttTp ContentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cntt,omitempty"`
}

type EncryptedContent2 struct {
	CnttTp         ContentType1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CnttNcrptnAlgo"`
	NcrptdData     Max10000Binary           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NcrptdData"`
}

type EnvelopedData3 struct {
	Vrsn       float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Vrsn,omitempty"`
	Rcpt       []Recipient3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rcpt"`
	NcrptdCntt EncryptedContent2  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NcrptdCntt"`
}

// May be no more than 10 items long
type Exact10Text string

// Must match the pattern [0-9]
type Exact1NumericText string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must match the pattern [0-9]{4}
type Exact4NumericText string

// Must be at least 1 items long
type ExternalDocumentPurpose1Code string

// Must be at least 1 items long
type ExternalDocumentType1Code string

// Must be at least 1 items long
type ExternalIncoterms1Code string

// Must be at least 1 items long
type ExternalInformationType1Code string

// Must be at least 1 items long
type ExternalOrganisationIdentification1Code string

// Must be at least 1 items long
type ExternalPackagingType1Code string

// Must be at least 1 items long
type ExternalPersonIdentification1Code string

// May be one of CDCL, CUCL, MALF, FDCL, NDCL, PART, SFRD, TIMO, LATE, UCMP, USND, SECU
type FailureReason3Code string

// May be one of YEAR, MNTH, QURT, MIAN, WEEK, DAIL, TEND
type Frequency3Code string

type GenericIdentification13 struct {
	Id      Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	SchmeNm Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SchmeNm,omitempty"`
	Issr    Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr"`
}

type GenericIdentification31 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShrtNm,omitempty"`
}

type GenericIdentification32 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp,omitempty"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShrtNm,omitempty"`
}

type GenericIdentification33 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShrtNm,omitempty"`
}

type GenericIdentification4 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	IdTp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IdTp"`
}

type GenericIdentification48 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	Vrsn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Vrsn"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr,omitempty"`
}

type Header8 struct {
	MsgFctn        MessageFunction4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MsgFctn"`
	PrtcolVrsn     Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrtcolVrsn"`
	XchgId         Max3NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 XchgId"`
	ReTrnsmssnCntr Max3NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ReTrnsmssnCntr,omitempty"`
	CreDtTm        ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CreDtTm"`
	InitgPty       GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InitgPty"`
	RcptPty        GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RcptPty,omitempty"`
	Tracblt        []Traceability1         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tracblt,omitempty"`
}

// Must match the pattern [a-z]{2,2}
type ISO2ALanguageCode string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Incoterms3 struct {
	IncotrmsCd Incoterms4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IncotrmsCd"`
	Lctn       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Lctn,omitempty"`
}

type Incoterms4Choice struct {
	Cd    ExternalIncoterms1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

type InformationType1Choice struct {
	Cd    InformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

// May be one of INST, RELY
type InformationType1Code string

// May be one of EQPM, NQPM, DFRI
type InstalmentPlan1Code string

type InvoiceHeader1 struct {
	Id       Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	TpCd     ExternalDocumentType1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TpCd"`
	Nm       []Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
	IsseDtTm ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IsseDtTm"`
	Issr     TradeParty1                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr,omitempty"`
	LangCd   string                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LangCd,omitempty"`
	CpyInd   bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CpyInd,omitempty"`
	DocPurp  ExternalDocumentPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DocPurp,omitempty"`
	InclNote []AdditionalInformation6     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InclNote,omitempty"`
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SrlNb"`
}

type KEK3 struct {
	Vrsn          float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Vrsn,omitempty"`
	KEKId         KEKIdentifier1           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification9 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyNcrptnAlgo"`
	NcrptdKey     Max140Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NcrptdKey"`
}

type KEKIdentifier1 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyId"`
	KeyVrsn   Exact10Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyVrsn"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DerivtnId,omitempty"`
}

type KeyTransport3 struct {
	Vrsn          float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Vrsn,omitempty"`
	RcptId        CertificateIdentifier1   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyNcrptnAlgo"`
	NcrptdKey     Max3000Binary            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NcrptdKey"`
}

type LegalOrganisation1 struct {
	Id Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	Nm Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
}

type LineItem10 struct {
	Id                Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	TradPdct          TradeProduct1              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TradPdct,omitempty"`
	BuyrOrdrId        DocumentIdentification23   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BuyrOrdrId,omitempty"`
	CtrctId           DocumentIdentification22   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtrctId,omitempty"`
	PurchsAcctgAcct   []AccountingAccount1       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PurchsAcctgAcct,omitempty"`
	NetPric           []CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NetPric,omitempty"`
	NetPricQty        Quantity4                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NetPricQty,omitempty"`
	NetPricAllwncChrg []LineItemAllowanceCharge1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NetPricAllwncChrg,omitempty"`
	NetWght           Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 NetWght,omitempty"`
	GrssPric          []CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 GrssPric,omitempty"`
	GrssPricQty       Quantity4                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 GrssPricQty,omitempty"`
	GrssWght          Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 GrssWght,omitempty"`
	LogstcsChrg       []ChargesDetails2          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LogstcsChrg,omitempty"`
	Tax               []LineItemTax1             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tax,omitempty"`
	AllwncChrg        []LineItemAllowanceCharge1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AllwncChrg,omitempty"`
	FinAdjstmnt       []Adjustment4              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FinAdjstmnt,omitempty"`
	BlldQty           Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BlldQty,omitempty"`
	PackgQty          float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PackgQty,omitempty"`
	PerPackgUnitQty   Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PerPackgUnitQty,omitempty"`
	Packgng           []Packaging1               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Packgng,omitempty"`
	ChrgFreeQty       Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ChrgFreeQty,omitempty"`
	MeasrQtyStart     Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MeasrQtyStart,omitempty"`
	MeasrQtyEnd       Quantity3                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MeasrQtyEnd,omitempty"`
	MeasrDtTmStart    ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MeasrDtTmStart,omitempty"`
	MeasrDtTmEnd      ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MeasrDtTmEnd,omitempty"`
	ShipTo            TradeParty1                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShipTo,omitempty"`
	Incotrms          Incoterms3                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Incotrms,omitempty"`
	DlvryDtTm         ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DlvryDtTm,omitempty"`
	DlvryNoteId       DocumentIdentification22   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DlvryNoteId,omitempty"`
	MntrySummtn       LineItemMonetarySummation1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MntrySummtn,omitempty"`
	InclNote          []AdditionalInformation1   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InclNote,omitempty"`
}

type LineItemAllowanceCharge1 struct {
	ChrgInd  bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ChrgInd,omitempty"`
	ActlAmt  []CurrencyAndAmount         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ActlAmt,omitempty"`
	BsisQty  Quantity3                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BsisQty,omitempty"`
	ClctnPct float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ClctnPct,omitempty"`
	SeqNb    float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SeqNb,omitempty"`
	Rsn      DiscountOrChargeType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rsn,omitempty"`
}

type LineItemMonetarySummation1 struct {
	LineTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LineTtlAmt,omitempty"`
	AllwncTtlAmt  []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AllwncTtlAmt,omitempty"`
	ChrgTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ChrgTtlAmt,omitempty"`
	TaxTtlAmt     []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxTtlAmt,omitempty"`
	TaxBsisTtlAmt []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxBsisTtlAmt,omitempty"`
	InfAmt        []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InfAmt,omitempty"`
}

type LineItemTax1 struct {
	ClctdAmt  []CurrencyAndAmount  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ClctdAmt,omitempty"`
	TpCd      TaxTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TpCd,omitempty"`
	TaxPtDt   ISODate              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxPtDt,omitempty"`
	ClctdRate float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ClctdRate,omitempty"`
	CtgyCd    Max4Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtgyCd,omitempty"`
	CtgyNm    []Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtgyNm,omitempty"`
}

// May be one of FIXD, ABRD, NMDC, MOTO, HOME
type LocationCategory1Code string

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max10Text string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max256Text string

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max350Text string

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,35}
type Max35NumericText string

// Must be at least 1 items long
type Max35Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must be at least 1 items long
type Max3Text string

// Must be at least 1 items long
type Max45Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max4Text string

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max500Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

type MemoryCharacteristics1 struct {
	Id     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	TtlSz  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TtlSz"`
	FreeSz float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FreeSz"`
	Unit   MemoryUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Unit"`
}

// May be one of BYTE, EXAB, GIGA, KILO, MEGA, PETA, TERA
type MemoryUnit1Code string

// May be one of AUTQ, AUTP, FAUQ, FAUP, CMPV, CMPK, FCMV, FCMK, RVRA, RVRR, FRVA, FRVR, CCAQ, CCAP, CCAV, CCAK, DGNP, DGNQ, RCLQ, RCLP, RJCT, DCCQ, DCCP
type MessageFunction4Code string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

// Must be at least 3 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 6 items long
type Min6Max8Text string

// Must match the pattern [0-9]{8,28}
type Min8Max28NumericText string

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

// May be one of OFLN, ONLN, SMON
type OnLineCapability1Code string

type Organisation8 struct {
	Id        GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	CmonNm    Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CmonNm,omitempty"`
	LctnCtgy  LocationCategory1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LctnCtgy,omitempty"`
	Adr       Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Adr,omitempty"`
	CtryCd    ISO3NumericCountryCode  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtryCd,omitempty"`
	SchmeData Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SchmeData,omitempty"`
}

type OrganisationIdentification6 struct {
	BIC  AnyBICIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BIC,omitempty"`
	Othr []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI
type POICommunicationType1Code string

// May be one of APPL, CERT, EVAL
type POIComponentAssessment1Code string

// May be one of WAIT, OUTD, OPER, DACT
type POIComponentStatus1Code string

// May be one of AQPP, APPR, TLPR, SCPR, SERV, TERM, DVCE, SECM, APLI, EMVK, EMVO, MDWR, DRVR, OPST, MRPR
type POIComponentType3Code string

type Packaging1 struct {
	Tp ExternalPackagingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp,omitempty"`
	Nm Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
}

type Parameter1 struct {
	InitlstnVctr Max500Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InitlstnVctr,omitempty"`
}

type Parameter2 struct {
	DgstAlgo     Algorithm5Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification8 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MskGnrtrAlgo,omitempty"`
}

type Parameter3 struct {
	DgstAlgo Algorithm5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DgstAlgo,omitempty"`
}

type Party8Choice struct {
	OrgId  OrganisationIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OrgId"`
	PrvtId PersonIdentification5       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrvtId"`
}

type PartyIdentification45 struct {
	Id        Party8Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	Nm        Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
	PstlAdr   PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PstlAdr,omitempty"`
	CtryOfRes CountryCode    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtryOfRes,omitempty"`
	CtctDtls  []Contacts3    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtctDtls,omitempty"`
}

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of ACQR, ITAG, PCPT, TMGT, SALE
type PartyType7Code string

type PaymentCard8 struct {
	PrtctdCardData ContentInformationType7 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrtctdCardData,omitempty"`
	PlainCardData  PlainCardData6          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PlainCardData,omitempty"`
	CardCtryCd     Max3Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardCtryCd,omitempty"`
	CardCcyCd      Exact3NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardCcyCd,omitempty"`
	CardPdctPrfl   Exact4NumericText       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardPdctPrfl,omitempty"`
	CardBrnd       Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardBrnd,omitempty"`
	AddtlCardData  Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlCardData,omitempty"`
}

type PaymentContext6 struct {
	CardPres       bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardPres,omitempty"`
	CrdhldrPres    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CrdhldrPres,omitempty"`
	OnLineCntxt    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OnLineCntxt,omitempty"`
	AttndncCntxt   AttendanceContext1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AttndncCntxt,omitempty"`
	TxEnvt         TransactionEnvironment1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxEnvt,omitempty"`
	TxChanl        TransactionChannel1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxChanl,omitempty"`
	CardDataNtryMd CardDataReading1Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardDataNtryMd"`
	FllbckInd      bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FllbckInd,omitempty"`
	SpprtdOptn     []SupportedPaymentOption1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SpprtdOptn,omitempty"`
}

type Period1 struct {
	StartDt DateFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 StartDt"`
	EndDt   DateFormat4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 EndDt"`
}

type PersonIdentification5 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Othr,omitempty"`
}

type PersonIdentification7 struct {
	DrvrsLicNb      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DrvrsLicNb,omitempty"`
	CstmrNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CstmrNb,omitempty"`
	SclSctyNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SclSctyNb,omitempty"`
	AlnRegnNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AlnRegnNb,omitempty"`
	PsptNb          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PsptNb,omitempty"`
	TaxIdNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxIdNb,omitempty"`
	IdntyCardNb     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 IdntyCardNb,omitempty"`
	MplyrIdNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MplyrIdNb,omitempty"`
	MplyeeIdNb      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MplyeeIdNb,omitempty"`
	EmailAdr        Max256Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 EmailAdr,omitempty"`
	DtAndPlcOfBirth DateAndPlaceOfBirth      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PlainCardData6 struct {
	PAN       Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PAN"`
	CardSeqNb Min2Max3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardSeqNb,omitempty"`
	FctvDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FctvDt,omitempty"`
	XpryDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 XpryDt"`
	SvcCd     Exact3NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SvcCd,omitempty"`
	TrckData  []TrackData1         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrckData,omitempty"`
}

type PointOfInteraction3 struct {
	Id       GenericIdentification32         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	SysNm    Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SysNm,omitempty"`
	GrpId    Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 GrpId,omitempty"`
	Cpblties PointOfInteractionCapabilities2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cpblties,omitempty"`
	Cmpnt    []PointOfInteractionComponent4  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cmpnt,omitempty"`
}

type PointOfInteractionCapabilities2 struct {
	CardRdngCpblties      []CardDataReading1Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CardRdngCpblties,omitempty"`
	CrdhldrVrfctnCpblties []CardholderVerificationCapability1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CrdhldrVrfctnCpblties,omitempty"`
	OnLineCpblties        OnLineCapability1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OnLineCpblties,omitempty"`
	DispCpblties          []DisplayCapabilities2                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DispCpblties,omitempty"`
	PrtLineWidth          float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrtLineWidth,omitempty"`
	AvlblLang             []ISO2ALanguageCode                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AvlblLang,omitempty"`
}

type PointOfInteractionComponent4 struct {
	Tp       POIComponentType3Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Id       PointOfInteractionComponentIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id"`
	Sts      PointOfInteractionComponentStatus1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Sts,omitempty"`
	StdCmplc []GenericIdentification48                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 StdCmplc,omitempty"`
	Chrtcs   PointOfInteractionComponentCharacteristics2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Chrtcs,omitempty"`
	Assmnt   []PointOfInteractionComponentAssessment1    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Assmnt,omitempty"`
}

type PointOfInteractionComponentAssessment1 struct {
	Tp      POIComponentAssessment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Assgnr  []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Assgnr"`
	DlvryDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DlvryDt,omitempty"`
	XprtnDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 XprtnDt,omitempty"`
	Nb      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nb"`
}

type PointOfInteractionComponentCharacteristics2 struct {
	Mmry           []MemoryCharacteristics1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Mmry,omitempty"`
	Com            []CommunicationCharacteristics2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Com,omitempty"`
	SctyAccsMdls   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SctyAccsMdls,omitempty"`
	SbcbrIdntyMdls float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SbcbrIdntyMdls,omitempty"`
	KeyChckVal     Max35Binary                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyChckVal,omitempty"`
}

type PointOfInteractionComponentIdentification1 struct {
	ItmNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ItmNb,omitempty"`
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrvdrId,omitempty"`
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	SrlNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SrlNb,omitempty"`
}

type PointOfInteractionComponentStatus1 struct {
	VrsnNb Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 VrsnNb,omitempty"`
	Sts    POIComponentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Sts,omitempty"`
}

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AdrLine,omitempty"`
}

type Product1 struct {
	PdctCd       Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PdctCd"`
	UnitOfMeasr  UnitOfMeasure1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 UnitOfMeasr,omitempty"`
	PdctQty      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PdctQty,omitempty"`
	UnitPric     float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 UnitPric,omitempty"`
	PdctAmt      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PdctAmt"`
	TaxTp        Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxTp,omitempty"`
	AddtlPdctInf Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlPdctInf,omitempty"`
}

type ProductCategory1 struct {
	Tp   ProductCategory1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Ctgy Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Ctgy"`
}

type ProductCategory1Choice struct {
	StrdPdctCtgy ProductCategory1       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 StrdPdctCtgy"`
	OthrPdctCtgy GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrPdctCtgy"`
}

// May be one of HRTR, QOTA, PRGP, LOBU, GNDR
type ProductCategory1Code string

type ProductCharacteristics1 struct {
	Tp     ProductCharacteristics1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Chrtcs Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Chrtcs"`
}

type ProductCharacteristics1Choice struct {
	StrdPdctChrtcs ProductCharacteristics1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 StrdPdctChrtcs"`
	OthrPdctChrtcs GenericIdentification4  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrPdctChrtcs"`
}

// May be one of BISP, CHNR, CLOR, EDSP, ENNR, OPTN, ORCR, PCTV, SISP, SIZE, SZRG, SPRM, STOR, VINR
type ProductCharacteristics1Code string

type ProductCharacteristics2 struct {
	Chrtc    ProductCharacteristics1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Chrtc,omitempty"`
	ValMeasr Quantity3                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ValMeasr,omitempty"`
}

type ProductIdentifier2 struct {
	Tp  ProductIdentifier2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Tp"`
	Idr Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Idr"`
}

type ProductIdentifier2Choice struct {
	StrdPdctIdr ProductIdentifier2     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 StrdPdctIdr"`
	OthrPdctIdr GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrPdctIdr"`
}

// May be one of BINR, COMD, EANC, HRTR, MANI, MODL, PART, QOTA, STYL, SUPI, UPCC
type ProductIdentifier2Code string

type Quantity3 struct {
	UnitOfMeasrCd   UnitOfMeasure4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 UnitOfMeasrCd"`
	OthrUnitOfMeasr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrUnitOfMeasr"`
	Val             float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Val"`
}

type Quantity4 struct {
	UnitOfMeasrCd   UnitOfMeasure4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 UnitOfMeasrCd"`
	OthrUnitOfMeasr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 OthrUnitOfMeasr"`
	Val             float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Val"`
	Fctr            Max15NumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Fctr,omitempty"`
}

type Recipient3Choice struct {
	KeyTrnsprt KeyTransport3  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyTrnsprt"`
	KEK        KEK3           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KEK"`
	KeyIdr     KEKIdentifier1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 KeyIdr"`
}

type RecurringTransaction2 struct {
	InstlmtPlan []InstalmentPlan1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InstlmtPlan,omitempty"`
	PlanId      Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PlanId,omitempty"`
	SeqNb       float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SeqNb,omitempty"`
	PrdUnit     Frequency3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PrdUnit,omitempty"`
	InstlmtPrd  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 InstlmtPrd,omitempty"`
	TtlNbOfPmts float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TtlNbOfPmts,omitempty"`
	FrstPmtDt   ISODate               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FrstPmtDt,omitempty"`
	TtlAmt      CurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TtlAmt,omitempty"`
	FrstAmt     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 FrstAmt,omitempty"`
	Chrgs       float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Chrgs,omitempty"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AttrVal"`
}

// May be one of DECL, APPR, PART, TECH
type Response1Code string

type ResponseType1 struct {
	Rspn    Response1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Rspn"`
	RspnRsn Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RspnRsn,omitempty"`
}

type SaleContext1 struct {
	SaleId        Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SaleId,omitempty"`
	SaleRefNb     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SaleRefNb,omitempty"`
	SaleRcncltnId Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 SaleRcncltnId,omitempty"`
	CshrId        Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CshrId,omitempty"`
	ShftNb        Max2NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShftNb,omitempty"`
	AddtlSaleData Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlSaleData,omitempty"`
}

// May be one of PART, MSRV
type SupportedPaymentOption1Code string

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP
type TaxExemptReason1Code string

type TaxExemptionReasonFormatChoice struct {
	Ustrd Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Ustrd"`
	Strd  TaxExemptReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Strd"`
}

type TaxParty3 struct {
	TaxId       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxId,omitempty"`
	TaxTp       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxTp,omitempty"`
	RegnId      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RegnId,omitempty"`
	TaxXmptnRsn []TaxExemptionReasonFormatChoice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxXmptnRsn,omitempty"`
}

// May be one of PROV, NATI, STAT, WITH, STAM, COAX, VATA, CUST, VATB
type TaxType15Code string

type TaxTypeFormat1Choice struct {
	Cd    TaxType15Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Prtry"`
}

type Traceability1 struct {
	RlayId      GenericIdentification31 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 RlayId"`
	TracDtTmIn  ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TracDtTmIn"`
	TracDtTmOut ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TracDtTmOut"`
}

type TrackData1 struct {
	TrckNb  Exact1NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrckNb,omitempty"`
	TrckVal Max140Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TrckVal"`
}

type TradeAgreement6 struct {
	Buyr          TradeParty1                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Buyr"`
	Sellr         TradeParty1                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Sellr"`
	QtnDocId      DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 QtnDocId,omitempty"`
	CtrctDocId    DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtrctDocId,omitempty"`
	BuyrOrdrIdDoc DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 BuyrOrdrIdDoc,omitempty"`
	AddtlRefDoc   []DocumentGeneralInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 AddtlRefDoc,omitempty"`
	Incotrms      Incoterms3                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Incotrms,omitempty"`
}

type TradeDelivery1 struct {
	DlvryPrd    Period1                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DlvryPrd,omitempty"`
	DlvryDtTm   ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DlvryDtTm,omitempty"`
	ShipFr      TradeParty1              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShipFr,omitempty"`
	ShipTo      TradeParty1              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ShipTo,omitempty"`
	UltmtShipTo TradeParty1              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 UltmtShipTo,omitempty"`
	DlvryNote   DocumentIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DlvryNote,omitempty"`
	Consgnmt    []Consignment2           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Consgnmt,omitempty"`
}

type TradeParty1 struct {
	PtyId  PartyIdentification45 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PtyId"`
	LglOrg LegalOrganisation1    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 LglOrg,omitempty"`
	TaxPty []TaxParty3           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TaxPty,omitempty"`
}

type TradeProduct1 struct {
	Id         []ProductIdentifier2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	Nm         Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
	Desc       Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Desc,omitempty"`
	CtryOfOrgn []CountryCodeAndName1      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CtryOfOrgn,omitempty"`
	PdctChrtcs []ProductCharacteristics2  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PdctChrtcs,omitempty"`
	PdctCtgy   []ProductCategory1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 PdctCtgy,omitempty"`
	GblSrlIdr  []Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 GblSrlIdr,omitempty"`
}

// May be one of MAIL, TLPH, ECOM, TVPY
type TransactionChannel1Code string

// May be one of MERC, PRIV, PUBL
type TransactionEnvironment1Code string

type TransactionIdentifier1 struct {
	TxDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxDtTm"`
	TxRef  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 TxRef"`
}

type TransactionVerificationResult2 struct {
	ElctrncComrcAuthntcnRslt Max500Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 ElctrncComrcAuthntcnRslt,omitempty"`
	CSCRslt                  CSCResult1Code                             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CSCRslt,omitempty"`
	CrdhldrAdrVrfctnRslt     []CardholderAddressVerificationResult1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 CrdhldrAdrVrfctnRslt,omitempty"`
	DclndPdctCd              []Max70Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 DclndPdctCd,omitempty"`
}

type TransportMeans3 struct {
	MdCd Max4Text  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 MdCd,omitempty"`
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Id,omitempty"`
	Nm   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.003.001.03 Nm,omitempty"`
}

// May be one of ACTL, ESTM, MAXI, DFLT, RPLT
type TypeOfAmount1Code string

// May be one of PIEC, TONS, FOOT, GBGA, USGA, GRAM, INCH, KILO, PUND, METR, CMET, MMET, LITR, CELI, MILI, GBOU, USOU, GBQA, USQA, GBPI, USPI, MILE, KMET, YARD, SQKI, HECT, ARES, SMET, SCMT, SMIL, SQMI, SQYA, SQFO, SQIN, ACRE
type UnitOfMeasure1Code string

// May be one of KGM, EA, LTN, MTR, INH, LY, GLI, GRM, CMT, MTK, FOT, 1A, INK, FTK, MIK, ONZ, PTI, PT, QTI, QT, GLL, MMT, KTM, YDK, MMK, CMK, KMK, MMQ, CLT, LTR, LBR, STN, BLL, BX, BO, CT, CH, CR, INQ, MTQ, OZI, OZA, BG, BL, TNE
type UnitOfMeasure4Code string

// May be one of MDSP, CDSP
type UserInterface2Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
