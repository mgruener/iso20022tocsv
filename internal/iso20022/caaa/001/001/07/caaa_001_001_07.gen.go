// Code generated by main. DO NOT EDIT.

package caaa_001_001_07

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorAuthorisationRequest7 struct {
	Envt        CardPaymentEnvironment68 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Envt"`
	Cntxt       CardPaymentContext26     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cntxt"`
	Tx          CardPaymentTransaction80 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tx"`
	SplmtryData []SupplementaryData1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SplmtryData,omitempty"`
}

type AcceptorAuthorisationRequestV07 struct {
	Hdr        Header35                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Hdr"`
	AuthstnReq AcceptorAuthorisationRequest7 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthstnReq"`
	SctyTrlr   ContentInformationType16      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SctyTrlr,omitempty"`
}

// May be one of ACSL, ENTR, IMAC, IMPL, NOSL, TPSL
type AccountChoiceMethod1Code string

type AccountIdentification39Choice struct {
	Card   Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Card"`
	MSISDN Max16Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MSISDN"`
	EMail  Max256Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 EMail"`
	IBAN   IBANIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IBAN"`
	BBAN   BBANIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BBAN"`
	UPIC   UPICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UPIC"`
	Dmst   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dmst"`
	Othr   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Othr"`
}

type AccountingAccount1 struct {
	Id           Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	CostRefPttrn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CostRefPttrn,omitempty"`
}

type Acquirer4 struct {
	Id         GenericIdentification53 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	ParamsVrsn Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ParamsVrsn"`
}

type ActionMessage5 struct {
	Frmt    OutputFormat1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Frmt,omitempty"`
	MsgCntt Max20000Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MsgCntt"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

type AdditionalInformation1 struct {
	InfTp  InformationType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InfTp"`
	InfVal Max350Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InfVal"`
}

type AdditionalInformation6 struct {
	InfTp  ExternalInformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InfTp"`
	InfVal Max350Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InfVal"`
}

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AddressVerification1 struct {
	AdrDgts    Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrDgts,omitempty"`
	PstlCdDgts Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstlCdDgts,omitempty"`
}

type Adjustment6 struct {
	Tp    AdjustmentType1Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Drctn AdjustmentDirection1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Drctn"`
	Amt   CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Amt"`
}

// May be one of ADDD, SUBS
type AdjustmentDirection1Code string

type AdjustmentType1Choice struct {
	Tp             AdjustmentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	OthrAdjstmntTp Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OthrAdjstmntTp"`
}

// May be one of REBA, DISC, CREN, SURC
type AdjustmentType2Code string

type AggregationTransaction2 struct {
	FrstPmtDtTm ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FrstPmtDtTm,omitempty"`
	LastPmtDtTm ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LastPmtDtTm,omitempty"`
	NbOfPmts    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NbOfPmts,omitempty"`
	IndvPmt     []DetailedAmount14 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IndvPmt,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C
type Algorithm18Code string

// May be one of ERS2, ERS1, RPSS, ECC5, ECC1, ECC4, ECC2, ECC3, ERS3, ECP2, ECP3, ECP5
type Algorithm19Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

type AlgorithmIdentification20 struct {
	Algo  Algorithm19Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter11     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

type AlgorithmIdentification23 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

type AlgorithmIdentification24 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Param,omitempty"`
}

// Must match the pattern [A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}
type AnyBICIdentifier string

// May be one of ATTD, SATT, UATT
type AttendanceContext1Code string

// May be one of ATTL, CARR, CUST, FULL, SELF
type AttendanceContext2Code string

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	Rcpt        []Recipient6Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MAC"`
}

// May be one of ICCD, AGNT, MERC, ACQR, ISSR, TRML
type AuthenticationEntity2Code string

// May be one of NPIN, PPSG, PSWD, SCRT, SCNL, SNCT, CPSG, ADDB, BIOM, CDHI, CRYP, CSCV, PSVE, CSEC, ADDS, TOKP
type AuthenticationMethod5Code string

// May be one of NPIN, PPSG, PSWD, SCRT, SCNL, SNCT, CPSG, ADDB, BIOM, CDHI, CRYP, CSCV, PSVE, CSEC, ADDS, MANU, FPIN, TOKP
type AuthenticationMethod6Code string

// May be one of DENY, MRCH, CARD, AUTH, CRPT, UCRP
type AuthenticationResult1Code string

// Must match the pattern [a-zA-Z0-9]{1,30}
type BBANIdentifier string

type BinaryFile1 struct {
	MIMETp         Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MIMETp,omitempty"`
	NcodgTp        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcodgTp,omitempty"`
	CharSet        Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CharSet,omitempty"`
	InclBinryObjct Max100KBinary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InclBinryObjct,omitempty"`
}

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

type CardAccount14 struct {
	SelctnMtd    AccountChoiceMethod1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SelctnMtd,omitempty"`
	SelctdAcctTp CardAccountType3Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SelctdAcctTp,omitempty"`
	AcctNm       Max70Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctNm,omitempty"`
	AcctOwnr     NameAndAddress3               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctOwnr,omitempty"`
	Ccy          ActiveCurrencyCode            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ccy,omitempty"`
	AcctIdr      AccountIdentification39Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctIdr,omitempty"`
	Svcr         PartyIdentification72Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Svcr,omitempty"`
}

// May be one of CTDP, CHCK, CRDT, CURR, CDBT, DFLT, EPRS, HEQL, ISTL, INVS, LCDT, MBNW, MNMK, MNMC, MTGL, RTRM, RVLV, SVNG, STBD, UVRL, PRPD, FLTC
type CardAccountType3Code string

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL, CDFL
type CardDataReading5Code string

type CardDirectDebit1 struct {
	DbtrId      Debtor3                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DbtrId,omitempty"`
	CdtrId      Creditor3                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CdtrId"`
	MndtRltdInf MandateRelatedInformation13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MndtRltdInf"`
}

// May be one of FFLB, SFLB, NFLB
type CardFallback1Code string

type CardPaymentContext26 struct {
	PmtCntxt     PaymentContext24 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PmtCntxt,omitempty"`
	SaleCntxt    SaleContext2     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleCntxt,omitempty"`
	DrctDbtCntxt CardDirectDebit1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DrctDbtCntxt,omitempty"`
}

type CardPaymentEnvironment68 struct {
	Acqrr             Acquirer4                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Acqrr,omitempty"`
	Mrchnt            Organisation32           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Mrchnt,omitempty"`
	POI               PointOfInteraction8      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 POI,omitempty"`
	Card              PaymentCard28            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Card,omitempty"`
	CstmrDvc          CustomerDevice1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CstmrDvc,omitempty"`
	Wllt              CustomerDevice1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Wllt,omitempty"`
	PmtTkn            CardPaymentToken4        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PmtTkn,omitempty"`
	Crdhldr           Cardholder13             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Crdhldr,omitempty"`
	PrtctdCrdhldrData ContentInformationType17 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtctdCrdhldrData,omitempty"`
}

type CardPaymentInvoice3 struct {
	InvcHdr   InvoiceHeader3   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InvcHdr"`
	TradAgrmt TradeAgreement16 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TradAgrmt"`
	TradDlvry TradeDelivery3   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TradDlvry"`
	LineItm   []LineItem17     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LineItm,omitempty"`
}

// May be one of BALC, CACT, CRDP, CAFH, CAVR, CSHW, CSHD, DEFR, LOAD, ORCR, PINC, QUCH, RFND, RESA, VALC, UNLD, CAFT, CAFL, CIDD
type CardPaymentServiceType12Code string

// May be one of IRES, URES, PRES, ARES, FREC, RREC
type CardPaymentServiceType3Code string

// May be one of AGGR, DCCV, GRTT, LOYT, NRES, PUCO, RECP, SOAF, VCAU, INSI, INSA, CSHB, INST, NRFD
type CardPaymentServiceType9Code string

type CardPaymentToken4 struct {
	Tkn           Min8Max28NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tkn,omitempty"`
	CardSeqNb     Min2Max3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardSeqNb,omitempty"`
	TknXpryDt     Max10Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TknXpryDt,omitempty"`
	TknChrtc      []Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TknChrtc,omitempty"`
	TknRqstr      PaymentTokenIdentifiers1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TknRqstr,omitempty"`
	TknAssrncLvl  float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TknAssrncLvl,omitempty"`
	TknAssrncData Max500Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TknAssrncData,omitempty"`
}

type CardPaymentTransaction79 struct {
	SaleRefId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleRefId,omitempty"`
	TxId           TransactionIdentifier1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxId"`
	POIId          GenericIdentification32       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 POIId,omitempty"`
	InitrTxId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InitrTxId,omitempty"`
	RcptTxId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RcptTxId,omitempty"`
	TxTp           CardPaymentServiceType12Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxTp"`
	AddtlSvc       []CardPaymentServiceType9Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlSvc,omitempty"`
	SvcAttr        CardPaymentServiceType3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SvcAttr,omitempty"`
	CardDataNtryMd CardDataReading5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardDataNtryMd,omitempty"`
	TxRslt         CardPaymentTransactionResult3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxRslt,omitempty"`
}

type CardPaymentTransaction80 struct {
	TxCaptr          bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxCaptr"`
	TxTp             CardPaymentServiceType12Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxTp,omitempty"`
	AddtlSvc         []CardPaymentServiceType9Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlSvc,omitempty"`
	SvcAttr          CardPaymentServiceType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SvcAttr,omitempty"`
	MrchntCtgyCd     Min3Max4Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MrchntCtgyCd,omitempty"`
	CstmrCnsnt       []bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CstmrCnsnt,omitempty"`
	CardPrgrmmPropsd []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPrgrmmPropsd,omitempty"`
	CardPrgrmmApld   []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPrgrmmApld,omitempty"`
	SaleRefId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleRefId,omitempty"`
	TxId             TransactionIdentifier1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxId"`
	OrgnlTx          CardPaymentTransaction79        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OrgnlTx,omitempty"`
	InitrTxId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InitrTxId,omitempty"`
	RcncltnId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RcncltnId,omitempty"`
	TxDtls           CardPaymentTransactionDetails45 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxDtls"`
	MrchntRefData    Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MrchntRefData,omitempty"`
	AcctFr           CardAccount14                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctFr,omitempty"`
	AcctTo           CardAccount14                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctTo,omitempty"`
	AddtlTxData      []Max70Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlTxData,omitempty"`
}

type CardPaymentTransactionDetails45 struct {
	Ccy            ActiveCurrencyCode      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ccy,omitempty"`
	TtlAmt         float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TtlAmt"`
	AmtQlfr        TypeOfAmount8Code       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AmtQlfr,omitempty"`
	DtldAmt        DetailedAmount15        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtldAmt,omitempty"`
	VldtyDt        ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VldtyDt,omitempty"`
	OnLineRsn      []OnLineReason1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OnLineRsn,omitempty"`
	UattnddLvlCtgy Max35NumericText        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UattnddLvlCtgy,omitempty"`
	AcctTp         CardAccountType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctTp,omitempty"`
	CcyConvsRslt   CurrencyConversion15    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CcyConvsRslt,omitempty"`
	Instlmt        RecurringTransaction2   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Instlmt,omitempty"`
	AggtnTx        AggregationTransaction2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AggtnTx,omitempty"`
	PdctCdSetId    Max10Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctCdSetId,omitempty"`
	SaleItm        []Product3              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleItm,omitempty"`
	DlvryLctn      Max10Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryLctn,omitempty"`
	CardPmtInvc    CardPaymentInvoice3     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPmtInvc,omitempty"`
	ICCRltdData    Max10000Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ICCRltdData,omitempty"`
}

type CardPaymentTransactionResult3 struct {
	AuthstnNtty   GenericIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthstnCd,omitempty"`
}

// May be one of COMM, CONS
type CardProductType1Code string

type Cardholder13 struct {
	Id           PersonIdentification15           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Nm           Max45Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
	Lang         string                           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Lang,omitempty"`
	BllgAdr      PostalAddress22                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BllgAdr,omitempty"`
	ShppgAdr     PostalAddress22                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShppgAdr,omitempty"`
	TripNb       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TripNb,omitempty"`
	Vhcl         Vehicle1                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vhcl,omitempty"`
	Authntcn     []CardholderAuthentication11     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Authntcn,omitempty"`
	TxVrfctnRslt []TransactionVerificationResult4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxVrfctnRslt,omitempty"`
	PrsnlData    Max70Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrsnlData,omitempty"`
}

type CardholderAuthentication11 struct {
	AuthntcnMtd       AuthenticationMethod5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcnMtd"`
	AuthntcnVal       Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcnVal,omitempty"`
	PrtctdAuthntcnVal ContentInformationType17  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtctdAuthntcnVal,omitempty"`
	CrdhldrOnLinePIN  OnLinePIN6                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CrdhldrOnLinePIN,omitempty"`
	CrdhldrId         PersonIdentification15    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CrdhldrId,omitempty"`
	AdrVrfctn         AddressVerification1      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrVrfctn,omitempty"`
	AuthntcnTp        Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcnTp,omitempty"`
	AuthntcnLvl       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcnLvl,omitempty"`
	AuthntcnRslt      AuthenticationResult1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcnRslt,omitempty"`
	AuthntcnAddtlInf  Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcnAddtlInf,omitempty"`
}

// May be one of APKI, CHDT, MNSG, MNVR, FBIG, FBIO, FDSG, FCPN, FEPN, NPIN, PKIS, SCEC, NBIO, NOVF, OTHR
type CardholderVerificationCapability4Code string

type CashAccountIdentification7Choice struct {
	IBAN     IBAN2007Identifier               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IBAN"`
	BBAN     BBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BBAN"`
	UPIC     UPICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UPIC"`
	DmstAcct SimpleIdentificationInformation4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DmstAcct"`
}

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RltvDstngshdNm"`
}

// May be one of POST, REGF, SHIP, CHAR, OTHR, PREM, PACK, PICK, SECU, INSU, MISC
type ChargeType17Code string

// May be one of SIGN, STDE, STOR, PACK, PICK, DNGR, SECU, INSU, COLF, CHOR, CHDE, AIRF, TRPT
type ChargeType8Code string

type ChargeTypeFormat3Choice struct {
	Cd    ChargeType17Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

type ChargesDetails4 struct {
	ChrgsTp ChargesType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ChrgsTp"`
	Amt     CurrencyAndAmount  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Amt"`
}

type ChargesType1Choice struct {
	Tp          ChargeType8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	OthrChrgsTp Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OthrChrgsTp"`
}

type Commission18 struct {
	Rate     float64    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rate"`
	AddtlInf Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlInf,omitempty"`
}

type Commission19 struct {
	Amt      float64    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Amt"`
	AddtlInf Max350Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlInf,omitempty"`
}

type CommunicationAddress9 struct {
	PstlAdr      PostalAddress22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstlAdr,omitempty"`
	Email        Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Email,omitempty"`
	URLAdr       Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 URLAdr,omitempty"`
	Phne         PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Phne,omitempty"`
	CstmrSvc     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlCtctInf,omitempty"`
}

type CommunicationCharacteristics3 struct {
	ComTp   POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ComTp"`
	RmotPty []PartyType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RmotPty"`
	Actv    bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Actv"`
}

type Consignment5 struct {
	Consgnr      TradeParty4       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Consgnr,omitempty"`
	Consgn       TradeParty4       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Consgn,omitempty"`
	TrnsprtMeans []TransportMeans3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TrnsprtMeans,omitempty"`
}

type Contacts3 struct {
	NmPrfx    NamePrefix1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NmPrfx,omitempty"`
	Nm        Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
	PhneNb    PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PhneNb,omitempty"`
	MobNb     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MobNb,omitempty"`
	FaxNb     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FaxNb,omitempty"`
	EmailAdr  Max2048Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 EmailAdr,omitempty"`
	Othr      Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Othr,omitempty"`
	JobTitl   Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 JobTitl,omitempty"`
	Rspnsblty Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rspnsblty,omitempty"`
	Dept      Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dept,omitempty"`
}

type ContentInformationType16 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CnttTp"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcdData"`
}

type ContentInformationType17 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CnttTp"`
	EnvlpdData EnvelopedData5   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 EnvlpdData"`
}

type ContentInformationType19 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CnttTp"`
	EnvlpdData   EnvelopedData5     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type CountryCodeAndName1 struct {
	Cd CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd,omitempty"`
	Nm Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
}

type Creditor3 struct {
	Cdtr   PartyIdentification100Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cdtr"`
	RegnId Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RegnId,omitempty"`
}

type CryptographicKey13 struct {
	Id           Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	AddtlId      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlId,omitempty"`
	Vrsn         Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn"`
	Tp           CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	Fctn         []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Fctn,omitempty"`
	ActvtnDt     ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ActvtnDt,omitempty"`
	DeactvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DeactvtnDt,omitempty"`
	KeyVal       ContentInformationType19  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyVal,omitempty"`
	KeyChckVal   Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyChckVal,omitempty"`
	AddtlMgmtInf []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlMgmtInf,omitempty"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

type CurrencyAndAmount struct {
	Value float64      `xml:",chardata"`
	Ccy   CurrencyCode `xml:"Ccy,attr"`
}

// Must match the pattern [A-Z]{3,3}
type CurrencyCode string

type CurrencyConversion14 struct {
	CcyConvsId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CcyConvsId,omitempty"`
	TrgtCcy       CurrencyDetails3       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TrgtCcy"`
	RsltgAmt      float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RsltgAmt"`
	XchgRate      float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 XchgRate"`
	NvrtdXchgRate float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NvrtdXchgRate,omitempty"`
	QtnDt         ISODateTime            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 QtnDt,omitempty"`
	VldUntil      ISODateTime            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VldUntil,omitempty"`
	SrcCcy        CurrencyDetails2       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SrcCcy"`
	OrgnlAmt      OriginalAmountDetails1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OrgnlAmt"`
	ComssnDtls    []Commission19         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ComssnDtls,omitempty"`
	MrkUpDtls     []Commission18         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MrkUpDtls,omitempty"`
	DclrtnDtls    ActionMessage5         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DclrtnDtls,omitempty"`
}

type CurrencyConversion15 struct {
	AccptdByCrdhldr bool                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AccptdByCrdhldr,omitempty"`
	Convs           CurrencyConversion14 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Convs,omitempty"`
}

type CurrencyDetails2 struct {
	AlphaCd ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AlphaCd,omitempty"`
	NmrcCd  Exact3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NmrcCd,omitempty"`
	Dcml    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dcml,omitempty"`
	Nm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
}

type CurrencyDetails3 struct {
	AlphaCd ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AlphaCd"`
	NmrcCd  Exact3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NmrcCd"`
	Dcml    float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dcml"`
	Nm      Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
}

type CustomerDevice1 struct {
	Id    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Tp    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	Prvdr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prvdr,omitempty"`
}

type DateAndDateTime1Choice struct {
	Dt   ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dt"`
	DtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtTm"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtryOfBirth"`
}

type DateFormat56Choice struct {
	Dt         DateAndDateTime1Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dt"`
	NotSpcfdDt DateType6Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NotSpcfdDt"`
	Prtry      GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

// May be one of OPEN, UKWN, ONGO
type DateType6Code string

type Debtor3 struct {
	Dbtr   PartyIdentification100Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dbtr,omitempty"`
	AcctId CashAccountIdentification7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AcctId,omitempty"`
}

type DetailedAmount14 struct {
	Amt            float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Amt"`
	DtTm           ISODateTime          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtTm"`
	CardDataNtryMd CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardDataNtryMd,omitempty"`
	ICCRltdData    Max10000Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ICCRltdData,omitempty"`
	Labl           Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Labl,omitempty"`
}

type DetailedAmount15 struct {
	AmtGoodsAndSvcs float64           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AmtGoodsAndSvcs,omitempty"`
	CshBck          float64           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CshBck,omitempty"`
	Grtty           float64           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Grtty,omitempty"`
	Fees            []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Fees,omitempty"`
	Rbt             []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rbt,omitempty"`
	ValAddedTax     []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ValAddedTax,omitempty"`
	Srchrg          []DetailedAmount4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Srchrg,omitempty"`
}

type DetailedAmount4 struct {
	Amt  float64    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Amt"`
	Labl Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Labl,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dgst"`
}

type DiscountOrChargeType1Choice struct {
	ChrgTp  ChargeTypeFormat3Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ChrgTp"`
	DscntTp DiscountTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DscntTp"`
}

// May be one of QUAN, PROM, PRIC, SPAG, ENOR
type DiscountType1Code string

type DiscountTypeFormat1Choice struct {
	Cd    DiscountType1Code       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

type DisplayCapabilities4 struct {
	Dstn      []UserInterface4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dstn"`
	AvlblFrmt []OutputFormat1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AvlblFrmt,omitempty"`
	NbOfLines float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NbOfLines,omitempty"`
	LineWidth float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LineWidth,omitempty"`
	AvlblLang []string             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AvlblLang,omitempty"`
}

type Document struct {
	AccptrAuthstnReq AcceptorAuthorisationRequestV07 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AccptrAuthstnReq"`
}

type DocumentGeneralInformation2 struct {
	DocTp           ExternalDocumentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DocTp"`
	DocNb           Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DocNb"`
	SndrRcvrSeqId   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SndrRcvrSeqId,omitempty"`
	IsseDt          ISODate                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IsseDt,omitempty"`
	URL             Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 URL,omitempty"`
	AttchdBinryFile []BinaryFile1             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AttchdBinryFile,omitempty"`
}

type DocumentIdentification22 struct {
	Id       Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	DtOfIsse ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtOfIsse,omitempty"`
}

type DocumentIdentification23 struct {
	Id         Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	DtOfIsse   ISODate   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtOfIsse,omitempty"`
	OrdrLineId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OrdrLineId,omitempty"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cntt,omitempty"`
}

type EncryptedContent4 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification24 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptdData"`
}

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

type EnvelopedData5 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OrgtrInf,omitempty"`
	Rcpt       []Recipient6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rcpt"`
	NcrptdCntt EncryptedContent4      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptdCntt,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{3}
type Exact3AlphaNumericText string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// Must be at least 1 items long
type ExternalDocumentPurpose1Code string

// Must be at least 1 items long
type ExternalDocumentType1Code string

// Must be at least 1 items long
type ExternalIncoterms1Code string

// Must be at least 1 items long
type ExternalInformationType1Code string

// Must be at least 1 items long
type ExternalOrganisationIdentification1Code string

// Must be at least 1 items long
type ExternalPackagingType1Code string

// Must be at least 1 items long
type ExternalPersonIdentification1Code string

// May be one of YEAR, MNTH, QURT, MIAN, WEEK, DAIL, TEND
type Frequency3Code string

type GenericIdentification1 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SchmeNm,omitempty"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
}

type GenericIdentification13 struct {
	Id      Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	SchmeNm Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SchmeNm,omitempty"`
	Issr    Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr"`
}

type GenericIdentification32 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShrtNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SchmeNm,omitempty"`
}

type GenericIdentification4 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	IdTp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IdTp"`
}

type GenericIdentification48 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Vrsn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr"`
}

type GenericIdentification53 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShrtNm,omitempty"`
}

type GenericIdentification76 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShrtNm,omitempty"`
}

type GenericIdentification90 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Tp     PartyType14Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShrtNm,omitempty"`
}

type GenericIdentification94 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Tp       PartyType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	Issr     PartyType4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShrtNm,omitempty"`
	RmotAccs NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RmotAccs,omitempty"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Val,omitempty"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	SchmeNm OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SchmeNm,omitempty"`
	Issr    Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	SchmeNm PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SchmeNm,omitempty"`
	Issr    Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
}

type Header35 struct {
	MsgFctn    MessageFunction14Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MsgFctn"`
	PrtcolVrsn Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtcolVrsn"`
	XchgId     float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 XchgId"`
	CreDtTm    ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CreDtTm"`
	InitgPty   GenericIdentification53 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InitgPty"`
	RcptPty    GenericIdentification94 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RcptPty,omitempty"`
	Tracblt    []Traceability5         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tracblt,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [a-zA-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBANIdentifier string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type Incoterms3 struct {
	IncotrmsCd Incoterms4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IncotrmsCd"`
	Lctn       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Lctn,omitempty"`
}

type Incoterms4Choice struct {
	Cd    ExternalIncoterms1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

type InformationType1Choice struct {
	Cd    InformationType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

// May be one of INST, RELY
type InformationType1Code string

// May be one of EQPM, NQPM, DFRI
type InstalmentPlan1Code string

type InvoiceHeader3 struct {
	Id       Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	TpCd     ExternalDocumentType1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TpCd"`
	Nm       []Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
	IsseDtTm ISODateTime                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IsseDtTm"`
	Issr     TradeParty4                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr,omitempty"`
	LangCd   string                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LangCd,omitempty"`
	CpyInd   bool                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CpyInd,omitempty"`
	DocPurp  ExternalDocumentPurpose1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DocPurp,omitempty"`
	InclNote []AdditionalInformation6     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InclNote,omitempty"`
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SrlNb"`
}

type KEK5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification23 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DerivtnId,omitempty"`
}

type KeyTransport5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

type LegalOrganisation1 struct {
	Id Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Nm Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
}

type LineItem17 struct {
	Id                Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	TradPdct          TradeProduct3              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TradPdct,omitempty"`
	BuyrOrdrId        DocumentIdentification23   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BuyrOrdrId,omitempty"`
	CtrctId           DocumentIdentification22   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtrctId,omitempty"`
	PurchsAcctgAcct   []AccountingAccount1       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PurchsAcctgAcct,omitempty"`
	NetPric           []CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NetPric,omitempty"`
	NetPricQty        Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NetPricQty,omitempty"`
	NetPricAllwncChrg []LineItemAllowanceCharge3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NetPricAllwncChrg,omitempty"`
	NetWght           Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NetWght,omitempty"`
	GrssPric          []CurrencyAndAmount        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 GrssPric,omitempty"`
	GrssPricQty       Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 GrssPricQty,omitempty"`
	GrssWght          Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 GrssWght,omitempty"`
	LogstcsChrg       []ChargesDetails4          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LogstcsChrg,omitempty"`
	Tax               []LineItemTax1             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tax,omitempty"`
	AllwncChrg        []LineItemAllowanceCharge3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AllwncChrg,omitempty"`
	FinAdjstmnt       []Adjustment6              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FinAdjstmnt,omitempty"`
	BlldQty           Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BlldQty,omitempty"`
	PackgQty          float64                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PackgQty,omitempty"`
	PerPackgUnitQty   Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PerPackgUnitQty,omitempty"`
	Packgng           []Packaging1               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Packgng,omitempty"`
	ChrgFreeQty       Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ChrgFreeQty,omitempty"`
	MeasrQtyStart     Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MeasrQtyStart,omitempty"`
	MeasrQtyEnd       Quantity16                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MeasrQtyEnd,omitempty"`
	MeasrDtTmStart    ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MeasrDtTmStart,omitempty"`
	MeasrDtTmEnd      ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MeasrDtTmEnd,omitempty"`
	ShipTo            TradeParty4                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShipTo,omitempty"`
	Incotrms          Incoterms3                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Incotrms,omitempty"`
	DlvryDtTm         ISODateTime                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryDtTm,omitempty"`
	DlvryNoteId       DocumentIdentification22   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryNoteId,omitempty"`
	MntrySummtn       LineItemMonetarySummation1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MntrySummtn,omitempty"`
	InclNote          []AdditionalInformation1   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InclNote,omitempty"`
}

type LineItemAllowanceCharge3 struct {
	ChrgInd  bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ChrgInd,omitempty"`
	ActlAmt  []CurrencyAndAmount         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ActlAmt,omitempty"`
	BsisQty  Quantity16                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BsisQty,omitempty"`
	ClctnPct float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ClctnPct,omitempty"`
	SeqNb    float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SeqNb,omitempty"`
	Rsn      DiscountOrChargeType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rsn,omitempty"`
}

type LineItemMonetarySummation1 struct {
	LineTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LineTtlAmt,omitempty"`
	AllwncTtlAmt  []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AllwncTtlAmt,omitempty"`
	ChrgTtlAmt    []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ChrgTtlAmt,omitempty"`
	TaxTtlAmt     []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxTtlAmt,omitempty"`
	TaxBsisTtlAmt []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxBsisTtlAmt,omitempty"`
	InfAmt        []CurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InfAmt,omitempty"`
}

type LineItemTax1 struct {
	ClctdAmt  []CurrencyAndAmount  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ClctdAmt,omitempty"`
	TpCd      TaxTypeFormat1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TpCd,omitempty"`
	TaxPtDt   ISODate              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxPtDt,omitempty"`
	ClctdRate float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ClctdRate,omitempty"`
	CtgyCd    Max4Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtgyCd,omitempty"`
	CtgyNm    []Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtgyNm,omitempty"`
}

// May be one of FIXD, ABRD, NMDC, MOTO, HOME
type LocationCategory1Code string

// May be one of INDR, IPMP, MPOI, MPMP, MSLE, SSLE, VNDG
type LocationCategory3Code string

type MandateRelatedInformation13 struct {
	MndtId    Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MndtId"`
	DtOfSgntr ISODate      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtOfSgntr,omitempty"`
	MndtImg   Max2MBBinary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MndtImg,omitempty"`
}

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max104Text string

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max10Text string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max20000Text string

// Must be at least 1 items long
type Max2048Text string

// Must be at least 1 items long
type Max256Text string

type Max2MBBinary []byte

func (t *Max2MBBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max2MBBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max350Text string

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,35}
type Max35NumericText string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max37Text string

// Must be at least 1 items long
type Max3Text string

// Must be at least 1 items long
type Max45Text string

// Must match the pattern [a-zA-Z0-9]{1,4}
type Max4AlphaNumericText string

// Must be at least 1 items long
type Max4Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max500Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max76Text string

type MemoryCharacteristics1 struct {
	Id     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	TtlSz  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TtlSz"`
	FreeSz float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FreeSz"`
	Unit   MemoryUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Unit"`
}

// May be one of BYTE, EXAB, GIGA, KILO, MEGA, PETA, TERA
type MemoryUnit1Code string

// May be one of AUTQ, AUTP, CCAV, CCAK, CCAQ, CCAP, CMPV, CMPK, DCAV, DCRR, DCCQ, DCCP, DGNP, DGNQ, FAUQ, FAUP, FCMV, FCMK, FRVA, FRVR, RCLQ, RCLP, RVRA, RVRR, CDDQ, CDDK, CDDR, CDDP
type MessageFunction14Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

// Must be at least 3 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 6 items long
type Min6Max8Text string

// Must match the pattern [0-9]{8,28}
type Min8Max28NumericText string

type NameAndAddress3 struct {
	Nm  Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm"`
	Adr PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Adr"`
}

type NameAndAddress6 struct {
	Nm  Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm"`
	Adr PostalAddress2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Adr"`
}

// May be one of DOCT, MIST, MISS, MADM
type NamePrefix1Code string

type NetworkParameters4 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NtwkTp"`
	AdrVal Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrVal"`
}

type NetworkParameters5 struct {
	Adr        []NetworkParameters4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SctyPrfl,omitempty"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

// May be one of OFLN, ONLN, SMON
type OnLineCapability1Code string

type OnLinePIN6 struct {
	NcrptdPINBlck ContentInformationType17 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptdPINBlck"`
	PINFrmt       PINFormat3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PINFrmt"`
	AddtlInpt     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlInpt,omitempty"`
}

// May be one of RNDM, ICCF, MERF, TRMF, ISSF, FRLT, EXFL, TAMT, CBIN, UBIN, CPAN, FLOW, CRCY
type OnLineReason1Code string

type Organisation26 struct {
	CmonNm       Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CmonNm"`
	Adr          Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Adr,omitempty"`
	CtryCd       ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtryCd"`
	MrchntCtgyCd Min3Max4Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MrchntCtgyCd"`
	RegdIdr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RegdIdr"`
}

type Organisation32 struct {
	Id          GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	CmonNm      Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CmonNm,omitempty"`
	LctnCtgy    LocationCategory1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LctnCtgy,omitempty"`
	LctnAndCtct CommunicationAddress9   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LctnAndCtct,omitempty"`
	SchmeData   Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SchmeData,omitempty"`
}

type OrganisationIdentification7 struct {
	AnyBIC AnyBICIdentifier                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AnyBIC,omitempty"`
	Othr   []GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

type OriginalAmountDetails1 struct {
	ActlAmt float64 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ActlAmt,omitempty"`
	MinAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MinAmt,omitempty"`
	MaxAmt  float64 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MaxAmt,omitempty"`
}

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cert,omitempty"`
}

// May be one of MREF, TEXT, HTML
type OutputFormat1Code string

// May be one of ISO0, ISO1, ISO2, ISO3, ISO4, ISO5
type PINFormat3Code string

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

// May be one of APPL, CERT, EVAL
type POIComponentAssessment1Code string

// May be one of WAIT, OUTD, OPER, DACT
type POIComponentStatus1Code string

// May be one of AQPP, APPR, TLPR, SCPR, SERV, TERM, DVCE, SECM, APLI, EMVK, EMVO, MDWR, DRVR, OPST, MRPR, CRTF, TMSP, SACP, SAPR
type POIComponentType5Code string

type Packaging1 struct {
	Tp ExternalPackagingType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	Nm Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
}

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MskGnrtrAlgo,omitempty"`
}

type Parameter11 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TrlrFld,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BPddg,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo,omitempty"`
}

type Party36Choice struct {
	OrgId  OrganisationIdentification7 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OrgId"`
	PrvtId PersonIdentification14      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrvtId"`
}

type PartyIdentification100Choice struct {
	AnyBIC   AnyBICIdentifier        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtryId"`
	NmAndAdr NameAndAddress6         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NmAndAdr"`
}

type PartyIdentification129 struct {
	Id        Party36Choice  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Nm        Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
	PstlAdr   PostalAddress6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstlAdr,omitempty"`
	CtryOfRes CountryCode    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtryOfRes,omitempty"`
	CtctDtls  []Contacts3    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtctDtls,omitempty"`
}

type PartyIdentification72Choice struct {
	AnyBIC  AnyBICIdentifier       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AnyBIC"`
	PrtryId GenericIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtryId"`
}

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS, ICCA
type PartyType14Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of ACQR, ITAG, PCPT, TMGT, SALE
type PartyType7Code string

type PaymentCard28 struct {
	PrtctdCardData ContentInformationType17 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtctdCardData,omitempty"`
	PrvtCardData   Max100KBinary            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrvtCardData,omitempty"`
	PlainCardData  PlainCardData15          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PlainCardData,omitempty"`
	PmtAcctRef     Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PmtAcctRef,omitempty"`
	MskdPAN        string                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MskdPAN,omitempty"`
	IssrBIN        Max15NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IssrBIN,omitempty"`
	CardCtryCd     Max3Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardCtryCd,omitempty"`
	CardCcyCd      Exact3AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardCcyCd,omitempty"`
	CardPdctPrfl   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPdctPrfl,omitempty"`
	CardBrnd       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardBrnd,omitempty"`
	CardPdctTp     CardProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPdctTp,omitempty"`
	CardPdctSubTp  Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPdctSubTp,omitempty"`
	IntrnlCard     bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IntrnlCard,omitempty"`
	AllwdPdct      []Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AllwdPdct,omitempty"`
	SvcOptn        Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SvcOptn,omitempty"`
	AddtlCardData  Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlCardData,omitempty"`
}

type PaymentContext24 struct {
	CardPres       bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardPres,omitempty"`
	CrdhldrPres    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CrdhldrPres,omitempty"`
	OnLineCntxt    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OnLineCntxt,omitempty"`
	AttndncCntxt   AttendanceContext1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AttndncCntxt,omitempty"`
	TxEnvt         TransactionEnvironment1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxEnvt,omitempty"`
	TxChanl        TransactionChannel5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxChanl,omitempty"`
	AttndntMsgCpbl bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AttndntMsgCpbl,omitempty"`
	AttndntLang    string                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AttndntLang,omitempty"`
	CardDataNtryMd CardDataReading5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardDataNtryMd,omitempty"`
	FllbckInd      CardFallback1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FllbckInd,omitempty"`
	SpprtdOptn     []SupportedPaymentOption1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SpprtdOptn,omitempty"`
}

type PaymentTokenIdentifiers1 struct {
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrvdrId"`
	RqstrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RqstrId"`
}

type Period14 struct {
	StartDt DateFormat56Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StartDt"`
	EndDt   DateFormat56Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 EndDt"`
}

type PersonIdentification14 struct {
	DtAndPlcOfBirth DateAndPlaceOfBirth1           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Othr,omitempty"`
}

type PersonIdentification15 struct {
	DrvrLicNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DrvrLicNb,omitempty"`
	DrvrLicLctn     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DrvrLicLctn,omitempty"`
	DrvrLicNm       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DrvrLicNm,omitempty"`
	DrvrId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DrvrId,omitempty"`
	CstmrNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CstmrNb,omitempty"`
	SclSctyNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SclSctyNb,omitempty"`
	AlnRegnNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AlnRegnNb,omitempty"`
	PsptNb          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PsptNb,omitempty"`
	TaxIdNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxIdNb,omitempty"`
	IdntyCardNb     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IdntyCardNb,omitempty"`
	MplyrIdNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MplyrIdNb,omitempty"`
	MplyeeIdNb      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MplyeeIdNb,omitempty"`
	JobNb           Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 JobNb,omitempty"`
	Dept            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dept,omitempty"`
	EmailAdr        Max256Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 EmailAdr,omitempty"`
	DtAndPlcOfBirth DateAndPlaceOfBirth1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PlainCardData15 struct {
	PAN       Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PAN"`
	CardSeqNb Min2Max3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardSeqNb,omitempty"`
	FctvDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FctvDt,omitempty"`
	XpryDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 XpryDt"`
	SvcCd     Exact3NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SvcCd,omitempty"`
	Trck1     Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Trck1,omitempty"`
	Trck2     Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Trck2,omitempty"`
	Trck3     Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Trck3,omitempty"`
	CrdhldrNm Max45Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CrdhldrNm,omitempty"`
}

type PlainCardData17 struct {
	PAN           Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PAN,omitempty"`
	Trck1         Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Trck1,omitempty"`
	Trck2         Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Trck2,omitempty"`
	Trck3         Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Trck3,omitempty"`
	AddtlCardData []Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlCardData,omitempty"`
	NtryMd        CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NtryMd,omitempty"`
}

type PointOfInteraction8 struct {
	Id           GenericIdentification53         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	SysNm        Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SysNm,omitempty"`
	GrpId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 GrpId,omitempty"`
	Cpblties     PointOfInteractionCapabilities6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cpblties,omitempty"`
	TmZone       Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TmZone,omitempty"`
	TermnlIntgtn LocationCategory3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TermnlIntgtn,omitempty"`
	Cmpnt        []PointOfInteractionComponent8  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cmpnt,omitempty"`
}

type PointOfInteractionCapabilities6 struct {
	CardRdngCpblties      []CardDataReading5Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardRdngCpblties,omitempty"`
	CrdhldrVrfctnCpblties []CardholderVerificationCapability4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CrdhldrVrfctnCpblties,omitempty"`
	PINLngthCpblties      float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PINLngthCpblties,omitempty"`
	ApprvlCdLngth         float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ApprvlCdLngth,omitempty"`
	MxScrptLngth          float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MxScrptLngth,omitempty"`
	CardCaptrCpbl         bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CardCaptrCpbl,omitempty"`
	OnLineCpblties        OnLineCapability1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OnLineCpblties,omitempty"`
	MsgCpblties           []DisplayCapabilities4                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MsgCpblties,omitempty"`
}

type PointOfInteractionComponent8 struct {
	Tp       POIComponentType5Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Id       PointOfInteractionComponentIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
	Sts      PointOfInteractionComponentStatus3          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Sts,omitempty"`
	StdCmplc []GenericIdentification48                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StdCmplc,omitempty"`
	Chrtcs   PointOfInteractionComponentCharacteristics4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Chrtcs,omitempty"`
	Assmnt   []PointOfInteractionComponentAssessment1    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Assmnt,omitempty"`
}

type PointOfInteractionComponentAssessment1 struct {
	Tp      POIComponentAssessment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Assgnr  []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Assgnr"`
	DlvryDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryDt,omitempty"`
	XprtnDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 XprtnDt,omitempty"`
	Nb      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nb"`
}

type PointOfInteractionComponentCharacteristics4 struct {
	Mmry           []MemoryCharacteristics1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Mmry,omitempty"`
	Com            []CommunicationCharacteristics3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Com,omitempty"`
	SctyAccsMdls   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SctyAccsMdls,omitempty"`
	SbcbrIdntyMdls float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SbcbrIdntyMdls,omitempty"`
	SctyElmt       []CryptographicKey13            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SctyElmt,omitempty"`
}

type PointOfInteractionComponentIdentification1 struct {
	ItmNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ItmNb,omitempty"`
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrvdrId,omitempty"`
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	SrlNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SrlNb,omitempty"`
}

type PointOfInteractionComponentStatus3 struct {
	VrsnNb Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VrsnNb,omitempty"`
	Sts    POIComponentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Sts,omitempty"`
	XpryDt ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 XpryDt,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrTp,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrLine,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry"`
}

type PostalAddress2 struct {
	StrtNm      Max70Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrtNm,omitempty"`
	PstCdId     Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstCdId"`
	TwnNm       Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TwnNm"`
	CtrySubDvsn Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtrySubDvsn,omitempty"`
	Ctry        CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry"`
}

type PostalAddress22 struct {
	AdrTp       AddressType2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrTp,omitempty"`
	Dept        Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dept,omitempty"`
	SubDept     Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SubDept,omitempty"`
	AdrLine     []Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrLine,omitempty"`
	StrtNm      Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrtNm,omitempty"`
	BldgNb      Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BldgNb,omitempty"`
	PstCd       Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstCd,omitempty"`
	TwnNm       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TwnNm,omitempty"`
	CtrySubDvsn []Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtrySubDvsn,omitempty"`
	CtryCd      Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtryCd,omitempty"`
}

type PostalAddress6 struct {
	AdrTp       AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrTp,omitempty"`
	Dept        Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Dept,omitempty"`
	SubDept     Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SubDept,omitempty"`
	StrtNm      Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrtNm,omitempty"`
	BldgNb      Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BldgNb,omitempty"`
	PstCd       Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PstCd,omitempty"`
	TwnNm       Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TwnNm,omitempty"`
	CtrySubDvsn Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtrySubDvsn,omitempty"`
	Ctry        CountryCode      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctry,omitempty"`
	AdrLine     []Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AdrLine,omitempty"`
}

type Product3 struct {
	ItmId       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ItmId,omitempty"`
	PdctCd      Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctCd"`
	AddtlPdctCd Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlPdctCd,omitempty"`
	UnitOfMeasr UnitOfMeasure6Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UnitOfMeasr,omitempty"`
	PdctQty     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctQty,omitempty"`
	UnitPric    float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UnitPric,omitempty"`
	UnitPricSgn bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UnitPricSgn,omitempty"`
	PdctAmt     float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctAmt"`
	PdctAmtSgn  bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctAmtSgn,omitempty"`
	ValAddedTax float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ValAddedTax,omitempty"`
	TaxTp       Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxTp,omitempty"`
	PdctDesc    Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctDesc,omitempty"`
	DlvryLctn   Max10Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryLctn,omitempty"`
	DlvrySvc    AttendanceContext2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvrySvc,omitempty"`
}

type ProductCategory1 struct {
	Tp   ProductCategory1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Ctgy Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ctgy"`
}

type ProductCategory1Choice struct {
	StrdPdctCtgy ProductCategory1       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrdPdctCtgy"`
	OthrPdctCtgy GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OthrPdctCtgy"`
}

// May be one of HRTR, QOTA, PRGP, LOBU, GNDR
type ProductCategory1Code string

type ProductCharacteristics1 struct {
	Tp     ProductCharacteristics1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Chrtcs Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Chrtcs"`
}

type ProductCharacteristics1Choice struct {
	StrdPdctChrtcs ProductCharacteristics1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrdPdctChrtcs"`
	OthrPdctChrtcs GenericIdentification4  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OthrPdctChrtcs"`
}

// May be one of BISP, CHNR, CLOR, EDSP, ENNR, OPTN, ORCR, PCTV, SISP, SIZE, SZRG, SPRM, STOR, VINR
type ProductCharacteristics1Code string

type ProductCharacteristics4 struct {
	Chrtc    ProductCharacteristics1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Chrtc,omitempty"`
	ValMeasr Quantity16                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ValMeasr,omitempty"`
}

type ProductIdentifier2 struct {
	Tp  ProductIdentifier2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp"`
	Idr Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Idr"`
}

type ProductIdentifier2Choice struct {
	StrdPdctIdr ProductIdentifier2     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 StrdPdctIdr"`
	OthrPdctIdr GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OthrPdctIdr"`
}

// May be one of BINR, COMD, EANC, HRTR, MANI, MODL, PART, QOTA, STYL, SUPI, UPCC
type ProductIdentifier2Code string

type Quantity16 struct {
	UnitOfMeasr UnitOfMeasure6Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UnitOfMeasr"`
	Val         float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Val"`
	Fctr        Max15NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Fctr,omitempty"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyIdr"`
}

type Recipient6Choice struct {
	KeyTrnsprt KeyTransport5  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyTrnsprt"`
	KEK        KEK5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 KeyIdr"`
}

type RecurringTransaction2 struct {
	InstlmtPlan []InstalmentPlan1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InstlmtPlan,omitempty"`
	PlanId      Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PlanId,omitempty"`
	SeqNb       float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SeqNb,omitempty"`
	PrdUnit     Frequency3Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrdUnit,omitempty"`
	InstlmtPrd  float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InstlmtPrd,omitempty"`
	TtlNbOfPmts float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TtlNbOfPmts,omitempty"`
	FrstPmtDt   ISODate               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FrstPmtDt,omitempty"`
	TtlAmt      CurrencyAndAmount     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TtlAmt,omitempty"`
	FrstAmt     float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 FrstAmt,omitempty"`
	Chrgs       float64               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Chrgs,omitempty"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AttrVal"`
}

// May be one of APPR, DECL, PART
type Response4Code string

type ResponseType5 struct {
	Rspn         Response4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rspn"`
	RspnRsn      Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RspnRsn,omitempty"`
	AddtlRspnInf Max140Text    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlRspnInf,omitempty"`
}

type SaleContext2 struct {
	SaleId        Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleId,omitempty"`
	SaleRefNb     Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleRefNb,omitempty"`
	SaleRcncltnId Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SaleRcncltnId,omitempty"`
	CshrId        Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CshrId,omitempty"`
	ShftNb        Max2NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShftNb,omitempty"`
	PurchsOrdrNb  Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PurchsOrdrNb,omitempty"`
	InvcNb        Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 InvcNb,omitempty"`
	DlvryNoteNb   Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryNoteNb,omitempty"`
	SpnsrdMrchnt  []Organisation26 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SpnsrdMrchnt,omitempty"`
	SpltPmt       bool             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SpltPmt,omitempty"`
	RmngAmt       float64          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RmngAmt,omitempty"`
	AddtlSaleData Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlSaleData,omitempty"`
}

type SignedData5 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cert,omitempty"`
	Sgnr        []Signer4                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Sgnr,omitempty"`
}

type Signer4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Vrsn,omitempty"`
	SgnrId      Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Sgntr"`
}

type SimpleIdentificationInformation4 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id"`
}

type SupplementaryData1 struct {
	PlcAndNm Max350Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// May be one of PART, MSRV
type SupportedPaymentOption1Code string

// May be one of NONE, MASA, MISA, SISA, IISA, CUYP, PRYP, ASTR, EMPY, EMCY, EPRY, ECYE, NFPI, NFQP, DECP, IRAC, IRAR, KEOG, PFSP, 401K, SIRA, 403B, 457X, RIRA, RIAN, RCRF, RCIP, EIFP, EIOP
type TaxExemptReason1Code string

type TaxExemptionReasonFormatChoice struct {
	Ustrd Max140Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Ustrd"`
	Strd  TaxExemptReason1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Strd"`
}

type TaxParty3 struct {
	TaxId       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxId,omitempty"`
	TaxTp       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxTp,omitempty"`
	RegnId      Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RegnId,omitempty"`
	TaxXmptnRsn []TaxExemptionReasonFormatChoice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxXmptnRsn,omitempty"`
}

// May be one of PROV, NATI, STAT, WITH, STAM, COAX, VATA, CUST, VATB
type TaxType15Code string

type TaxTypeFormat1Choice struct {
	Cd    TaxType15Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Cd"`
	Prtry GenericIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Prtry"`
}

type Traceability5 struct {
	RlayId      GenericIdentification76 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RlayId"`
	PrtcolNm    Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtcolNm,omitempty"`
	PrtcolVrsn  Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PrtcolVrsn,omitempty"`
	TracDtTmIn  ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TracDtTmIn"`
	TracDtTmOut ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TracDtTmOut"`
}

type TradeAgreement16 struct {
	Buyr          TradeParty4                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Buyr"`
	Sellr         TradeParty4                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Sellr"`
	QtnDocId      DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 QtnDocId,omitempty"`
	CtrctDocId    DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtrctDocId,omitempty"`
	BuyrOrdrIdDoc DocumentIdentification22      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 BuyrOrdrIdDoc,omitempty"`
	AddtlRefDoc   []DocumentGeneralInformation2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlRefDoc,omitempty"`
	Incotrms      Incoterms3                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Incotrms,omitempty"`
}

type TradeDelivery3 struct {
	DlvryPrd    Period14                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryPrd,omitempty"`
	DlvryDtTm   ISODateTime              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryDtTm,omitempty"`
	ShipFr      TradeParty4              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShipFr,omitempty"`
	ShipTo      TradeParty4              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 ShipTo,omitempty"`
	UltmtShipTo TradeParty4              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UltmtShipTo,omitempty"`
	DlvryNote   DocumentIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DlvryNote,omitempty"`
	Consgnmt    []Consignment5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Consgnmt,omitempty"`
}

type TradeParty4 struct {
	PtyId  PartyIdentification129 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PtyId"`
	LglOrg LegalOrganisation1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 LglOrg,omitempty"`
	TaxPty []TaxParty3            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TaxPty,omitempty"`
}

type TradeProduct3 struct {
	Id         []ProductIdentifier2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Nm         Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
	Desc       Max140Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Desc,omitempty"`
	CtryOfOrgn []CountryCodeAndName1      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 CtryOfOrgn,omitempty"`
	PdctChrtcs []ProductCharacteristics4  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctChrtcs,omitempty"`
	PdctCtgy   []ProductCategory1Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 PdctCtgy,omitempty"`
	GblSrlIdr  []Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 GblSrlIdr,omitempty"`
}

// May be one of MAIL, TLPH, ECOM, TVPY, SECM, MOBL, MPOS
type TransactionChannel5Code string

// May be one of MERC, PRIV, PUBL
type TransactionEnvironment1Code string

type TransactionIdentifier1 struct {
	TxDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxDtTm"`
	TxRef  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TxRef"`
}

type TransactionVerificationResult4 struct {
	Mtd        AuthenticationMethod6Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Mtd"`
	VrfctnNtty AuthenticationEntity2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VrfctnNtty,omitempty"`
	Rslt       Verification1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Rslt,omitempty"`
	AddtlRslt  Max500Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlRslt,omitempty"`
}

type TransportMeans3 struct {
	MdCd Max4Text  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MdCd,omitempty"`
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Id,omitempty"`
	Nm   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Nm,omitempty"`
}

// May be one of ACTL, ESTM, MAXI, DFLT, RPLT, INCR, DECR, RESD
type TypeOfAmount8Code string

// Must match the pattern [0-9]{8,17}
type UPICIdentifier string

type UnitOfMeasure6Choice struct {
	UnitOfMeasrCd   UnitOfMeasure9Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UnitOfMeasrCd"`
	OthrUnitOfMeasr Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 OthrUnitOfMeasr"`
}

// May be one of PIEC, TONS, FOOT, GBGA, USGA, GRAM, INCH, KILO, PUND, METR, CMET, MMET, LITR, CELI, MILI, GBOU, USOU, GBQA, USQA, GBPI, USPI, MILE, KMET, YARD, SQKI, HECT, ARES, SMET, SCMT, SMIL, SQMI, SQYA, SQFO, SQIN, ACRE, KWHO, DGEU, GGEU
type UnitOfMeasure6Code string

// May be one of BAGG, BALE, BOTL, BOXX, CRTN, CELI, CMET, CNTR, CRAT, CBIN, CBME, CBML, PIEC, FOOT, GBFO, GBGA, GBPI, GBQA, GBTN, GRAM, INCH, KILO, KMET, LITR, METR, TONE, MILE, MMET, MILI, PUND, USOU, SCMT, SQFO, SQIN, SQKI, SMET, SQMI, SMIL, SQYA, USBA, USFO, USGA, USPI, USQA, USTN, YARD, GBOU, ACRE, ARES, HECT
type UnitOfMeasure9Code string

// May be one of CDSP, CRCP, MDSP, MRCP, CRDO
type UserInterface4Code string

type Vehicle1 struct {
	VhclNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VhclNb,omitempty"`
	TrlrNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TrlrNb,omitempty"`
	VhclTag        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VhclTag,omitempty"`
	VhclTagNtryMd  CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 VhclTagNtryMd,omitempty"`
	UnitNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 UnitNb,omitempty"`
	RplcmntCar     bool                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RplcmntCar,omitempty"`
	Odmtr          float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Odmtr,omitempty"`
	Hbmtr          float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Hbmtr,omitempty"`
	TrlrHrs        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 TrlrHrs,omitempty"`
	RefrHrs        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 RefrHrs,omitempty"`
	MntncId        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 MntncId,omitempty"`
	DrvrOrVhclCard PlainCardData17      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 DrvrOrVhclCard,omitempty"`
	AddtlVhclData  []Vehicle2           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 AddtlVhclData,omitempty"`
}

type Vehicle2 struct {
	Tp     Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Tp,omitempty"`
	NtryMd CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 NtryMd,omitempty"`
	Data   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.001.001.07 Data"`
}

// May be one of FAIL, MISS, NOVF, PART, SUCC, ERRR
type Verification1Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
