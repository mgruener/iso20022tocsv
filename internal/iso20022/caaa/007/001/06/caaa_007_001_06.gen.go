// Code generated by main. DO NOT EDIT.

package caaa_007_001_06

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorCancellationAdvice6 struct {
	Envt  CardPaymentEnvironment59 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Envt"`
	Cntxt CardPaymentContext23     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Cntxt,omitempty"`
	Tx    CardPaymentTransaction75 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tx"`
}

type AcceptorCancellationAdviceV06 struct {
	Hdr      Header24                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Hdr"`
	CxlAdvc  AcceptorCancellationAdvice6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CxlAdvc"`
	SctyTrlr ContentInformationType15    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SctyTrlr,omitempty"`
}

type Acquirer4 struct {
	Id         GenericIdentification53 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id,omitempty"`
	ParamsVrsn Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ParamsVrsn"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5
type Algorithm12Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C
type Algorithm13Code string

// May be one of EA2C, E3DC, EA9C, EA5C
type Algorithm15Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification11 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Algo"`
	Param Parameter4     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Param,omitempty"`
}

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Param,omitempty"`
}

type AlgorithmIdentification13 struct {
	Algo  Algorithm13Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Algo"`
	Param Parameter6      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Param,omitempty"`
}

type AlgorithmIdentification14 struct {
	Algo  Algorithm15Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Algo"`
	Param Parameter6      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Param,omitempty"`
}

type AlgorithmIdentification15 struct {
	Algo  Algorithm12Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Param,omitempty"`
}

// May be one of ATTD, SATT, UATT
type AttendanceContext1Code string

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Vrsn,omitempty"`
	Rcpt        []Recipient4Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Rcpt"`
	MACAlgo     AlgorithmIdentification15 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MAC"`
}

type AuthorisationResult12 struct {
	AuthstnNtty   GenericIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AuthstnCd,omitempty"`
	TMSTrggr      TMSTrigger1             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TMSTrggr,omitempty"`
}

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL, CDFL
type CardDataReading5Code string

// May be one of FFLB, SFLB, NFLB
type CardFallback1Code string

type CardPaymentContext23 struct {
	PmtCntxt  PaymentContext23 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PmtCntxt"`
	SaleCntxt SaleContext2     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SaleCntxt,omitempty"`
}

type CardPaymentEnvironment59 struct {
	Acqrr    Acquirer4           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Acqrr,omitempty"`
	Mrchnt   Organisation25      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Mrchnt,omitempty"`
	POI      PointOfInteraction7 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 POI"`
	Card     PaymentCard26       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Card"`
	CstmrDvc CustomerDevice1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CstmrDvc,omitempty"`
	Wllt     CustomerDevice1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Wllt,omitempty"`
	PmtTkn   CardPaymentToken3   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PmtTkn,omitempty"`
}

// May be one of IRES, URES, PRES, ARES, FREC, RREC
type CardPaymentServiceType3Code string

// May be one of BALC, CACT, CRDP, CAFH, CAVR, CSHW, CSHD, DEFR, LOAD, ORCR, PINC, QUCH, RFND, RESA, VALC, UNLD, CAFT, CAFL
type CardPaymentServiceType5Code string

// May be one of AGGR, DCCV, GRTT, LOYT, NRES, PUCO, RECP, SOAF, VCAU, INSI, INSA, CSHB, INST, NRFD
type CardPaymentServiceType9Code string

type CardPaymentToken3 struct {
	TknChrtc     []Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TknChrtc,omitempty"`
	TknRqstr     PaymentTokenIdentifiers1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TknRqstr,omitempty"`
	TknAssrncLvl float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TknAssrncLvl,omitempty"`
}

type CardPaymentTransaction52 struct {
	SaleRefId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SaleRefId,omitempty"`
	TxId           TransactionIdentifier1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxId"`
	POIId          GenericIdentification32       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 POIId,omitempty"`
	InitrTxId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 InitrTxId,omitempty"`
	RcptTxId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RcptTxId,omitempty"`
	TxTp           CardPaymentServiceType5Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxTp"`
	AddtlSvc       []CardPaymentServiceType9Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AddtlSvc,omitempty"`
	SvcAttr        CardPaymentServiceType3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SvcAttr,omitempty"`
	CardDataNtryMd CardDataReading5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardDataNtryMd,omitempty"`
	TxRslt         CardPaymentTransactionResult3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxRslt,omitempty"`
}

type CardPaymentTransaction75 struct {
	MrchntCtgyCd     Min3Max4Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MrchntCtgyCd"`
	CstmrCnsnt       []bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CstmrCnsnt,omitempty"`
	CardPrgrmmPropsd []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardPrgrmmPropsd,omitempty"`
	CardPrgrmmApld   []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardPrgrmmApld,omitempty"`
	SaleRefId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SaleRefId,omitempty"`
	TxId             TransactionIdentifier1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxId"`
	OrgnlTx          CardPaymentTransaction52        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 OrgnlTx,omitempty"`
	TxSucss          bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxSucss"`
	Rvsl             bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Rvsl,omitempty"`
	FailrRsn         []FailureReason3Code            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 FailrRsn,omitempty"`
	InitrTxId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 InitrTxId,omitempty"`
	RcptTxId         Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RcptTxId,omitempty"`
	RcncltnId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RcncltnId,omitempty"`
	IntrchngData     Max140Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 IntrchngData,omitempty"`
	TxDtls           CardPaymentTransactionDetails34 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxDtls"`
	AuthstnRslt      AuthorisationResult12           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AuthstnRslt,omitempty"`
	AddtlTxData      []Max70Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AddtlTxData,omitempty"`
}

type CardPaymentTransactionDetails34 struct {
	Ccy         ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Ccy,omitempty"`
	TtlAmt      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TtlAmt"`
	VldtyDt     ISODate            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 VldtyDt,omitempty"`
	ICCRltdData Max10000Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ICCRltdData,omitempty"`
}

type CardPaymentTransactionResult3 struct {
	AuthstnNtty   GenericIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AuthstnCd,omitempty"`
}

// May be one of COMM, CONS
type CardProductType1Code string

// May be one of APKI, CHDT, MNSG, MNVR, FBIG, FBIO, FDSG, FCPN, FEPN, NPIN, PKIS, SCEC, NBIO, NOVF, OTHR
type CardholderVerificationCapability4Code string

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RltvDstngshdNm"`
}

type CommunicationAddress5 struct {
	PstlAdr      PostalAddress18 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PstlAdr,omitempty"`
	Email        Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Email,omitempty"`
	URLAdr       Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 URLAdr,omitempty"`
	Phne         PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Phne,omitempty"`
	CstmrSvc     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AddtlCtctInf,omitempty"`
}

type CommunicationCharacteristics3 struct {
	ComTp   POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ComTp"`
	RmotPty []PartyType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RmotPty"`
	Actv    bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Actv"`
}

type ContentInformationType10 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CnttTp"`
	EnvlpdData EnvelopedData4   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 EnvlpdData"`
}

type ContentInformationType15 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CnttTp"`
	AuthntcdData AuthenticatedData4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AuthntcdData"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

type CustomerDevice1 struct {
	Id    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id,omitempty"`
	Tp    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp,omitempty"`
	Prvdr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Prvdr,omitempty"`
}

type DisplayCapabilities4 struct {
	Dstn      []UserInterface4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Dstn"`
	AvlblFrmt []OutputFormat1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AvlblFrmt,omitempty"`
	NbOfLines float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NbOfLines,omitempty"`
	LineWidth float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 LineWidth,omitempty"`
	AvlblLang []string             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AvlblLang,omitempty"`
}

type Document struct {
	AccptrCxlAdvc AcceptorCancellationAdviceV06 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AccptrCxlAdvc"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Cntt,omitempty"`
}

type EncryptedContent3 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification14 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CnttNcrptnAlgo"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptdData"`
}

// May be one of TR31, TR34
type EncryptionFormat1Code string

type EnvelopedData4 struct {
	Vrsn       float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Vrsn,omitempty"`
	Rcpt       []Recipient4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Rcpt"`
	NcrptdCntt EncryptedContent3  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptdCntt,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{3}
type Exact3AlphaNumericText string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// May be one of CDCL, CUCL, MALF, FDCL, NDCL, PART, SFRD, TIMO, LATE, UCMP, USND, SECU
type FailureReason3Code string

type GenericIdentification32 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp,omitempty"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ShrtNm,omitempty"`
}

type GenericIdentification48 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	Vrsn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Vrsn"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr"`
}

type GenericIdentification53 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp,omitempty"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ShrtNm,omitempty"`
}

type GenericIdentification76 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ShrtNm,omitempty"`
}

type GenericIdentification90 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id,omitempty"`
	Tp     PartyType14Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ShrtNm,omitempty"`
}

type GenericIdentification94 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	Tp       PartyType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp,omitempty"`
	Issr     PartyType4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ShrtNm,omitempty"`
	RmotAccs NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RmotAccs,omitempty"`
}

type Header24 struct {
	MsgFctn        MessageFunction10Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MsgFctn"`
	PrtcolVrsn     Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PrtcolVrsn"`
	XchgId         float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 XchgId"`
	ReTrnsmssnCntr Max3NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ReTrnsmssnCntr,omitempty"`
	CreDtTm        ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CreDtTm"`
	InitgPty       GenericIdentification53 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 InitgPty"`
	RcptPty        GenericIdentification94 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RcptPty,omitempty"`
	Tracblt        []Traceability5         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tracblt,omitempty"`
}

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SrlNb"`
}

type KEK4 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 DerivtnId,omitempty"`
}

type KEKIdentifier5 struct {
	KeyId     Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyId"`
	KeyVrsn   Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyVrsn"`
	SeqNb     float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 DerivtnId,omitempty"`
	Tp        CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp,omitempty"`
	Fctn      []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Fctn,omitempty"`
}

type KeyTransport4 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification11 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

// May be one of FIXD, ABRD, NMDC, MOTO, HOME
type LocationCategory1Code string

// May be one of INDR, IPMP, MPOI, MPMP, MSLE, SSLE, VNDG
type LocationCategory3Code string

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max104Text string

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max10Text string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max37Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must be at least 1 items long
type Max3Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max76Text string

type MemoryCharacteristics1 struct {
	Id     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	TtlSz  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TtlSz"`
	FreeSz float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 FreeSz"`
	Unit   MemoryUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Unit"`
}

// May be one of BYTE, EXAB, GIGA, KILO, MEGA, PETA, TERA
type MemoryUnit1Code string

// May be one of AUTQ, AUTP, FAUQ, FAUP, CMPV, CMPK, FCMV, FCMK, RVRA, RVRR, FRVA, FRVR, CCAQ, CCAP, CCAV, CCAK, DGNP, DGNQ, RCLQ, RCLP, DCCQ, DCCP
type MessageFunction10Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

// Must be at least 3 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 6 items long
type Min6Max8Text string

// Must match the pattern [0-9]{8,28}
type Min8Max28NumericText string

type NetworkParameters4 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NtwkTp"`
	AdrVal Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AdrVal"`
}

type NetworkParameters5 struct {
	Adr        []NetworkParameters4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SctyPrfl,omitempty"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

// May be one of OFLN, ONLN, SMON
type OnLineCapability1Code string

type Organisation25 struct {
	Id          GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id,omitempty"`
	CmonNm      Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CmonNm,omitempty"`
	LctnCtgy    LocationCategory1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 LctnCtgy,omitempty"`
	LctnAndCtct CommunicationAddress5   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 LctnAndCtct,omitempty"`
	SchmeData   Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SchmeData,omitempty"`
}

type Organisation26 struct {
	CmonNm       Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CmonNm"`
	Adr          Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Adr,omitempty"`
	CtryCd       ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CtryCd"`
	MrchntCtgyCd Min3Max4Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MrchntCtgyCd"`
	RegdIdr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RegdIdr"`
}

// May be one of MREF, TEXT, HTML
type OutputFormat1Code string

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

// May be one of APPL, CERT, EVAL
type POIComponentAssessment1Code string

// May be one of WAIT, OUTD, OPER, DACT
type POIComponentStatus1Code string

// May be one of AQPP, APPR, TLPR, SCPR, SERV, TERM, DVCE, SECM, APLI, EMVK, EMVO, MDWR, DRVR, OPST, MRPR, CRTF, TMSP
type POIComponentType4Code string

type Parameter4 struct {
	NcrptnFrmt   EncryptionFormat1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm11Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MskGnrtrAlgo,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 DgstAlgo,omitempty"`
}

type Parameter6 struct {
	NcrptnFrmt   EncryptionFormat1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 BPddg,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 BPddg,omitempty"`
}

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS, ICCA
type PartyType14Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of ACQR, ITAG, PCPT, TMGT, SALE
type PartyType7Code string

type PaymentCard26 struct {
	PrtctdCardData ContentInformationType10 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PrtctdCardData,omitempty"`
	PlainCardData  PlainCardData16          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PlainCardData,omitempty"`
	PmtAcctRef     Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PmtAcctRef,omitempty"`
	MskdPAN        string                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MskdPAN,omitempty"`
	IssrBIN        Max15NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 IssrBIN,omitempty"`
	CardCtryCd     Max3Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardCtryCd,omitempty"`
	CardCcyCd      Exact3AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardCcyCd,omitempty"`
	CardPdctPrfl   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardPdctPrfl,omitempty"`
	CardBrnd       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardBrnd,omitempty"`
	CardPdctTp     CardProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardPdctTp,omitempty"`
	AddtlCardData  Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AddtlCardData,omitempty"`
	CardPdctSubTp  Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardPdctSubTp,omitempty"`
}

type PaymentContext23 struct {
	CardPres       bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardPres,omitempty"`
	CrdhldrPres    bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CrdhldrPres,omitempty"`
	OnLineCntxt    bool                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 OnLineCntxt,omitempty"`
	AttndncCntxt   AttendanceContext1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AttndncCntxt,omitempty"`
	TxEnvt         TransactionEnvironment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxEnvt,omitempty"`
	TxChanl        TransactionChannel5Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxChanl,omitempty"`
	CardDataNtryMd CardDataReading5Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardDataNtryMd"`
	FllbckInd      CardFallback1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 FllbckInd,omitempty"`
}

type PaymentTokenIdentifiers1 struct {
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PrvdrId"`
	RqstrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RqstrId"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PlainCardData16 struct {
	PAN       Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PAN"`
	CardSeqNb Min2Max3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardSeqNb,omitempty"`
	FctvDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 FctvDt,omitempty"`
	XpryDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 XpryDt"`
	SvcCd     Exact3NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SvcCd,omitempty"`
	Trck1     Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Trck1,omitempty"`
	Trck2     Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Trck2,omitempty"`
	Trck3     Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Trck3,omitempty"`
}

type PointOfInteraction7 struct {
	Id           GenericIdentification32         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	SysNm        Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SysNm,omitempty"`
	GrpId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 GrpId,omitempty"`
	Cpblties     PointOfInteractionCapabilities6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Cpblties,omitempty"`
	TmZone       Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TmZone,omitempty"`
	TermnlIntgtn LocationCategory3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TermnlIntgtn,omitempty"`
	Cmpnt        []PointOfInteractionComponent7  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Cmpnt,omitempty"`
}

type PointOfInteractionCapabilities6 struct {
	CardRdngCpblties      []CardDataReading5Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardRdngCpblties,omitempty"`
	CrdhldrVrfctnCpblties []CardholderVerificationCapability4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CrdhldrVrfctnCpblties,omitempty"`
	PINLngthCpblties      float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PINLngthCpblties,omitempty"`
	ApprvlCdLngth         float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ApprvlCdLngth,omitempty"`
	MxScrptLngth          float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MxScrptLngth,omitempty"`
	CardCaptrCpbl         bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CardCaptrCpbl,omitempty"`
	OnLineCpblties        OnLineCapability1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 OnLineCpblties,omitempty"`
	MsgCpblties           []DisplayCapabilities4                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 MsgCpblties,omitempty"`
}

type PointOfInteractionComponent7 struct {
	Tp       POIComponentType4Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp"`
	Id       PointOfInteractionComponentIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id"`
	Sts      PointOfInteractionComponentStatus3          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Sts,omitempty"`
	StdCmplc []GenericIdentification48                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 StdCmplc,omitempty"`
	Chrtcs   PointOfInteractionComponentCharacteristics3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Chrtcs,omitempty"`
	Assmnt   []PointOfInteractionComponentAssessment1    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Assmnt,omitempty"`
}

type PointOfInteractionComponentAssessment1 struct {
	Tp      POIComponentAssessment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Tp"`
	Assgnr  []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Assgnr"`
	DlvryDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 DlvryDt,omitempty"`
	XprtnDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 XprtnDt,omitempty"`
	Nb      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Nb"`
}

type PointOfInteractionComponentCharacteristics3 struct {
	Mmry           []MemoryCharacteristics1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Mmry,omitempty"`
	Com            []CommunicationCharacteristics3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Com,omitempty"`
	SctyAccsMdls   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SctyAccsMdls,omitempty"`
	SbcbrIdntyMdls float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SbcbrIdntyMdls,omitempty"`
	KeyChckVal     Max35Binary                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyChckVal,omitempty"`
	KeyChrtc       KEKIdentifier5                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyChrtc,omitempty"`
	NcrptdKey      Max5000Binary                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 NcrptdKey,omitempty"`
}

type PointOfInteractionComponentIdentification1 struct {
	ItmNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ItmNb,omitempty"`
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PrvdrId,omitempty"`
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Id,omitempty"`
	SrlNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SrlNb,omitempty"`
}

type PointOfInteractionComponentStatus3 struct {
	VrsnNb Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 VrsnNb,omitempty"`
	Sts    POIComponentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Sts,omitempty"`
	XpryDt ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 XpryDt,omitempty"`
}

type PostalAddress18 struct {
	AdrLine     []Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AdrLine,omitempty"`
	StrtNm      Max70Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 StrtNm,omitempty"`
	BldgNb      Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 BldgNb,omitempty"`
	PstCd       Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PstCd,omitempty"`
	TwnNm       Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TwnNm"`
	CtrySubDvsn []Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CtrySubDvsn,omitempty"`
	Ctry        CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Ctry"`
}

type Recipient4Choice struct {
	KeyTrnsprt KeyTransport4  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyTrnsprt"`
	KEK        KEK4           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyIdr"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 KeyIdr"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AttrVal"`
}

// May be one of APPR, DECL, PART
type Response4Code string

type ResponseType5 struct {
	Rspn         Response4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 Rspn"`
	RspnRsn      Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RspnRsn,omitempty"`
	AddtlRspnInf Max140Text    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AddtlRspnInf,omitempty"`
}

type SaleContext2 struct {
	SaleId        Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SaleId,omitempty"`
	SaleRefNb     Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SaleRefNb,omitempty"`
	SaleRcncltnId Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SaleRcncltnId,omitempty"`
	CshrId        Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 CshrId,omitempty"`
	ShftNb        Max2NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 ShftNb,omitempty"`
	PurchsOrdrNb  Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PurchsOrdrNb,omitempty"`
	InvcNb        Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 InvcNb,omitempty"`
	DlvryNoteNb   Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 DlvryNoteNb,omitempty"`
	SpnsrdMrchnt  []Organisation26 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SpnsrdMrchnt,omitempty"`
	SpltPmt       bool             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 SpltPmt,omitempty"`
	RmngAmt       float64          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RmngAmt,omitempty"`
	AddtlSaleData Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 AddtlSaleData,omitempty"`
}

// May be one of CRIT, ASAP, DTIM
type TMSContactLevel1Code string

type TMSTrigger1 struct {
	TMSCtctLvl  TMSContactLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TMSCtctLvl"`
	TMSId       Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TMSId,omitempty"`
	TMSCtctDtTm ISODateTime          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TMSCtctDtTm,omitempty"`
}

type Traceability5 struct {
	RlayId      GenericIdentification76 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 RlayId"`
	PrtcolNm    Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PrtcolNm,omitempty"`
	PrtcolVrsn  Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 PrtcolVrsn,omitempty"`
	TracDtTmIn  ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TracDtTmIn"`
	TracDtTmOut ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TracDtTmOut"`
}

// May be one of MAIL, TLPH, ECOM, TVPY, SECM, MOBL, MPOS
type TransactionChannel5Code string

// May be one of MERC, PRIV, PUBL
type TransactionEnvironment1Code string

type TransactionIdentifier1 struct {
	TxDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxDtTm"`
	TxRef  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.06 TxRef"`
}

// May be one of CDSP, CRCP, MDSP, MRCP, CRDO
type UserInterface4Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
