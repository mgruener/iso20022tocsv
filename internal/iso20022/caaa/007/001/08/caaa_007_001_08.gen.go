// Code generated by main. DO NOT EDIT.

package caaa_007_001_08

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

type AcceptorCancellationAdvice8 struct {
	Envt  CardPaymentEnvironment68 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Envt"`
	Cntxt CardPaymentContext27     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cntxt,omitempty"`
	Tx    CardPaymentTransaction83 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tx"`
}

type AcceptorCancellationAdviceV08 struct {
	Hdr      Header36                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Hdr"`
	CxlAdvc  AcceptorCancellationAdvice8 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CxlAdvc"`
	SctyTrlr ContentInformationType16    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SctyTrlr,omitempty"`
}

type Acquirer4 struct {
	Id         GenericIdentification53 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id,omitempty"`
	ParamsVrsn Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ParamsVrsn"`
}

// Must match the pattern [A-Z]{3,3}
type ActiveCurrencyCode string

// May be one of ADDR, PBOX, HOME, BIZZ, MLTO, DLVY
type AddressType2Code string

type AddressVerification1 struct {
	AdrDgts    Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AdrDgts,omitempty"`
	PstlCdDgts Max5NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PstlCdDgts,omitempty"`
}

// May be one of HS25, HS38, HS51, HS01
type Algorithm11Code string

// May be one of HS25, HS38, HS51, HS01, SH31, SH32, SH33, SH35, SHK1, SHK2
type Algorithm16Code string

// May be one of MACC, MCCS, CMA1, MCC1, CMA9, CMA5, CMA2, CM31, CM32, CM33, MCS3, CCA1, CCA2, CCA3
type Algorithm17Code string

// May be one of EA2C, E3DC, DKP9, UKPT, UKA1, EA9C, EA5C, DA12, DA19, DA25, N108, EA5R, EA9R, EA2R, E3DR, E36C, E36R, SD5C
type Algorithm18Code string

// May be one of ERS2, ERS1, RPSS, ECC5, ECC1, ECC4, ECC2, ECC3, ERS3, ECP2, ECP3, ECP5
type Algorithm19Code string

// May be one of ERSA, RSAO
type Algorithm7Code string

// May be one of MGF1
type Algorithm8Code string

type AlgorithmIdentification12 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter5     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

type AlgorithmIdentification18 struct {
	Algo  Algorithm8Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter9     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

type AlgorithmIdentification19 struct {
	Algo  Algorithm7Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter10    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

type AlgorithmIdentification20 struct {
	Algo  Algorithm19Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter11     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

type AlgorithmIdentification21 struct {
	Algo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
}

type AlgorithmIdentification22 struct {
	Algo  Algorithm17Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter7      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

type AlgorithmIdentification23 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

type AlgorithmIdentification24 struct {
	Algo  Algorithm18Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Algo"`
	Param Parameter12     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Param,omitempty"`
}

// Must match the pattern [A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}
type AnyBICDec2014Identifier string

// May be one of ATTD, SATT, UATT
type AttendanceContext1Code string

// May be one of CNAT, LATT, OATT, OUAT, CATT
type AttributeType1Code string

type AuthenticatedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	Rcpt        []Recipient6Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Rcpt"`
	MACAlgo     AlgorithmIdentification22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MACAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcpsltdCntt"`
	MAC         Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MAC"`
}

// May be one of ICCD, AGNT, MERC, ACQR, ISSR, TRML
type AuthenticationEntity2Code string

// May be one of NPIN, PPSG, PSWD, SCRT, SCNL, SNCT, CPSG, ADDB, BIOM, CDHI, CRYP, CSCV, PSVE, CSEC, ADDS, TOKP
type AuthenticationMethod5Code string

// May be one of NPIN, PPSG, PSWD, SCRT, SCNL, SNCT, CPSG, ADDB, BIOM, CDHI, CRYP, CSCV, PSVE, CSEC, ADDS, MANU, FPIN, TOKP
type AuthenticationMethod6Code string

// May be one of DENY, MRCH, CARD, AUTH, CRPT, UCRP
type AuthenticationResult1Code string

type AuthorisationResult12 struct {
	AuthstnNtty   GenericIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthstnCd,omitempty"`
	TMSTrggr      TMSTrigger1             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TMSTrggr,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{1,30}
type BBANIdentifier string

// May be one of LNGT, NUL8, NULG, NULL, RAND
type BytePadding1Code string

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL, CDFL
type CardDataReading5Code string

// May be one of TAGC, PHYS, BRCD, MGST, CICC, DFLE, CTLS, ECTL, CDFL, SICC, UNKW
type CardDataReading6Code string

type CardDirectDebit2 struct {
	DbtrId      Debtor4                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DbtrId,omitempty"`
	CdtrId      Creditor4                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CdtrId"`
	MndtRltdInf MandateRelatedInformation13 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MndtRltdInf"`
}

// May be one of FFLB, SFLB, NFLB
type CardFallback1Code string

type CardPaymentContext27 struct {
	PmtCntxt     PaymentContext26 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PmtCntxt,omitempty"`
	SaleCntxt    SaleContext3     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleCntxt,omitempty"`
	DrctDbtCntxt CardDirectDebit2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DrctDbtCntxt,omitempty"`
}

type CardPaymentEnvironment68 struct {
	Acqrr             Acquirer4                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Acqrr,omitempty"`
	Mrchnt            Organisation32           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Mrchnt,omitempty"`
	POI               PointOfInteraction8      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 POI,omitempty"`
	Card              PaymentCard28            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Card,omitempty"`
	CstmrDvc          CustomerDevice1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CstmrDvc,omitempty"`
	Wllt              CustomerDevice1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Wllt,omitempty"`
	PmtTkn            CardPaymentToken4        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PmtTkn,omitempty"`
	Crdhldr           Cardholder13             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Crdhldr,omitempty"`
	PrtctdCrdhldrData ContentInformationType17 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtctdCrdhldrData,omitempty"`
}

// May be one of BALC, CACT, CRDP, CAFH, CAVR, CSHW, CSHD, DEFR, LOAD, ORCR, PINC, QUCH, RFND, RESA, VALC, UNLD, CAFT, CAFL, CIDD
type CardPaymentServiceType12Code string

// May be one of IRES, URES, PRES, ARES, FREC, RREC
type CardPaymentServiceType3Code string

// May be one of AGGR, DCCV, GRTT, LOYT, NRES, PUCO, RECP, SOAF, VCAU, INSI, INSA, CSHB, INST, NRFD
type CardPaymentServiceType9Code string

type CardPaymentToken4 struct {
	Tkn           Min8Max28NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tkn,omitempty"`
	CardSeqNb     Min2Max3NumericText      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardSeqNb,omitempty"`
	TknXpryDt     Max10Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TknXpryDt,omitempty"`
	TknChrtc      []Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TknChrtc,omitempty"`
	TknRqstr      PaymentTokenIdentifiers1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TknRqstr,omitempty"`
	TknAssrncLvl  float64                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TknAssrncLvl,omitempty"`
	TknAssrncData Max500Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TknAssrncData,omitempty"`
}

type CardPaymentTransaction79 struct {
	SaleRefId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleRefId,omitempty"`
	TxId           TransactionIdentifier1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxId"`
	POIId          GenericIdentification32       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 POIId,omitempty"`
	InitrTxId      Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 InitrTxId,omitempty"`
	RcptTxId       Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RcptTxId,omitempty"`
	TxTp           CardPaymentServiceType12Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxTp"`
	AddtlSvc       []CardPaymentServiceType9Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlSvc,omitempty"`
	SvcAttr        CardPaymentServiceType3Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SvcAttr,omitempty"`
	CardDataNtryMd CardDataReading5Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardDataNtryMd,omitempty"`
	TxRslt         CardPaymentTransactionResult3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxRslt,omitempty"`
}

type CardPaymentTransaction83 struct {
	MrchntCtgyCd     Min3Max4Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MrchntCtgyCd"`
	CstmrCnsnt       []bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CstmrCnsnt,omitempty"`
	CardPrgrmmPropsd []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardPrgrmmPropsd,omitempty"`
	CardPrgrmmApld   []Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardPrgrmmApld,omitempty"`
	SaleRefId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleRefId,omitempty"`
	TxId             TransactionIdentifier1          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxId"`
	OrgnlTx          CardPaymentTransaction79        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 OrgnlTx,omitempty"`
	TxSucss          bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxSucss"`
	Rvsl             bool                            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Rvsl,omitempty"`
	FailrRsn         []FailureReason3Code            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 FailrRsn,omitempty"`
	InitrTxId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 InitrTxId,omitempty"`
	RcptTxId         Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RcptTxId,omitempty"`
	RcncltnId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RcncltnId,omitempty"`
	IntrchngData     Max140Text                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IntrchngData,omitempty"`
	TxDtls           CardPaymentTransactionDetails34 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxDtls"`
	AuthstnRslt      AuthorisationResult12           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthstnRslt,omitempty"`
	AddtlTxData      []Max70Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlTxData,omitempty"`
}

type CardPaymentTransactionDetails34 struct {
	Ccy         ActiveCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Ccy,omitempty"`
	TtlAmt      float64            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TtlAmt"`
	VldtyDt     ISODate            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 VldtyDt,omitempty"`
	ICCRltdData Max10000Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ICCRltdData,omitempty"`
}

type CardPaymentTransactionResult3 struct {
	AuthstnNtty   GenericIdentification90 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthstnNtty,omitempty"`
	RspnToAuthstn ResponseType5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RspnToAuthstn"`
	AuthstnCd     Min6Max8Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthstnCd,omitempty"`
}

// May be one of COMM, CONS
type CardProductType1Code string

type Cardholder13 struct {
	Id           PersonIdentification15           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id,omitempty"`
	Nm           Max45Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Nm,omitempty"`
	Lang         string                           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Lang,omitempty"`
	BllgAdr      PostalAddress22                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 BllgAdr,omitempty"`
	ShppgAdr     PostalAddress22                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShppgAdr,omitempty"`
	TripNb       Max35Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TripNb,omitempty"`
	Vhcl         Vehicle1                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vhcl,omitempty"`
	Authntcn     []CardholderAuthentication11     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Authntcn,omitempty"`
	TxVrfctnRslt []TransactionVerificationResult4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxVrfctnRslt,omitempty"`
	PrsnlData    Max70Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrsnlData,omitempty"`
}

type CardholderAuthentication11 struct {
	AuthntcnMtd       AuthenticationMethod5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcnMtd"`
	AuthntcnVal       Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcnVal,omitempty"`
	PrtctdAuthntcnVal ContentInformationType17  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtctdAuthntcnVal,omitempty"`
	CrdhldrOnLinePIN  OnLinePIN6                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CrdhldrOnLinePIN,omitempty"`
	CrdhldrId         PersonIdentification15    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CrdhldrId,omitempty"`
	AdrVrfctn         AddressVerification1      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AdrVrfctn,omitempty"`
	AuthntcnTp        Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcnTp,omitempty"`
	AuthntcnLvl       Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcnLvl,omitempty"`
	AuthntcnRslt      AuthenticationResult1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcnRslt,omitempty"`
	AuthntcnAddtlInf  Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcnAddtlInf,omitempty"`
}

// May be one of APKI, CHDT, MNSG, MNVR, FBIG, FBIO, FDSG, FCPN, FEPN, NPIN, PKIS, SCEC, NBIO, NOVF, OTHR
type CardholderVerificationCapability4Code string

type CashAccountIdentification7Choice struct {
	IBAN     IBAN2007Identifier               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IBAN"`
	BBAN     BBANIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 BBAN"`
	UPIC     UPICIdentifier                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 UPIC"`
	DmstAcct SimpleIdentificationInformation4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DmstAcct"`
}

type CertificateIssuer1 struct {
	RltvDstngshdNm []RelativeDistinguishedName1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RltvDstngshdNm"`
}

type CommunicationAddress9 struct {
	PstlAdr      PostalAddress22 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PstlAdr,omitempty"`
	Email        Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Email,omitempty"`
	URLAdr       Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 URLAdr,omitempty"`
	Phne         PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Phne,omitempty"`
	CstmrSvc     PhoneNumber     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CstmrSvc,omitempty"`
	AddtlCtctInf Max256Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlCtctInf,omitempty"`
}

type CommunicationCharacteristics3 struct {
	ComTp   POICommunicationType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ComTp"`
	RmotPty []PartyType7Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RmotPty"`
	Actv    bool                      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Actv"`
}

type ContentInformationType16 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CnttTp"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcdData"`
}

type ContentInformationType17 struct {
	CnttTp     ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CnttTp"`
	EnvlpdData EnvelopedData5   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 EnvlpdData"`
}

type ContentInformationType19 struct {
	CnttTp       ContentType2Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CnttTp"`
	EnvlpdData   EnvelopedData5     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 EnvlpdData,omitempty"`
	AuthntcdData AuthenticatedData5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AuthntcdData,omitempty"`
	SgndData     SignedData5        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SgndData,omitempty"`
	DgstdData    DigestedData5      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstdData,omitempty"`
}

// May be one of DATA, SIGN, EVLP, DGST, AUTH
type ContentType2Code string

// Must match the pattern [A-Z]{2,2}
type CountryCode string

type Creditor4 struct {
	Cdtr   PartyIdentification178Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cdtr"`
	RegnId Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RegnId,omitempty"`
}

type CryptographicKey13 struct {
	Id           Max140Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	AddtlId      Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlId,omitempty"`
	Vrsn         Max256Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn"`
	Tp           CryptographicKeyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp,omitempty"`
	Fctn         []KeyUsage1Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Fctn,omitempty"`
	ActvtnDt     ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ActvtnDt,omitempty"`
	DeactvtnDt   ISODateTime               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DeactvtnDt,omitempty"`
	KeyVal       ContentInformationType19  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyVal,omitempty"`
	KeyChckVal   Max35Binary               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyChckVal,omitempty"`
	AddtlMgmtInf []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlMgmtInf,omitempty"`
}

// May be one of AES2, EDE3, DKP9, AES9, AES5, EDE4
type CryptographicKeyType3Code string

type CustomerDevice1 struct {
	Id    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id,omitempty"`
	Tp    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp,omitempty"`
	Prvdr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Prvdr,omitempty"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 BirthDt"`
	PrvcOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CtryOfBirth"`
}

type Debtor4 struct {
	Dbtr   PartyIdentification178Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Dbtr,omitempty"`
	AcctId CashAccountIdentification7Choice `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AcctId,omitempty"`
}

type DigestedData5 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo"`
	NcpsltdCntt EncapsulatedContent3      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcpsltdCntt"`
	Dgst        Max140Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Dgst"`
}

type DisplayCapabilities4 struct {
	Dstn      []UserInterface4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Dstn"`
	AvlblFrmt []OutputFormat1Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AvlblFrmt,omitempty"`
	NbOfLines float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NbOfLines,omitempty"`
	LineWidth float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 LineWidth,omitempty"`
	AvlblLang []string             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AvlblLang,omitempty"`
}

type Document struct {
	AccptrCxlAdvc AcceptorCancellationAdviceV08 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AccptrCxlAdvc"`
}

type EncapsulatedContent3 struct {
	CnttTp ContentType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CnttTp"`
	Cntt   Max100KBinary    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cntt,omitempty"`
}

type EncryptedContent4 struct {
	CnttTp         ContentType2Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CnttTp"`
	CnttNcrptnAlgo AlgorithmIdentification24 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CnttNcrptnAlgo,omitempty"`
	NcrptdData     Max100KBinary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptdData"`
}

// May be one of TR31, TR34, I238
type EncryptionFormat2Code string

type EnvelopedData5 struct {
	Vrsn       float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	OrgtrInf   OriginatorInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 OrgtrInf,omitempty"`
	Rcpt       []Recipient6Choice     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Rcpt"`
	NcrptdCntt EncryptedContent4      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptdCntt,omitempty"`
}

// Must match the pattern [a-zA-Z0-9]{3}
type Exact3AlphaNumericText string

// Must match the pattern [0-9]{3}
type Exact3NumericText string

// May be one of CDCL, CUCL, MALF, FDCL, NDCL, PART, SFRD, TIMO, LATE, UCMP, USND, SECU
type FailureReason3Code string

type GenericIdentification32 struct {
	Id     Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Tp     PartyType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp,omitempty"`
	Issr   PartyType4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr,omitempty"`
	ShrtNm Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShrtNm,omitempty"`
}

type GenericIdentification36 struct {
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Issr    Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr"`
	SchmeNm Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SchmeNm,omitempty"`
}

type GenericIdentification4 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	IdTp Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IdTp"`
}

type GenericIdentification48 struct {
	Id   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Vrsn Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn"`
	Issr Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr"`
}

type GenericIdentification53 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp,omitempty"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShrtNm,omitempty"`
}

type GenericIdentification76 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Tp     PartyType3Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShrtNm,omitempty"`
}

type GenericIdentification90 struct {
	Id     Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id,omitempty"`
	Tp     PartyType14Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp"`
	Issr   PartyType4Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr,omitempty"`
	Ctry   Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Ctry,omitempty"`
	ShrtNm Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShrtNm,omitempty"`
}

type GenericIdentification94 struct {
	Id       Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Tp       PartyType3Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp,omitempty"`
	Issr     PartyType4Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr,omitempty"`
	Ctry     Min2Max3AlphaText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Ctry,omitempty"`
	ShrtNm   Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShrtNm,omitempty"`
	RmotAccs NetworkParameters5 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RmotAccs,omitempty"`
}

type GenericInformation1 struct {
	Nm  Max70Text  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Nm"`
	Val Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Val,omitempty"`
}

type Header36 struct {
	MsgFctn        MessageFunction14Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MsgFctn"`
	PrtcolVrsn     Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtcolVrsn"`
	XchgId         float64                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 XchgId"`
	ReTrnsmssnCntr Max3NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ReTrnsmssnCntr,omitempty"`
	CreDtTm        ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CreDtTm"`
	InitgPty       GenericIdentification53 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 InitgPty"`
	RcptPty        GenericIdentification94 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RcptPty,omitempty"`
	Tracblt        []Traceability5         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tracblt,omitempty"`
}

// Must match the pattern [A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}
type IBAN2007Identifier string

// Must match the pattern [0-9]{3,3}
type ISO3NumericCountryCode string

type ISODate time.Time

func (t *ISODate) UnmarshalText(text []byte) error {
	return (*xsdDate)(t).UnmarshalText(text)
}
func (t ISODate) MarshalText() ([]byte, error) {
	return xsdDate(t).MarshalText()
}

type ISODateTime time.Time

func (t *ISODateTime) UnmarshalText(text []byte) error {
	return (*xsdDateTime)(t).UnmarshalText(text)
}
func (t ISODateTime) MarshalText() ([]byte, error) {
	return xsdDateTime(t).MarshalText()
}

type IssuerAndSerialNumber1 struct {
	Issr  CertificateIssuer1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Issr"`
	SrlNb Max35Binary        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SrlNb"`
}

type KEK5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	KEKId         KEKIdentifier2            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KEKId"`
	KeyNcrptnAlgo AlgorithmIdentification23 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyNcrptnAlgo"`
	NcrptdKey     Max500Binary              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptdKey"`
}

type KEKIdentifier2 struct {
	KeyId     Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyId"`
	KeyVrsn   Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyVrsn"`
	SeqNb     float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SeqNb,omitempty"`
	DerivtnId Min5Max16Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DerivtnId,omitempty"`
}

type KeyTransport5 struct {
	Vrsn          float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	RcptId        Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RcptId"`
	KeyNcrptnAlgo AlgorithmIdentification19 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyNcrptnAlgo"`
	NcrptdKey     Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptdKey"`
}

// May be one of ENCR, DCPT, DENC, DDEC, TRNI, TRNX, MACG, MACV, SIGG, SUGV, PINE, PIND, PINV, KEYG, KEYI, KEYX, KEYD
type KeyUsage1Code string

// May be one of FIXD, ABRD, NMDC, MOTO, HOME
type LocationCategory1Code string

// May be one of INDR, IPMP, MPOI, MPMP, MSLE, SSLE, VNDG
type LocationCategory3Code string

type MandateRelatedInformation13 struct {
	MndtId    Max35Text    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MndtId"`
	DtOfSgntr ISODate      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DtOfSgntr,omitempty"`
	MndtImg   Max2MBBinary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MndtImg,omitempty"`
}

type Max10000Binary []byte

func (t *Max10000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max100KBinary []byte

func (t *Max100KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max100KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max104Text string

type Max10KBinary []byte

func (t *Max10KBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max10KBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max10Text string

type Max140Binary []byte

func (t *Max140Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max140Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max140Text string

// Must match the pattern [0-9]{1,15}
type Max15NumericText string

// Must be at least 1 items long
type Max16Text string

// Must be at least 1 items long
type Max256Text string

type Max2MBBinary []byte

func (t *Max2MBBinary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max2MBBinary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,2}
type Max2NumericText string

type Max3000Binary []byte

func (t *Max3000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max3000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max35Binary []byte

func (t *Max35Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max35Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must match the pattern [0-9]{1,35}
type Max35NumericText string

// Must be at least 1 items long
type Max35Text string

// Must be at least 1 items long
type Max37Text string

// Must match the pattern [0-9]{1,3}
type Max3NumericText string

// Must be at least 1 items long
type Max3Text string

// Must be at least 1 items long
type Max45Text string

type Max5000Binary []byte

func (t *Max5000Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max5000Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

type Max500Binary []byte

func (t *Max500Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Max500Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 1 items long
type Max500Text string

// Must match the pattern [0-9]{1,5}
type Max5NumericText string

// Must be at least 1 items long
type Max6Text string

// Must be at least 1 items long
type Max70Text string

// Must be at least 1 items long
type Max76Text string

type MemoryCharacteristics1 struct {
	Id     Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	TtlSz  float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TtlSz"`
	FreeSz float64         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 FreeSz"`
	Unit   MemoryUnit1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Unit"`
}

// May be one of BYTE, EXAB, GIGA, KILO, MEGA, PETA, TERA
type MemoryUnit1Code string

// May be one of AUTQ, AUTP, CCAV, CCAK, CCAQ, CCAP, CMPV, CMPK, DCAV, DCRR, DCCQ, DCCP, DGNP, DGNQ, FAUQ, FAUP, FCMV, FCMK, FRVA, FRVR, RCLQ, RCLP, RVRA, RVRR, CDDQ, CDDK, CDDR, CDDP
type MessageFunction14Code string

// Must match the pattern [a-zA-Z]{2,3}
type Min2Max3AlphaText string

// Must match the pattern [0-9]{2,3}
type Min2Max3NumericText string

// Must be at least 3 items long
type Min3Max4Text string

type Min5Max16Binary []byte

func (t *Min5Max16Binary) UnmarshalText(text []byte) error {
	return (*xsdBase64Binary)(t).UnmarshalText(text)
}
func (t Min5Max16Binary) MarshalText() ([]byte, error) {
	return xsdBase64Binary(t).MarshalText()
}

// Must be at least 6 items long
type Min6Max8Text string

// Must match the pattern [0-9]{8,28}
type Min8Max28NumericText string

type NameAndAddress6 struct {
	Nm  Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Nm"`
	Adr PostalAddress2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Adr"`
}

type NetworkParameters4 struct {
	NtwkTp NetworkType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NtwkTp"`
	AdrVal Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AdrVal"`
}

type NetworkParameters5 struct {
	Adr        []NetworkParameters4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Adr"`
	UsrNm      Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 UsrNm,omitempty"`
	AccsCd     Max35Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AccsCd,omitempty"`
	SvrCert    []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SvrCert,omitempty"`
	SvrCertIdr []Max140Binary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SvrCertIdr,omitempty"`
	ClntCert   []Max10KBinary       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ClntCert,omitempty"`
	SctyPrfl   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SctyPrfl,omitempty"`
}

// May be one of IPNW, PSTN
type NetworkType1Code string

// May be one of OFLN, ONLN, SMON
type OnLineCapability1Code string

type OnLinePIN6 struct {
	NcrptdPINBlck ContentInformationType17 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptdPINBlck"`
	PINFrmt       PINFormat3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PINFrmt"`
	AddtlInpt     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlInpt,omitempty"`
}

type Organisation26 struct {
	CmonNm       Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CmonNm"`
	Adr          Max140Text             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Adr,omitempty"`
	CtryCd       ISO3NumericCountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CtryCd"`
	MrchntCtgyCd Min3Max4Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MrchntCtgyCd"`
	RegdIdr      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RegdIdr"`
}

type Organisation32 struct {
	Id          GenericIdentification32 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id,omitempty"`
	CmonNm      Max70Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CmonNm,omitempty"`
	LctnCtgy    LocationCategory1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 LctnCtgy,omitempty"`
	LctnAndCtct CommunicationAddress9   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 LctnAndCtct,omitempty"`
	SchmeData   Max140Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SchmeData,omitempty"`
}

type OriginatorInformation1 struct {
	Cert []Max5000Binary `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cert,omitempty"`
}

// May be one of MREF, TEXT, HTML
type OutputFormat1Code string

// May be one of ISO0, ISO1, ISO2, ISO3, ISO4, ISO5
type PINFormat3Code string

// May be one of BLTH, ETHR, GPRS, GSMF, PSTN, RS23, USBD, USBH, WIFI, WT2G, WT3G, WT4G, WT5G
type POICommunicationType2Code string

// May be one of APPL, CERT, EVAL
type POIComponentAssessment1Code string

// May be one of WAIT, OUTD, OPER, DACT
type POIComponentStatus1Code string

// May be one of AQPP, APPR, TLPR, SCPR, SERV, TERM, DVCE, SECM, APLI, EMVK, EMVO, MDWR, DRVR, OPST, MRPR, CRTF, TMSP, SACP, SAPR
type POIComponentType5Code string

type Parameter10 struct {
	NcrptnFrmt   EncryptionFormat2Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptnFrmt,omitempty"`
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo,omitempty"`
	MskGnrtrAlgo AlgorithmIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MskGnrtrAlgo,omitempty"`
}

type Parameter11 struct {
	DgstAlgo     Algorithm16Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo"`
	MskGnrtrAlgo AlgorithmIdentification12 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MskGnrtrAlgo"`
	SaltLngth    float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaltLngth"`
	TrlrFld      float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TrlrFld,omitempty"`
}

type Parameter12 struct {
	NcrptnFrmt   EncryptionFormat2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcrptnFrmt,omitempty"`
	InitlstnVctr Max500Binary          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 BPddg,omitempty"`
}

type Parameter5 struct {
	DgstAlgo Algorithm11Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo,omitempty"`
}

type Parameter7 struct {
	InitlstnVctr Max500Binary     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 InitlstnVctr,omitempty"`
	BPddg        BytePadding1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 BPddg,omitempty"`
}

type Parameter9 struct {
	DgstAlgo Algorithm16Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo,omitempty"`
}

type PartyIdentification178Choice struct {
	AnyBIC   AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AnyBIC"`
	PrtryId  GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtryId"`
	NmAndAdr NameAndAddress6         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NmAndAdr"`
}

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS, ICCA
type PartyType14Code string

// May be one of OPOI, MERC, ACCP, ITAG, ACQR, CISS, DLIS
type PartyType3Code string

// May be one of MERC, ACCP, ITAG, ACQR, CISS, TAXH
type PartyType4Code string

// May be one of ACQR, ITAG, PCPT, TMGT, SALE
type PartyType7Code string

type PaymentCard28 struct {
	PrtctdCardData ContentInformationType17 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtctdCardData,omitempty"`
	PrvtCardData   Max100KBinary            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrvtCardData,omitempty"`
	PlainCardData  PlainCardData15          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PlainCardData,omitempty"`
	PmtAcctRef     Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PmtAcctRef,omitempty"`
	MskdPAN        string                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MskdPAN,omitempty"`
	IssrBIN        Max15NumericText         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IssrBIN,omitempty"`
	CardCtryCd     Max3Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardCtryCd,omitempty"`
	CardCcyCd      Exact3AlphaNumericText   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardCcyCd,omitempty"`
	CardPdctPrfl   Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardPdctPrfl,omitempty"`
	CardBrnd       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardBrnd,omitempty"`
	CardPdctTp     CardProductType1Code     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardPdctTp,omitempty"`
	CardPdctSubTp  Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardPdctSubTp,omitempty"`
	IntrnlCard     bool                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IntrnlCard,omitempty"`
	AllwdPdct      []Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AllwdPdct,omitempty"`
	SvcOptn        Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SvcOptn,omitempty"`
	AddtlCardData  Max70Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlCardData,omitempty"`
}

type PaymentContext26 struct {
	CardPres       bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardPres,omitempty"`
	CrdhldrPres    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CrdhldrPres,omitempty"`
	OnLineCntxt    bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 OnLineCntxt,omitempty"`
	AttndncCntxt   AttendanceContext1Code        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AttndncCntxt,omitempty"`
	TxEnvt         TransactionEnvironment1Code   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxEnvt,omitempty"`
	TxChanl        TransactionChannel5Code       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxChanl,omitempty"`
	AttndntMsgCpbl bool                          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AttndntMsgCpbl,omitempty"`
	AttndntLang    string                        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AttndntLang,omitempty"`
	CardDataNtryMd CardDataReading6Code          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardDataNtryMd,omitempty"`
	FllbckInd      CardFallback1Code             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 FllbckInd,omitempty"`
	SpprtdOptn     []SupportedPaymentOption1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SpprtdOptn,omitempty"`
}

type PaymentTokenIdentifiers1 struct {
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrvdrId"`
	RqstrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RqstrId"`
}

type PersonIdentification15 struct {
	DrvrLicNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DrvrLicNb,omitempty"`
	DrvrLicLctn     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DrvrLicLctn,omitempty"`
	DrvrLicNm       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DrvrLicNm,omitempty"`
	DrvrId          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DrvrId,omitempty"`
	CstmrNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CstmrNb,omitempty"`
	SclSctyNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SclSctyNb,omitempty"`
	AlnRegnNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AlnRegnNb,omitempty"`
	PsptNb          Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PsptNb,omitempty"`
	TaxIdNb         Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TaxIdNb,omitempty"`
	IdntyCardNb     Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IdntyCardNb,omitempty"`
	MplyrIdNb       Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MplyrIdNb,omitempty"`
	MplyeeIdNb      Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MplyeeIdNb,omitempty"`
	JobNb           Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 JobNb,omitempty"`
	Dept            Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Dept,omitempty"`
	EmailAdr        Max256Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 EmailAdr,omitempty"`
	DtAndPlcOfBirth DateAndPlaceOfBirth1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DtAndPlcOfBirth,omitempty"`
	Othr            []GenericIdentification4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Othr,omitempty"`
}

// Must match the pattern \+[0-9]{1,3}-[0-9()+\-]{1,30}
type PhoneNumber string

type PlainCardData15 struct {
	PAN       Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PAN"`
	CardSeqNb Min2Max3NumericText  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardSeqNb,omitempty"`
	FctvDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 FctvDt,omitempty"`
	XpryDt    Max10Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 XpryDt"`
	SvcCd     Exact3NumericText    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SvcCd,omitempty"`
	Trck1     Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Trck1,omitempty"`
	Trck2     Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Trck2,omitempty"`
	Trck3     Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Trck3,omitempty"`
	CrdhldrNm Max45Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CrdhldrNm,omitempty"`
}

type PlainCardData17 struct {
	PAN           Min8Max28NumericText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PAN,omitempty"`
	Trck1         Max76Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Trck1,omitempty"`
	Trck2         Max37Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Trck2,omitempty"`
	Trck3         Max104Text           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Trck3,omitempty"`
	AddtlCardData []Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlCardData,omitempty"`
	NtryMd        CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NtryMd,omitempty"`
}

type PointOfInteraction8 struct {
	Id           GenericIdentification53         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	SysNm        Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SysNm,omitempty"`
	GrpId        Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 GrpId,omitempty"`
	Cpblties     PointOfInteractionCapabilities6 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cpblties,omitempty"`
	TmZone       Max70Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TmZone,omitempty"`
	TermnlIntgtn LocationCategory3Code           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TermnlIntgtn,omitempty"`
	Cmpnt        []PointOfInteractionComponent8  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cmpnt,omitempty"`
}

type PointOfInteractionCapabilities6 struct {
	CardRdngCpblties      []CardDataReading5Code                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardRdngCpblties,omitempty"`
	CrdhldrVrfctnCpblties []CardholderVerificationCapability4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CrdhldrVrfctnCpblties,omitempty"`
	PINLngthCpblties      float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PINLngthCpblties,omitempty"`
	ApprvlCdLngth         float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ApprvlCdLngth,omitempty"`
	MxScrptLngth          float64                                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MxScrptLngth,omitempty"`
	CardCaptrCpbl         bool                                    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CardCaptrCpbl,omitempty"`
	OnLineCpblties        OnLineCapability1Code                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 OnLineCpblties,omitempty"`
	MsgCpblties           []DisplayCapabilities4                  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MsgCpblties,omitempty"`
}

type PointOfInteractionComponent8 struct {
	Tp       POIComponentType5Code                       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp"`
	Id       PointOfInteractionComponentIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
	Sts      PointOfInteractionComponentStatus3          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Sts,omitempty"`
	StdCmplc []GenericIdentification48                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 StdCmplc,omitempty"`
	Chrtcs   PointOfInteractionComponentCharacteristics4 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Chrtcs,omitempty"`
	Assmnt   []PointOfInteractionComponentAssessment1    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Assmnt,omitempty"`
}

type PointOfInteractionComponentAssessment1 struct {
	Tp      POIComponentAssessment1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp"`
	Assgnr  []Max35Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Assgnr"`
	DlvryDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DlvryDt,omitempty"`
	XprtnDt ISODateTime                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 XprtnDt,omitempty"`
	Nb      Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Nb"`
}

type PointOfInteractionComponentCharacteristics4 struct {
	Mmry           []MemoryCharacteristics1        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Mmry,omitempty"`
	Com            []CommunicationCharacteristics3 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Com,omitempty"`
	SctyAccsMdls   float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SctyAccsMdls,omitempty"`
	SbcbrIdntyMdls float64                         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SbcbrIdntyMdls,omitempty"`
	SctyElmt       []CryptographicKey13            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SctyElmt,omitempty"`
}

type PointOfInteractionComponentIdentification1 struct {
	ItmNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ItmNb,omitempty"`
	PrvdrId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrvdrId,omitempty"`
	Id      Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id,omitempty"`
	SrlNb   Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SrlNb,omitempty"`
}

type PointOfInteractionComponentStatus3 struct {
	VrsnNb Max256Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 VrsnNb,omitempty"`
	Sts    POIComponentStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Sts,omitempty"`
	XpryDt ISODate                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 XpryDt,omitempty"`
}

type PostalAddress2 struct {
	StrtNm      Max70Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 StrtNm,omitempty"`
	PstCdId     Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PstCdId"`
	TwnNm       Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TwnNm"`
	CtrySubDvsn Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CtrySubDvsn,omitempty"`
	Ctry        CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Ctry"`
}

type PostalAddress22 struct {
	AdrTp       AddressType2Code  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AdrTp,omitempty"`
	Dept        Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Dept,omitempty"`
	SubDept     Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SubDept,omitempty"`
	AdrLine     []Max70Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AdrLine,omitempty"`
	StrtNm      Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 StrtNm,omitempty"`
	BldgNb      Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 BldgNb,omitempty"`
	PstCd       Max16Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PstCd,omitempty"`
	TwnNm       Max70Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TwnNm,omitempty"`
	CtrySubDvsn []Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CtrySubDvsn,omitempty"`
	CtryCd      Min2Max3AlphaText `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CtryCd,omitempty"`
}

type Recipient5Choice struct {
	IssrAndSrlNb IssuerAndSerialNumber1 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 IssrAndSrlNb"`
	KeyIdr       KEKIdentifier2         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyIdr"`
}

type Recipient6Choice struct {
	KeyTrnsprt KeyTransport5  `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyTrnsprt"`
	KEK        KEK5           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KEK"`
	KeyIdr     KEKIdentifier2 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 KeyIdr"`
}

type RelativeDistinguishedName1 struct {
	AttrTp  AttributeType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AttrTp"`
	AttrVal Max140Text         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AttrVal"`
}

// May be one of APPR, DECL, PART
type Response4Code string

type ResponseType5 struct {
	Rspn         Response4Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Rspn"`
	RspnRsn      Max35Text     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RspnRsn,omitempty"`
	AddtlRspnInf Max140Text    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlRspnInf,omitempty"`
}

type SaleContext3 struct {
	SaleId           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleId,omitempty"`
	SaleRefNb        Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleRefNb,omitempty"`
	SaleRcncltnId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleRcncltnId,omitempty"`
	CshrId           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CshrId,omitempty"`
	CshrLang         []string               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CshrLang,omitempty"`
	ShftNb           Max2NumericText        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ShftNb,omitempty"`
	CstmrOrdrReqFlg  bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 CstmrOrdrReqFlg,omitempty"`
	PurchsOrdrNb     Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PurchsOrdrNb,omitempty"`
	InvcNb           Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 InvcNb,omitempty"`
	DlvryNoteNb      Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DlvryNoteNb,omitempty"`
	SpnsrdMrchnt     []Organisation26       `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SpnsrdMrchnt,omitempty"`
	SpltPmt          bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SpltPmt,omitempty"`
	RmngAmt          float64                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RmngAmt,omitempty"`
	ForceOnlnFlg     bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ForceOnlnFlg,omitempty"`
	ReuseCardDataFlg bool                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 ReuseCardDataFlg,omitempty"`
	AllwdNtryMd      []CardDataReading6Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AllwdNtryMd,omitempty"`
	SaleTknScp       SaleTokenScope1Code    `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SaleTknScp,omitempty"`
	AddtlSaleData    Max70Text              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlSaleData,omitempty"`
}

// May be one of MULT, SNGL
type SaleTokenScope1Code string

type SignedData5 struct {
	Vrsn        float64                     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	DgstAlgo    []AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo,omitempty"`
	NcpsltdCntt EncapsulatedContent3        `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NcpsltdCntt,omitempty"`
	Cert        []Max5000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Cert,omitempty"`
	Sgnr        []Signer4                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Sgnr,omitempty"`
}

type Signer4 struct {
	Vrsn        float64                   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Vrsn,omitempty"`
	SgnrId      Recipient5Choice          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SgnrId,omitempty"`
	DgstAlgo    AlgorithmIdentification21 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DgstAlgo"`
	SgndAttrbts []GenericInformation1     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SgndAttrbts,omitempty"`
	SgntrAlgo   AlgorithmIdentification20 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 SgntrAlgo"`
	Sgntr       Max3000Binary             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Sgntr"`
}

type SimpleIdentificationInformation4 struct {
	Id Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Id"`
}

// May be one of PART, MSRV
type SupportedPaymentOption1Code string

// May be one of CRIT, ASAP, DTIM
type TMSContactLevel1Code string

type TMSTrigger1 struct {
	TMSCtctLvl  TMSContactLevel1Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TMSCtctLvl"`
	TMSId       Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TMSId,omitempty"`
	TMSCtctDtTm ISODateTime          `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TMSCtctDtTm,omitempty"`
}

type Traceability5 struct {
	RlayId      GenericIdentification76 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RlayId"`
	PrtcolNm    Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtcolNm,omitempty"`
	PrtcolVrsn  Max6Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 PrtcolVrsn,omitempty"`
	TracDtTmIn  ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TracDtTmIn"`
	TracDtTmOut ISODateTime             `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TracDtTmOut"`
}

// May be one of MAIL, TLPH, ECOM, TVPY, SECM, MOBL, MPOS
type TransactionChannel5Code string

// May be one of MERC, PRIV, PUBL
type TransactionEnvironment1Code string

type TransactionIdentifier1 struct {
	TxDtTm ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxDtTm"`
	TxRef  Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TxRef"`
}

type TransactionVerificationResult4 struct {
	Mtd        AuthenticationMethod6Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Mtd"`
	VrfctnNtty AuthenticationEntity2Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 VrfctnNtty,omitempty"`
	Rslt       Verification1Code         `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Rslt,omitempty"`
	AddtlRslt  Max500Text                `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlRslt,omitempty"`
}

// Must match the pattern [0-9]{8,17}
type UPICIdentifier string

// May be one of CDSP, CRCP, MDSP, MRCP, CRDO
type UserInterface4Code string

type Vehicle1 struct {
	VhclNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 VhclNb,omitempty"`
	TrlrNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TrlrNb,omitempty"`
	VhclTag        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 VhclTag,omitempty"`
	VhclTagNtryMd  CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 VhclTagNtryMd,omitempty"`
	UnitNb         Max35NumericText     `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 UnitNb,omitempty"`
	RplcmntCar     bool                 `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RplcmntCar,omitempty"`
	Odmtr          float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Odmtr,omitempty"`
	Hbmtr          float64              `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Hbmtr,omitempty"`
	TrlrHrs        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 TrlrHrs,omitempty"`
	RefrHrs        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 RefrHrs,omitempty"`
	MntncId        Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 MntncId,omitempty"`
	DrvrOrVhclCard PlainCardData17      `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 DrvrOrVhclCard,omitempty"`
	AddtlVhclData  []Vehicle2           `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 AddtlVhclData,omitempty"`
}

type Vehicle2 struct {
	Tp     Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Tp,omitempty"`
	NtryMd CardDataReading5Code `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 NtryMd,omitempty"`
	Data   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:caaa.007.001.08 Data"`
}

// May be one of FAIL, MISS, NOVF, PART, SUCC, ERRR
type Verification1Code string

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}
func _marshalTime(t time.Time, format string) ([]byte, error) {
	return []byte(t.Format(format + "Z07:00")), nil
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return _marshalTime((time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
